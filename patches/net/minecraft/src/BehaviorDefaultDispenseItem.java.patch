--- net/minecraft/src/BehaviorDefaultDispenseItem.java
+++ net/minecraft/src/BehaviorDefaultDispenseItem.java
@@ -1,45 +1,58 @@
 package net.minecraft.src;
 
 public class BehaviorDefaultDispenseItem implements IBehaviorDispenseItem {
-	public final ItemStack dispense(IBlockSource var1, ItemStack var2) {
-		ItemStack var3 = this.dispenseStack(var1, var2);
-		this.playDispenseSound(var1);
-		this.spawnDispenseParticles(var1, BlockDispenser.getFacing(var1.getBlockMetadata()));
+
+	/**
+	 * Dispenses the specified ItemStack from a dispenser.
+	 */
+	public final ItemStack dispense(IBlockSource par1IBlockSource, ItemStack par2ItemStack) {
+		ItemStack var3 = this.dispenseStack(par1IBlockSource, par2ItemStack);
+		this.playDispenseSound(par1IBlockSource);
+		this.spawnDispenseParticles(par1IBlockSource, BlockDispenser.getFacing(par1IBlockSource.getBlockMetadata()));
 		return var3;
 	}
 
-	protected ItemStack dispenseStack(IBlockSource var1, ItemStack var2) {
-		EnumFacing var3 = BlockDispenser.getFacing(var1.getBlockMetadata());
-		IPosition var4 = BlockDispenser.getIPositionFromBlockSource(var1);
-		ItemStack var5 = var2.splitStack(1);
-		doDispense(var1.getWorld(), var5, 6, var3, var4);
-		return var2;
-	}
-
-	public static void doDispense(World var0, ItemStack var1, int var2, EnumFacing var3, IPosition var4) {
-		double var5 = var4.getX();
-		double var7 = var4.getY();
-		double var9 = var4.getZ();
-		EntityItem var11 = new EntityItem(var0, var5, var7 - 0.3D, var9, var1);
-		double var12 = var0.s.nextDouble() * 0.1D + 0.2D;
-		var11.motionX = (double)var3.getFrontOffsetX() * var12;
-		var11.motionY = (double)0.2F;
-		var11.motionZ = (double)var3.getFrontOffsetZ() * var12;
-		var11.motionX += var0.s.nextGaussian() * (double)0.0075F * (double)var2;
-		var11.motionY += var0.s.nextGaussian() * (double)0.0075F * (double)var2;
-		var11.motionZ += var0.s.nextGaussian() * (double)0.0075F * (double)var2;
-		var0.spawnEntityInWorld(var11);
-	}
-
-	protected void playDispenseSound(IBlockSource var1) {
-		var1.getWorld().playAuxSFX(1000, var1.getXInt(), var1.getYInt(), var1.getZInt(), 0);
-	}
-
-	protected void spawnDispenseParticles(IBlockSource var1, EnumFacing var2) {
-		var1.getWorld().playAuxSFX(2000, var1.getXInt(), var1.getYInt(), var1.getZInt(), this.func_82488_a(var2));
-	}
-
-	private int func_82488_a(EnumFacing var1) {
-		return var1.getFrontOffsetX() + 1 + (var1.getFrontOffsetZ() + 1) * 3;
+	/**
+	 * Dispense the specified stack, play the dispense sound and spawn particles.
+	 */
+	protected ItemStack dispenseStack(IBlockSource par1IBlockSource, ItemStack par2ItemStack) {
+		EnumFacing var3 = BlockDispenser.getFacing(par1IBlockSource.getBlockMetadata());
+		IPosition var4 = BlockDispenser.getIPositionFromBlockSource(par1IBlockSource);
+		ItemStack var5 = par2ItemStack.splitStack(1);
+		doDispense(par1IBlockSource.getWorld(), var5, 6, var3, var4);
+		return par2ItemStack;
+	}
+
+	public static void doDispense(World par0World, ItemStack par1ItemStack, int par2, EnumFacing par3EnumFacing, IPosition par4IPosition) {
+		double var5 = par4IPosition.getX();
+		double var7 = par4IPosition.getY();
+		double var9 = par4IPosition.getZ();
+		EntityItem var11 = new EntityItem(par0World, var5, var7 - 0.3D, var9, par1ItemStack);
+		double var12 = par0World.rand.nextDouble() * 0.1D + 0.2D;
+		var11.motionX = (double)par3EnumFacing.getFrontOffsetX() * var12;
+		var11.motionY = 0.20000000298023224D;
+		var11.motionZ = (double)par3EnumFacing.getFrontOffsetZ() * var12;
+		var11.motionX += par0World.rand.nextGaussian() * 0.007499999832361937D * (double)par2;
+		var11.motionY += par0World.rand.nextGaussian() * 0.007499999832361937D * (double)par2;
+		var11.motionZ += par0World.rand.nextGaussian() * 0.007499999832361937D * (double)par2;
+		par0World.spawnEntityInWorld(var11);
+	}
+
+	/**
+	 * Play the dispense sound from the specified block.
+	 */
+	protected void playDispenseSound(IBlockSource par1IBlockSource) {
+		par1IBlockSource.getWorld().playAuxSFX(1000, par1IBlockSource.getXInt(), par1IBlockSource.getYInt(), par1IBlockSource.getZInt(), 0);
+	}
+
+	/**
+	 * Order clients to display dispense particles from the specified block and facing.
+	 */
+	protected void spawnDispenseParticles(IBlockSource par1IBlockSource, EnumFacing par2EnumFacing) {
+		par1IBlockSource.getWorld().playAuxSFX(2000, par1IBlockSource.getXInt(), par1IBlockSource.getYInt(), par1IBlockSource.getZInt(), this.func_82488_a(par2EnumFacing));
+	}
+
+	private int func_82488_a(EnumFacing par1EnumFacing) {
+		return par1EnumFacing.getFrontOffsetX() + 1 + (par1EnumFacing.getFrontOffsetZ() + 1) * 3;
 	}
 }
