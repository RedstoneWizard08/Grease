--- net/minecraft/src/BiomeGenJungle.java
+++ net/minecraft/src/BiomeGenJungle.java
@@ -3,33 +3,38 @@
 import java.util.Random;
 
 public class BiomeGenJungle extends BiomeGenBase {
-	public BiomeGenJungle(int var1) {
-		super(var1);
+	public BiomeGenJungle(int par1) {
+		super(par1);
 		this.theBiomeDecorator.treesPerChunk = 50;
 		this.theBiomeDecorator.grassPerChunk = 25;
 		this.theBiomeDecorator.flowersPerChunk = 4;
-		this.J.add(new SpawnListEntry(EntityOcelot.class, 2, 1, 1));
-		this.K.add(new SpawnListEntry(EntityChicken.class, 10, 4, 4));
-	}
-
-	public WorldGenerator getRandomWorldGenForTrees(Random var1) {
-		return (WorldGenerator)(var1.nextInt(10) == 0 ? this.worldGeneratorBigTree : (var1.nextInt(2) == 0 ? new WorldGenShrub(3, 0) : (var1.nextInt(3) == 0 ? new WorldGenHugeTrees(false, 10 + var1.nextInt(20), 3, 3) : new WorldGenTrees(false, 4 + var1.nextInt(7), 3, 3, true))));
-	}
-
-	public WorldGenerator getRandomWorldGenForGrass(Random var1) {
-		return var1.nextInt(4) == 0 ? new WorldGenTallGrass(Block.tallGrass.blockID, 2) : new WorldGenTallGrass(Block.tallGrass.blockID, 1);
-	}
-
-	public void decorate(World var1, Random var2, int var3, int var4) {
-		super.decorate(var1, var2, var3, var4);
+		this.spawnableMonsterList.add(new SpawnListEntry(EntityOcelot.class, 2, 1, 1));
+		this.spawnableCreatureList.add(new SpawnListEntry(EntityChicken.class, 10, 4, 4));
+	}
+
+	/**
+	 * Gets a WorldGen appropriate for this biome.
+	 */
+	public WorldGenerator getRandomWorldGenForTrees(Random par1Random) {
+		return (WorldGenerator)(par1Random.nextInt(10) == 0 ? this.worldGeneratorBigTree : (par1Random.nextInt(2) == 0 ? new WorldGenShrub(3, 0) : (par1Random.nextInt(3) == 0 ? new WorldGenHugeTrees(false, 10 + par1Random.nextInt(20), 3, 3) : new WorldGenTrees(false, 4 + par1Random.nextInt(7), 3, 3, true))));
+	}
+
+	/**
+	 * Gets a WorldGen appropriate for this biome.
+	 */
+	public WorldGenerator getRandomWorldGenForGrass(Random par1Random) {
+		return par1Random.nextInt(4) == 0 ? new WorldGenTallGrass(Block.tallGrass.blockID, 2) : new WorldGenTallGrass(Block.tallGrass.blockID, 1);
+	}
+
+	public void decorate(World par1World, Random par2Random, int par3, int par4) {
+		super.decorate(par1World, par2Random, par3, par4);
 		WorldGenVines var5 = new WorldGenVines();
 
-		for(int var6 = 0; var6 < 50; ++var6) {
-			int var7 = var3 + var2.nextInt(16) + 8;
+		for (int var6 = 0; var6 < 50; ++var6) {
+			int var7 = par3 + par2Random.nextInt(16) + 8;
 			byte var8 = 64;
-			int var9 = var4 + var2.nextInt(16) + 8;
-			var5.generate(var1, var2, var7, var8, var9);
+			int var9 = par4 + par2Random.nextInt(16) + 8;
+			var5.generate(par1World, par2Random, var7, var8, var9);
 		}
-
 	}
 }
