--- net/minecraft/src/BiomeGenSwamp.java
+++ net/minecraft/src/BiomeGenSwamp.java
@@ -2,9 +2,12 @@
 
 import java.util.Random;
 
+import com.prupe.mcpatcher.cc.ColorizeBlock;
+import com.prupe.mcpatcher.cc.Colorizer;
+
 public class BiomeGenSwamp extends BiomeGenBase {
-	protected BiomeGenSwamp(int var1) {
-		super(var1);
+	protected BiomeGenSwamp(int par1) {
+		super(par1);
 		this.theBiomeDecorator.treesPerChunk = 2;
 		this.theBiomeDecorator.flowersPerChunk = -999;
 		this.theBiomeDecorator.deadBushPerChunk = 1;
@@ -13,22 +16,35 @@
 		this.theBiomeDecorator.clayPerChunk = 1;
 		this.theBiomeDecorator.waterlilyPerChunk = 4;
 		this.waterColorMultiplier = 14745518;
-		this.J.add(new SpawnListEntry(EntitySlime.class, 1, 1, 1));
+		this.spawnableMonsterList.add(new SpawnListEntry(EntitySlime.class, 1, 1, 1));
 	}
 
-	public WorldGenerator getRandomWorldGenForTrees(Random var1) {
+	/**
+	 * Gets a WorldGen appropriate for this biome.
+	 */
+	public WorldGenerator getRandomWorldGenForTrees(Random par1Random) {
 		return this.worldGeneratorSwamp;
 	}
 
+	/**
+	 * Provides the basic grass color based on the biome temperature and rainfall
+	 */
 	public int getBiomeGrassColor() {
 		double var1 = (double)this.getFloatTemperature();
 		double var3 = (double)this.getFloatRainfall();
-		return ((ColorizerGrass.getGrassColor(var1, var3) & 16711422) + 5115470) / 2;
+		// MCPatcher Start
+		return ColorizeBlock.colorizeBiome(((ColorizerGrass.getGrassColor(var1, var3) & 16711422) + 5115470) / 2, Colorizer.COLOR_MAP_SWAMP_GRASS, var1, var3);
+		// MCPatcher End
 	}
 
+	/**
+	 * Provides the basic foliage color based on the biome temperature and rainfall
+	 */
 	public int getBiomeFoliageColor() {
 		double var1 = (double)this.getFloatTemperature();
 		double var3 = (double)this.getFloatRainfall();
-		return ((ColorizerFoliage.getFoliageColor(var1, var3) & 16711422) + 5115470) / 2;
+		// MCPatcher Start
+		return ColorizeBlock.colorizeBiome(((ColorizerFoliage.getFoliageColor(var1, var3) & 16711422) + 5115470) / 2, Colorizer.COLOR_MAP_SWAMP_FOLIAGE, var1, var3);
+		// MCPatcher End
 	}
 }
