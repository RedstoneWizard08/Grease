--- net/minecraft/src/BlockBreakable.java
+++ net/minecraft/src/BlockBreakable.java
@@ -2,24 +2,36 @@
 
 public class BlockBreakable extends Block {
 	private boolean localFlag;
-	private String b;
+	private String breakableBlockIcon;
 
-	protected BlockBreakable(int var1, String var2, Material var3, boolean var4) {
-		super(var1, var3);
-		this.localFlag = var4;
-		this.b = var2;
+	protected BlockBreakable(int par1, String par2Str, Material par3Material, boolean par4) {
+		super(par1, par3Material);
+		this.localFlag = par4;
+		this.breakableBlockIcon = par2Str;
 	}
 
+	/**
+	 * Is this block (a) opaque and (b) a full 1m cube?  This determines whether or not to render the shared face of two
+	 * adjacent blocks and also whether the player can attach torches, redstone wire, etc to this block.
+	 */
 	public boolean isOpaqueCube() {
 		return false;
 	}
 
-	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
-		int var6 = var1.getBlockId(var2, var3, var4);
-		return !this.localFlag && var6 == this.blockID ? false : super.shouldSideBeRendered(var1, var2, var3, var4, var5);
+	/**
+	 * Returns true if the given side of this block type should be rendered, if the adjacent block is at the given
+	 * coordinates.  Args: blockAccess, x, y, z, side
+	 */
+	public boolean shouldSideBeRendered(IBlockAccess par1IBlockAccess, int par2, int par3, int par4, int par5) {
+		int var6 = par1IBlockAccess.getBlockId(par2, par3, par4);
+		return !this.localFlag && var6 == this.blockID ? false : super.shouldSideBeRendered(par1IBlockAccess, par2, par3, par4, par5);
 	}
 
-	public void registerIcons(IconRegister var1) {
-		this.blockIcon = var1.registerIcon(this.b);
+	/**
+	 * When this method is called, your block should register all the icons it needs with the given IconRegister. This is
+	 * the only chance you get to register icons.
+	 */
+	public void registerIcons(IconRegister par1IconRegister) {
+		this.blockIcon = par1IconRegister.registerIcon(this.breakableBlockIcon);
 	}
 }
