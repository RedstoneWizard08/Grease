--- net/minecraft/src/BlockCarrot.java
+++ net/minecraft/src/BlockCarrot.java
@@ -3,36 +3,48 @@
 public class BlockCarrot extends BlockCrops {
 	private Icon[] iconArray;
 
-	public BlockCarrot(int var1) {
-		super(var1);
+	public BlockCarrot(int par1) {
+		super(par1);
 	}
 
-	public Icon getIcon(int var1, int var2) {
-		if(var2 < 7) {
-			if(var2 == 6) {
-				var2 = 5;
+	/**
+	 * From the specified side and block metadata retrieves the blocks texture. Args: side, metadata
+	 */
+	public Icon getIcon(int par1, int par2) {
+		if (par2 < 7) {
+			if (par2 == 6) {
+				par2 = 5;
 			}
 
-			return this.iconArray[var2 >> 1];
+			return this.iconArray[par2 >> 1];
 		} else {
 			return this.iconArray[3];
 		}
 	}
 
+	/**
+	 * Generate a seed ItemStack for this crop.
+	 */
 	protected int getSeedItem() {
 		return Item.carrot.itemID;
 	}
 
+	/**
+	 * Generate a crop produce ItemStack for this crop.
+	 */
 	protected int getCropItem() {
 		return Item.carrot.itemID;
 	}
 
-	public void registerIcons(IconRegister var1) {
+	/**
+	 * When this method is called, your block should register all the icons it needs with the given IconRegister. This is
+	 * the only chance you get to register icons.
+	 */
+	public void registerIcons(IconRegister par1IconRegister) {
 		this.iconArray = new Icon[4];
 
-		for(int var2 = 0; var2 < this.iconArray.length; ++var2) {
-			this.iconArray[var2] = var1.registerIcon(this.getTextureName() + "_stage_" + var2);
+		for (int var2 = 0; var2 < this.iconArray.length; ++var2) {
+			this.iconArray[var2] = par1IconRegister.registerIcon(this.getTextureName() + "_stage_" + var2);
 		}
-
 	}
 }
