--- net/minecraft/src/BlockColored.java
+++ net/minecraft/src/BlockColored.java
@@ -5,40 +5,57 @@
 public class BlockColored extends Block {
 	private Icon[] iconArray;
 
-	public BlockColored(int var1, Material var2) {
-		super(var1, var2);
+	public BlockColored(int par1, Material par2Material) {
+		super(par1, par2Material);
 		this.setCreativeTab(CreativeTabs.tabBlock);
 	}
 
-	public Icon getIcon(int var1, int var2) {
-		return this.iconArray[var2 % this.iconArray.length];
-	}
-
-	public int damageDropped(int var1) {
-		return var1;
-	}
-
-	public static int getBlockFromDye(int var0) {
-		return ~var0 & 15;
-	}
-
-	public static int getDyeFromBlock(int var0) {
-		return ~var0 & 15;
-	}
-
-	public void getSubBlocks(int var1, CreativeTabs var2, List var3) {
-		for(int var4 = 0; var4 < 16; ++var4) {
-			var3.add(new ItemStack(var1, 1, var4));
+	/**
+	 * From the specified side and block metadata retrieves the blocks texture. Args: side, metadata
+	 */
+	public Icon getIcon(int par1, int par2) {
+		return this.iconArray[par2 % this.iconArray.length];
+	}
+
+	/**
+	 * Determines the damage on the item the block drops. Used in cloth and wood.
+	 */
+	public int damageDropped(int par1) {
+		return par1;
+	}
+
+	/**
+	 * Takes a dye damage value and returns the block damage value to match
+	 */
+	public static int getBlockFromDye(int par0) {
+		return ~par0 & 15;
+	}
+
+	/**
+	 * Takes a block damage value and returns the dye damage value to match
+	 */
+	public static int getDyeFromBlock(int par0) {
+		return ~par0 & 15;
+	}
+
+	/**
+	 * returns a list of blocks with the same ID, but different meta (eg: wood returns 4 blocks)
+	 */
+	public void getSubBlocks(int par1, CreativeTabs par2CreativeTabs, List par3List) {
+		for (int var4 = 0; var4 < 16; ++var4) {
+			par3List.add(new ItemStack(par1, 1, var4));
 		}
-
 	}
 
-	public void registerIcons(IconRegister var1) {
+	/**
+	 * When this method is called, your block should register all the icons it needs with the given IconRegister. This is
+	 * the only chance you get to register icons.
+	 */
+	public void registerIcons(IconRegister par1IconRegister) {
 		this.iconArray = new Icon[16];
 
-		for(int var2 = 0; var2 < this.iconArray.length; ++var2) {
-			this.iconArray[var2] = var1.registerIcon(this.getTextureName() + "_" + ItemDye.b[getDyeFromBlock(var2)]);
+		for (int var2 = 0; var2 < this.iconArray.length; ++var2) {
+			this.iconArray[var2] = par1IconRegister.registerIcon(this.getTextureName() + "_" + ItemDye.dyeItemNames[getDyeFromBlock(var2)]);
 		}
-
 	}
 }
