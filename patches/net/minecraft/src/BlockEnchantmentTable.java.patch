--- net/minecraft/src/BlockEnchantmentTable.java
+++ net/minecraft/src/BlockEnchantmentTable.java
@@ -6,75 +6,100 @@
 	private Icon field_94461_a;
 	private Icon field_94460_b;
 
-	protected BlockEnchantmentTable(int var1) {
-		super(var1, Material.rock);
-		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 12.0F / 16.0F, 1.0F);
+	protected BlockEnchantmentTable(int par1) {
+		super(par1, Material.rock);
+		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.75F, 1.0F);
 		this.setLightOpacity(0);
 		this.setCreativeTab(CreativeTabs.tabDecorations);
 	}
 
+	/**
+	 * If this block doesn't render as an ordinary block it will return False (examples: signs, buttons, stairs, etc)
+	 */
 	public boolean renderAsNormalBlock() {
 		return false;
 	}
 
-	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
-		super.randomDisplayTick(var1, var2, var3, var4, var5);
+	/**
+	 * A randomly called display update to be able to add particles or other items for display
+	 */
+	public void randomDisplayTick(World par1World, int par2, int par3, int par4, Random par5Random) {
+		super.randomDisplayTick(par1World, par2, par3, par4, par5Random);
 
-		for(int var6 = var2 - 2; var6 <= var2 + 2; ++var6) {
-			for(int var7 = var4 - 2; var7 <= var4 + 2; ++var7) {
-				if(var6 > var2 - 2 && var6 < var2 + 2 && var7 == var4 - 1) {
-					var7 = var4 + 2;
+		for (int var6 = par2 - 2; var6 <= par2 + 2; ++var6) {
+			for (int var7 = par4 - 2; var7 <= par4 + 2; ++var7) {
+				if (var6 > par2 - 2 && var6 < par2 + 2 && var7 == par4 - 1) {
+					var7 = par4 + 2;
 				}
 
-				if(var5.nextInt(16) == 0) {
-					for(int var8 = var3; var8 <= var3 + 1; ++var8) {
-						if(var1.getBlockId(var6, var8, var7) == Block.bookShelf.blockID) {
-							if(!var1.isAirBlock((var6 - var2) / 2 + var2, var8, (var7 - var4) / 2 + var4)) {
+				if (par5Random.nextInt(16) == 0) {
+					for (int var8 = par3; var8 <= par3 + 1; ++var8) {
+						if (par1World.getBlockId(var6, var8, var7) == Block.bookShelf.blockID) {
+							if (!par1World.isAirBlock((var6 - par2) / 2 + par2, var8, (var7 - par4) / 2 + par4)) {
 								break;
 							}
 
-							var1.spawnParticle("enchantmenttable", (double)var2 + 0.5D, (double)var3 + 2.0D, (double)var4 + 0.5D, (double)((float)(var6 - var2) + var5.nextFloat()) - 0.5D, (double)((float)(var8 - var3) - var5.nextFloat() - 1.0F), (double)((float)(var7 - var4) + var5.nextFloat()) - 0.5D);
+							par1World.spawnParticle("enchantmenttable", (double)par2 + 0.5D, (double)par3 + 2.0D, (double)par4 + 0.5D, (double)((float)(var6 - par2) + par5Random.nextFloat()) - 0.5D, (double)((float)(var8 - par3) - par5Random.nextFloat() - 1.0F), (double)((float)(var7 - par4) + par5Random.nextFloat()) - 0.5D);
 						}
 					}
 				}
 			}
 		}
-
 	}
 
+	/**
+	 * Is this block (a) opaque and (b) a full 1m cube?  This determines whether or not to render the shared face of two
+	 * adjacent blocks and also whether the player can attach torches, redstone wire, etc to this block.
+	 */
 	public boolean isOpaqueCube() {
 		return false;
 	}
 
-	public Icon getIcon(int var1, int var2) {
-		return var1 == 0 ? this.field_94460_b : (var1 == 1 ? this.field_94461_a : this.blockIcon);
+	/**
+	 * From the specified side and block metadata retrieves the blocks texture. Args: side, metadata
+	 */
+	public Icon getIcon(int par1, int par2) {
+		return par1 == 0 ? this.field_94460_b : (par1 == 1 ? this.field_94461_a : this.blockIcon);
 	}
 
-	public TileEntity createNewTileEntity(World var1) {
+	/**
+	 * Returns a new instance of a block's tile entity class. Called on placing the block.
+	 */
+	public TileEntity createNewTileEntity(World par1World) {
 		return new TileEntityEnchantmentTable();
 	}
 
-	public boolean onBlockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5, int var6, float var7, float var8, float var9) {
-		if(var1.isRemote) {
+	/**
+	 * Called upon block activation (right click on the block.)
+	 */
+	public boolean onBlockActivated(World par1World, int par2, int par3, int par4, EntityPlayer par5EntityPlayer, int par6, float par7, float par8, float par9) {
+		if (par1World.isRemote) {
 			return true;
 		} else {
-			TileEntityEnchantmentTable var10 = (TileEntityEnchantmentTable)var1.getBlockTileEntity(var2, var3, var4);
-			var5.displayGUIEnchantment(var2, var3, var4, var10.func_94135_b() ? var10.func_94133_a() : null);
+			TileEntityEnchantmentTable var10 = (TileEntityEnchantmentTable)par1World.getBlockTileEntity(par2, par3, par4);
+			par5EntityPlayer.displayGUIEnchantment(par2, par3, par4, var10.func_94135_b() ? var10.func_94133_a() : null);
 			return true;
 		}
 	}
 
-	public void onBlockPlacedBy(World var1, int var2, int var3, int var4, EntityLivingBase var5, ItemStack var6) {
-		super.onBlockPlacedBy(var1, var2, var3, var4, var5, var6);
-		if(var6.hasDisplayName()) {
-			((TileEntityEnchantmentTable)var1.getBlockTileEntity(var2, var3, var4)).func_94134_a(var6.getDisplayName());
+	/**
+	 * Called when the block is placed in the world.
+	 */
+	public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLivingBase, ItemStack par6ItemStack) {
+		super.onBlockPlacedBy(par1World, par2, par3, par4, par5EntityLivingBase, par6ItemStack);
+
+		if (par6ItemStack.hasDisplayName()) {
+			((TileEntityEnchantmentTable)par1World.getBlockTileEntity(par2, par3, par4)).func_94134_a(par6ItemStack.getDisplayName());
 		}
-
 	}
 
-	public void registerIcons(IconRegister var1) {
-		this.blockIcon = var1.registerIcon(this.getTextureName() + "_" + "side");
-		this.field_94461_a = var1.registerIcon(this.getTextureName() + "_" + "top");
-		this.field_94460_b = var1.registerIcon(this.getTextureName() + "_" + "bottom");
+	/**
+	 * When this method is called, your block should register all the icons it needs with the given IconRegister. This is
+	 * the only chance you get to register icons.
+	 */
+	public void registerIcons(IconRegister par1IconRegister) {
+		this.blockIcon = par1IconRegister.registerIcon(this.getTextureName() + "_" + "side");
+		this.field_94461_a = par1IconRegister.registerIcon(this.getTextureName() + "_" + "top");
+		this.field_94460_b = par1IconRegister.registerIcon(this.getTextureName() + "_" + "bottom");
 	}
 }
