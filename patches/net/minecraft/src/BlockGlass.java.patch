--- net/minecraft/src/BlockGlass.java
+++ net/minecraft/src/BlockGlass.java
@@ -3,27 +3,43 @@
 import java.util.Random;
 
 public class BlockGlass extends BlockBreakable {
-	public BlockGlass(int var1, Material var2, boolean var3) {
-		super(var1, "glass", var2, var3);
+	public BlockGlass(int par1, Material par2Material, boolean par3) {
+		super(par1, "glass", par2Material, par3);
 		this.setCreativeTab(CreativeTabs.tabBlock);
 	}
 
-	public int quantityDropped(Random var1) {
+	/**
+	 * Returns the quantity of items to drop on block destruction.
+	 */
+	public int quantityDropped(Random par1Random) {
 		return 0;
 	}
 
+	/**
+	 * Returns which pass should this block be rendered on. 0 for solids and 1 for alpha
+	 */
 	public int getRenderBlockPass() {
 		return 0;
 	}
 
+	/**
+	 * Is this block (a) opaque and (b) a full 1m cube?  This determines whether or not to render the shared face of two
+	 * adjacent blocks and also whether the player can attach torches, redstone wire, etc to this block.
+	 */
 	public boolean isOpaqueCube() {
 		return false;
 	}
 
+	/**
+	 * If this block doesn't render as an ordinary block it will return False (examples: signs, buttons, stairs, etc)
+	 */
 	public boolean renderAsNormalBlock() {
 		return false;
 	}
 
+	/**
+	 * Return true if a player with Silk Touch can harvest this block directly, and not its normal drops.
+	 */
 	protected boolean canSilkHarvest() {
 		return true;
 	}
