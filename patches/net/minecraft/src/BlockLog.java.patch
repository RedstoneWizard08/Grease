--- net/minecraft/src/BlockLog.java
+++ net/minecraft/src/BlockLog.java
@@ -4,71 +4,100 @@
 import java.util.Random;
 
 public class BlockLog extends BlockRotatedPillar {
-	public static final String[] b = new String[]{"oak", "spruce", "birch", "jungle"};
+
+	/** The type of tree this log came from. */
+	public static final String[] woodType = new String[] {"oak", "spruce", "birch", "jungle"};
 	private Icon[] field_111052_c;
 	private Icon[] tree_top;
 
-	protected BlockLog(int var1) {
-		super(var1, Material.wood);
+	protected BlockLog(int par1) {
+		super(par1, Material.wood);
 		this.setCreativeTab(CreativeTabs.tabBlock);
 	}
 
-	public int quantityDropped(Random var1) {
+	/**
+	 * Returns the quantity of items to drop on block destruction.
+	 */
+	public int quantityDropped(Random par1Random) {
 		return 1;
 	}
 
-	public int idDropped(int var1, Random var2, int var3) {
+	/**
+	 * Returns the ID of the items to drop on destruction.
+	 */
+	public int idDropped(int par1, Random par2Random, int par3) {
 		return Block.wood.blockID;
 	}
 
-	public void breakBlock(World var1, int var2, int var3, int var4, int var5, int var6) {
+	/**
+	 * Called on server worlds only when the block has been replaced by a different block ID, or the same block with a
+	 * different metadata value, but before the new metadata value is set. Args: World, x, y, z, old block ID, old metadata
+	 */
+	public void breakBlock(World par1World, int par2, int par3, int par4, int par5, int par6) {
 		byte var7 = 4;
 		int var8 = var7 + 1;
-		if(var1.checkChunksExist(var2 - var8, var3 - var8, var4 - var8, var2 + var8, var3 + var8, var4 + var8)) {
-			for(int var9 = -var7; var9 <= var7; ++var9) {
-				for(int var10 = -var7; var10 <= var7; ++var10) {
-					for(int var11 = -var7; var11 <= var7; ++var11) {
-						int var12 = var1.getBlockId(var2 + var9, var3 + var10, var4 + var11);
-						if(var12 == Block.leaves.blockID) {
-							int var13 = var1.getBlockMetadata(var2 + var9, var3 + var10, var4 + var11);
-							if((var13 & 8) == 0) {
-								var1.setBlockMetadata(var2 + var9, var3 + var10, var4 + var11, var13 | 8, 4);
+
+		if (par1World.checkChunksExist(par2 - var8, par3 - var8, par4 - var8, par2 + var8, par3 + var8, par4 + var8)) {
+			for (int var9 = -var7; var9 <= var7; ++var9) {
+				for (int var10 = -var7; var10 <= var7; ++var10) {
+					for (int var11 = -var7; var11 <= var7; ++var11) {
+						int var12 = par1World.getBlockId(par2 + var9, par3 + var10, par4 + var11);
+
+						if (var12 == Block.leaves.blockID) {
+							int var13 = par1World.getBlockMetadata(par2 + var9, par3 + var10, par4 + var11);
+
+							if ((var13 & 8) == 0) {
+								par1World.setBlockMetadataWithNotify(par2 + var9, par3 + var10, par4 + var11, var13 | 8, 4);
 							}
 						}
 					}
 				}
 			}
 		}
-
-	}
-
-	protected Icon getSideIcon(int var1) {
-		return this.field_111052_c[var1];
-	}
-
-	protected Icon getEndIcon(int var1) {
-		return this.tree_top[var1];
-	}
-
-	public static int limitToValidMetadata(int var0) {
-		return var0 & 3;
-	}
-
-	public void getSubBlocks(int var1, CreativeTabs var2, List var3) {
-		var3.add(new ItemStack(var1, 1, 0));
-		var3.add(new ItemStack(var1, 1, 1));
-		var3.add(new ItemStack(var1, 1, 2));
-		var3.add(new ItemStack(var1, 1, 3));
-	}
-
-	public void registerIcons(IconRegister var1) {
-		this.field_111052_c = new Icon[b.length];
-		this.tree_top = new Icon[b.length];
-
-		for(int var2 = 0; var2 < this.field_111052_c.length; ++var2) {
-			this.field_111052_c[var2] = var1.registerIcon(this.getTextureName() + "_" + b[var2]);
-			this.tree_top[var2] = var1.registerIcon(this.getTextureName() + "_" + b[var2] + "_top");
+	}
+
+	/**
+	 * The icon for the side of the block.
+	 */
+	protected Icon getSideIcon(int par1) {
+		return this.field_111052_c[par1];
+	}
+
+	/**
+	 * The icon for the tops and bottoms of the block.
+	 */
+	protected Icon getEndIcon(int par1) {
+		return this.tree_top[par1];
+	}
+
+	/**
+	 * returns a number between 0 and 3
+	 */
+	public static int limitToValidMetadata(int par0) {
+		return par0 & 3;
+	}
+
+	/**
+	 * returns a list of blocks with the same ID, but different meta (eg: wood returns 4 blocks)
+	 */
+	public void getSubBlocks(int par1, CreativeTabs par2CreativeTabs, List par3List) {
+		par3List.add(new ItemStack(par1, 1, 0));
+		par3List.add(new ItemStack(par1, 1, 1));
+		par3List.add(new ItemStack(par1, 1, 2));
+		par3List.add(new ItemStack(par1, 1, 3));
+	}
+
+	/**
+	 * When this method is called, your block should register all the icons it needs with the given IconRegister. This is
+	 * the only chance you get to register icons.
+	 */
+	public void registerIcons(IconRegister par1IconRegister) {
+		this.field_111052_c = new Icon[woodType.length];
+		this.tree_top = new Icon[woodType.length];
+
+		for (int var2 = 0; var2 < this.field_111052_c.length; ++var2) {
+			this.field_111052_c[var2] = par1IconRegister.registerIcon(this.getTextureName() + "_" + woodType[var2]);
+			this.tree_top[var2] = par1IconRegister.registerIcon(this.getTextureName() + "_" + woodType[var2] + "_top");
 		}
-
 	}
 }
