--- net/minecraft/src/BlockNote.java
+++ net/minecraft/src/BlockNote.java
@@ -1,73 +1,92 @@
 package net.minecraft.src;
 
 public class BlockNote extends BlockContainer {
-	public BlockNote(int var1) {
-		super(var1, Material.wood);
+	public BlockNote(int par1) {
+		super(par1, Material.wood);
 		this.setCreativeTab(CreativeTabs.tabRedstone);
 	}
 
-	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
-		boolean var6 = var1.isBlockIndirectlyGettingPowered(var2, var3, var4);
-		TileEntityNote var7 = (TileEntityNote)var1.getBlockTileEntity(var2, var3, var4);
-		if(var7 != null && var7.previousRedstoneState != var6) {
-			if(var6) {
-				var7.triggerNote(var1, var2, var3, var4);
+	/**
+	 * Lets the block know when one of its neighbor changes. Doesn't know which neighbor changed (coordinates passed are
+	 * their own) Args: x, y, z, neighbor blockID
+	 */
+	public void onNeighborBlockChange(World par1World, int par2, int par3, int par4, int par5) {
+		boolean var6 = par1World.isBlockIndirectlyGettingPowered(par2, par3, par4);
+		TileEntityNote var7 = (TileEntityNote)par1World.getBlockTileEntity(par2, par3, par4);
+
+		if (var7 != null && var7.previousRedstoneState != var6) {
+			if (var6) {
+				var7.triggerNote(par1World, par2, par3, par4);
 			}
 
 			var7.previousRedstoneState = var6;
 		}
-
 	}
 
-	public boolean onBlockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5, int var6, float var7, float var8, float var9) {
-		if(var1.isRemote) {
+	/**
+	 * Called upon block activation (right click on the block.)
+	 */
+	public boolean onBlockActivated(World par1World, int par2, int par3, int par4, EntityPlayer par5EntityPlayer, int par6, float par7, float par8, float par9) {
+		if (par1World.isRemote) {
 			return true;
 		} else {
-			TileEntityNote var10 = (TileEntityNote)var1.getBlockTileEntity(var2, var3, var4);
-			if(var10 != null) {
+			TileEntityNote var10 = (TileEntityNote)par1World.getBlockTileEntity(par2, par3, par4);
+
+			if (var10 != null) {
 				var10.changePitch();
-				var10.triggerNote(var1, var2, var3, var4);
+				var10.triggerNote(par1World, par2, par3, par4);
 			}
 
 			return true;
 		}
 	}
 
-	public void onBlockClicked(World var1, int var2, int var3, int var4, EntityPlayer var5) {
-		if(!var1.isRemote) {
-			TileEntityNote var6 = (TileEntityNote)var1.getBlockTileEntity(var2, var3, var4);
-			if(var6 != null) {
-				var6.triggerNote(var1, var2, var3, var4);
+	/**
+	 * Called when the block is clicked by a player. Args: x, y, z, entityPlayer
+	 */
+	public void onBlockClicked(World par1World, int par2, int par3, int par4, EntityPlayer par5EntityPlayer) {
+		if (!par1World.isRemote) {
+			TileEntityNote var6 = (TileEntityNote)par1World.getBlockTileEntity(par2, par3, par4);
+
+			if (var6 != null) {
+				var6.triggerNote(par1World, par2, par3, par4);
 			}
-
 		}
 	}
 
-	public TileEntity createNewTileEntity(World var1) {
+	/**
+	 * Returns a new instance of a block's tile entity class. Called on placing the block.
+	 */
+	public TileEntity createNewTileEntity(World par1World) {
 		return new TileEntityNote();
 	}
 
-	public boolean onBlockEventReceived(World var1, int var2, int var3, int var4, int var5, int var6) {
-		float var7 = (float)Math.pow(2.0D, (double)(var6 - 12) / 12.0D);
+	/**
+	 * Called when the block receives a BlockEvent - see World.addBlockEvent. By default, passes it on to the tile entity
+	 * at this location. Args: world, x, y, z, blockID, EventID, event parameter
+	 */
+	public boolean onBlockEventReceived(World par1World, int par2, int par3, int par4, int par5, int par6) {
+		float var7 = (float)Math.pow(2.0D, (double)(par6 - 12) / 12.0D);
 		String var8 = "harp";
-		if(var5 == 1) {
+
+		if (par5 == 1) {
 			var8 = "bd";
 		}
 
-		if(var5 == 2) {
+		if (par5 == 2) {
 			var8 = "snare";
 		}
 
-		if(var5 == 3) {
+		if (par5 == 3) {
 			var8 = "hat";
 		}
 
-		if(var5 == 4) {
+		if (par5 == 4) {
 			var8 = "bassattack";
 		}
 
-		var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "note." + var8, 3.0F, var7);
-		var1.spawnParticle("note", (double)var2 + 0.5D, (double)var3 + 1.2D, (double)var4 + 0.5D, (double)var6 / 24.0D, 0.0D, 0.0D);
+		par1World.playSoundEffect((double)par2 + 0.5D, (double)par3 + 0.5D, (double)par4 + 0.5D, "note." + var8, 3.0F, var7);
+		par1World.spawnParticle("note", (double)par2 + 0.5D, (double)par3 + 1.2D, (double)par4 + 0.5D, (double)par6 / 24.0D, 0.0D, 0.0D);
 		return true;
 	}
 }
