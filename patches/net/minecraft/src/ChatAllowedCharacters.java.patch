--- net/minecraft/src/ChatAllowedCharacters.java
+++ net/minecraft/src/ChatAllowedCharacters.java
@@ -4,9 +4,21 @@
 import java.io.InputStreamReader;
 
 public class ChatAllowedCharacters {
-	public static final String a = getAllowedCharacters();
-	public static final char[] allowedCharactersArray = new char[]{'/', '\n', '\r', '\t', '\u0000', '\f', '`', '?', '*', '\\', '<', '>', '|', '\"', ':'};
-
+
+	/**
+	 * This String have the characters allowed in any text drawing of minecraft.
+	 */
+	public static final String allowedCharacters = getAllowedCharacters();
+
+	/**
+	 * Array of the special characters that are allowed in any text drawing of Minecraft.
+	 */
+	public static final char[] allowedCharactersArray = new char[] {'/', '\n', '\r', '\t', '\u0000', '\f', '`', '?', '*', '\\', '<', '>', '|', '\"', ':'};
+
+	/**
+	 * Load the font.txt resource file, that is on UTF-8 format. This file contains the characters that minecraft can
+	 * render Strings on screen.
+	 */
 	private static String getAllowedCharacters() {
 		String var0 = "";
 
@@ -14,35 +26,36 @@
 			BufferedReader var1 = new BufferedReader(new InputStreamReader(ChatAllowedCharacters.class.getResourceAsStream("/font.txt"), "UTF-8"));
 			String var2 = "";
 
-			while(true) {
-				var2 = var1.readLine();
-				if(var2 == null) {
-					var1.close();
-					break;
-				}
-
-				if(!var2.startsWith("#")) {
+			while ((var2 = var1.readLine()) != null) {
+				if (!var2.startsWith("#")) {
 					var0 = var0 + var2;
 				}
 			}
+
+			var1.close();
 		} catch (Exception var3) {
+			;
 		}
 
 		return var0;
 	}
 
-	public static final boolean isAllowedCharacter(char var0) {
-		return var0 != 167 && (a.indexOf(var0) >= 0 || var0 > 32);
+	public static final boolean isAllowedCharacter(char par0) {
+		return par0 != 167 && (allowedCharacters.indexOf(par0) >= 0 || par0 > 32);
 	}
 
-	public static String filerAllowedCharacters(String var0) {
+	/**
+	 * Filter string by only keeping those characters for which isAllowedCharacter() returns true.
+	 */
+	public static String filerAllowedCharacters(String par0Str) {
 		StringBuilder var1 = new StringBuilder();
-		char[] var2 = var0.toCharArray();
+		char[] var2 = par0Str.toCharArray();
 		int var3 = var2.length;
 
-		for(int var4 = 0; var4 < var3; ++var4) {
+		for (int var4 = 0; var4 < var3; ++var4) {
 			char var5 = var2[var4];
-			if(isAllowedCharacter(var5)) {
+
+			if (isAllowedCharacter(var5)) {
 				var1.append(var5);
 			}
 		}
