--- net/minecraft/src/ChunkCoordIntPair.java
+++ net/minecraft/src/ChunkCoordIntPair.java
@@ -1,16 +1,23 @@
 package net.minecraft.src;
 
 public class ChunkCoordIntPair {
+
+	/** The X position of this Chunk Coordinate Pair */
 	public final int chunkXPos;
+
+	/** The Z position of this Chunk Coordinate Pair */
 	public final int chunkZPos;
 
-	public ChunkCoordIntPair(int var1, int var2) {
-		this.chunkXPos = var1;
-		this.chunkZPos = var2;
+	public ChunkCoordIntPair(int par1, int par2) {
+		this.chunkXPos = par1;
+		this.chunkZPos = par2;
 	}
 
-	public static long chunkXZ2Int(int var0, int var1) {
-		return (long)var0 & 4294967295L | ((long)var1 & 4294967295L) << 32;
+	/**
+	 * converts a chunk coordinate pair to an integer (suitable for hashing)
+	 */
+	public static long chunkXZ2Int(int par0, int par1) {
+		return (long)par0 & 4294967295L | ((long)par1 & 4294967295L) << 32;
 	}
 
 	public int hashCode() {
@@ -20,8 +27,8 @@
 		return var3 ^ var4;
 	}
 
-	public boolean equals(Object var1) {
-		ChunkCoordIntPair var2 = (ChunkCoordIntPair)var1;
+	public boolean equals(Object par1Obj) {
+		ChunkCoordIntPair var2 = (ChunkCoordIntPair)par1Obj;
 		return var2.chunkXPos == this.chunkXPos && var2.chunkZPos == this.chunkZPos;
 	}
 
@@ -33,8 +40,8 @@
 		return (this.chunkZPos << 4) + 8;
 	}
 
-	public ChunkPosition getChunkPosition(int var1) {
-		return new ChunkPosition(this.getCenterXPos(), var1, this.getCenterZPosition());
+	public ChunkPosition getChunkPosition(int par1) {
+		return new ChunkPosition(this.getCenterXPos(), par1, this.getCenterZPosition());
 	}
 
 	public String toString() {
