--- net/minecraft/src/CommandClearInventory.java
+++ net/minecraft/src/CommandClearInventory.java
@@ -8,40 +8,53 @@
 		return "clear";
 	}
 
-	public String getCommandUsage(ICommandSender var1) {
+	public String getCommandUsage(ICommandSender par1ICommandSender) {
 		return "commands.clear.usage";
 	}
 
+	/**
+	 * Return the required permission level for this command.
+	 */
 	public int getRequiredPermissionLevel() {
 		return 2;
 	}
 
-	public void processCommand(ICommandSender var1, String[] var2) {
-		EntityPlayerMP var3 = var2.length == 0 ? getCommandSenderAsPlayer(var1) : getPlayer(var1, var2[0]);
-		int var4 = var2.length >= 2 ? parseIntWithMin(var1, var2[1], 1) : -1;
-		int var5 = var2.length >= 3 ? parseIntWithMin(var1, var2[2], 0) : -1;
+	public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr) {
+		EntityPlayerMP var3 = par2ArrayOfStr.length == 0 ? getCommandSenderAsPlayer(par1ICommandSender) : getPlayer(par1ICommandSender, par2ArrayOfStr[0]);
+		int var4 = par2ArrayOfStr.length >= 2 ? parseIntWithMin(par1ICommandSender, par2ArrayOfStr[1], 1) : -1;
+		int var5 = par2ArrayOfStr.length >= 3 ? parseIntWithMin(par1ICommandSender, par2ArrayOfStr[2], 0) : -1;
 		int var6 = var3.inventory.clearInventory(var4, var5);
 		var3.inventoryContainer.detectAndSendChanges();
-		if(!var3.capabilities.isCreativeMode) {
+
+		if (!var3.capabilities.isCreativeMode) {
 			var3.updateHeldItem();
 		}
 
-		if(var6 == 0) {
-			throw new CommandException("commands.clear.failure", new Object[]{var3.getEntityName()});
+		if (var6 == 0) {
+			throw new CommandException("commands.clear.failure", new Object[] {var3.getEntityName()});
 		} else {
-			notifyAdmins(var1, "commands.clear.success", new Object[]{var3.getEntityName(), Integer.valueOf(var6)});
+			notifyAdmins(par1ICommandSender, "commands.clear.success", new Object[] {var3.getEntityName(), Integer.valueOf(var6)});
 		}
 	}
 
-	public List addTabCompletionOptions(ICommandSender var1, String[] var2) {
-		return var2.length == 1 ? getListOfStringsMatchingLastWord(var2, this.getAllOnlineUsernames()) : null;
+	/**
+	 * Adds the strings available in this command to the given list of tab completion options.
+	 */
+	public List addTabCompletionOptions(ICommandSender par1ICommandSender, String[] par2ArrayOfStr) {
+		return par2ArrayOfStr.length == 1 ? getListOfStringsMatchingLastWord(par2ArrayOfStr, this.getAllOnlineUsernames()) : null;
 	}
 
+	/**
+	 * Return all usernames currently connected to the server.
+	 */
 	protected String[] getAllOnlineUsernames() {
 		return MinecraftServer.getServer().getAllUsernames();
 	}
 
-	public boolean isUsernameIndex(String[] var1, int var2) {
-		return var2 == 0;
+	/**
+	 * Return whether the specified command parameter index is a username parameter.
+	 */
+	public boolean isUsernameIndex(String[] par1ArrayOfStr, int par2) {
+		return par2 == 0;
 	}
 }
