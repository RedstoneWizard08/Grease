--- net/minecraft/src/CommandServerMessage.java
+++ net/minecraft/src/CommandServerMessage.java
@@ -6,43 +6,53 @@
 
 public class CommandServerMessage extends CommandBase {
 	public List getCommandAliases() {
-		return Arrays.asList(new String[]{"w", "msg"});
+		return Arrays.asList(new String[] {"w", "msg"});
 	}
 
 	public String getCommandName() {
 		return "tell";
 	}
 
+	/**
+	 * Return the required permission level for this command.
+	 */
 	public int getRequiredPermissionLevel() {
 		return 0;
 	}
 
-	public String getCommandUsage(ICommandSender var1) {
+	public String getCommandUsage(ICommandSender par1ICommandSender) {
 		return "commands.message.usage";
 	}
 
-	public void processCommand(ICommandSender var1, String[] var2) {
-		if(var2.length < 2) {
+	public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr) {
+		if (par2ArrayOfStr.length < 2) {
 			throw new WrongUsageException("commands.message.usage", new Object[0]);
 		} else {
-			EntityPlayerMP var3 = getPlayer(var1, var2[0]);
-			if(var3 == null) {
+			EntityPlayerMP var3 = getPlayer(par1ICommandSender, par2ArrayOfStr[0]);
+
+			if (var3 == null) {
 				throw new PlayerNotFoundException();
-			} else if(var3 == var1) {
+			} else if (var3 == par1ICommandSender) {
 				throw new PlayerNotFoundException("commands.message.sameTarget", new Object[0]);
 			} else {
-				String var4 = func_82361_a(var1, var2, 1, !(var1 instanceof EntityPlayer));
-				var3.sendChatToPlayer(ChatMessageComponent.createFromTranslationWithSubstitutions("commands.message.display.incoming", new Object[]{var1.getCommandSenderName(), var4}).setColor(EnumChatFormatting.GRAY).setItalic(Boolean.valueOf(true)));
-				var1.sendChatToPlayer(ChatMessageComponent.createFromTranslationWithSubstitutions("commands.message.display.outgoing", new Object[]{var3.getCommandSenderName(), var4}).setColor(EnumChatFormatting.GRAY).setItalic(Boolean.valueOf(true)));
+				String var4 = func_82361_a(par1ICommandSender, par2ArrayOfStr, 1, !(par1ICommandSender instanceof EntityPlayer));
+				var3.sendChatToPlayer(ChatMessageComponent.createFromTranslationWithSubstitutions("commands.message.display.incoming", new Object[] {par1ICommandSender.getCommandSenderName(), var4}).setColor(EnumChatFormatting.GRAY).setItalic(Boolean.valueOf(true)));
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.createFromTranslationWithSubstitutions("commands.message.display.outgoing", new Object[] {var3.getCommandSenderName(), var4}).setColor(EnumChatFormatting.GRAY).setItalic(Boolean.valueOf(true)));
 			}
 		}
 	}
 
-	public List addTabCompletionOptions(ICommandSender var1, String[] var2) {
-		return getListOfStringsMatchingLastWord(var2, MinecraftServer.getServer().getAllUsernames());
+	/**
+	 * Adds the strings available in this command to the given list of tab completion options.
+	 */
+	public List addTabCompletionOptions(ICommandSender par1ICommandSender, String[] par2ArrayOfStr) {
+		return getListOfStringsMatchingLastWord(par2ArrayOfStr, MinecraftServer.getServer().getAllUsernames());
 	}
 
-	public boolean isUsernameIndex(String[] var1, int var2) {
-		return var2 == 0;
+	/**
+	 * Return whether the specified command parameter index is a username parameter.
+	 */
+	public boolean isUsernameIndex(String[] par1ArrayOfStr, int par2) {
+		return par2 == 0;
 	}
 }
