--- net/minecraft/src/CommandServerSaveAll.java
+++ net/minecraft/src/CommandServerSaveAll.java
@@ -7,18 +7,22 @@
 		return "save-all";
 	}
 
+	/**
+	 * Return the required permission level for this command.
+	 */
 	public int getRequiredPermissionLevel() {
 		return 4;
 	}
 
-	public String getCommandUsage(ICommandSender var1) {
+	public String getCommandUsage(ICommandSender par1ICommandSender) {
 		return "commands.save.usage";
 	}
 
-	public void processCommand(ICommandSender var1, String[] var2) {
+	public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr) {
 		MinecraftServer var3 = MinecraftServer.getServer();
-		var1.sendChatToPlayer(ChatMessageComponent.createFromTranslationKey("commands.save.start"));
-		if(var3.getConfigurationManager() != null) {
+		par1ICommandSender.sendChatToPlayer(ChatMessageComponent.createFromTranslationKey("commands.save.start"));
+
+		if (var3.getConfigurationManager() != null) {
 			var3.getConfigurationManager().saveAllPlayerData();
 		}
 
@@ -26,36 +30,37 @@
 			int var4;
 			WorldServer var5;
 			boolean var6;
-			for(var4 = 0; var4 < var3.worldServers.length; ++var4) {
-				if(var3.worldServers[var4] != null) {
+
+			for (var4 = 0; var4 < var3.worldServers.length; ++var4) {
+				if (var3.worldServers[var4] != null) {
 					var5 = var3.worldServers[var4];
-					var6 = var5.levelSaving;
-					var5.levelSaving = false;
+					var6 = var5.canNotSave;
+					var5.canNotSave = false;
 					var5.saveAllChunks(true, (IProgressUpdate)null);
-					var5.levelSaving = var6;
+					var5.canNotSave = var6;
 				}
 			}
 
-			if(var2.length > 0 && "flush".equals(var2[0])) {
-				var1.sendChatToPlayer(ChatMessageComponent.createFromTranslationKey("commands.save.flushStart"));
+			if (par2ArrayOfStr.length > 0 && "flush".equals(par2ArrayOfStr[0])) {
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.createFromTranslationKey("commands.save.flushStart"));
 
-				for(var4 = 0; var4 < var3.worldServers.length; ++var4) {
-					if(var3.worldServers[var4] != null) {
+				for (var4 = 0; var4 < var3.worldServers.length; ++var4) {
+					if (var3.worldServers[var4] != null) {
 						var5 = var3.worldServers[var4];
-						var6 = var5.levelSaving;
-						var5.levelSaving = false;
+						var6 = var5.canNotSave;
+						var5.canNotSave = false;
 						var5.saveChunkData();
-						var5.levelSaving = var6;
+						var5.canNotSave = var6;
 					}
 				}
 
-				var1.sendChatToPlayer(ChatMessageComponent.createFromTranslationKey("commands.save.flushEnd"));
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.createFromTranslationKey("commands.save.flushEnd"));
 			}
 		} catch (MinecraftException var7) {
-			notifyAdmins(var1, "commands.save.failed", new Object[]{var7.getMessage()});
+			notifyAdmins(par1ICommandSender, "commands.save.failed", new Object[] {var7.getMessage()});
 			return;
 		}
 
-		notifyAdmins(var1, "commands.save.success", new Object[0]);
+		notifyAdmins(par1ICommandSender, "commands.save.success", new Object[0]);
 	}
 }
