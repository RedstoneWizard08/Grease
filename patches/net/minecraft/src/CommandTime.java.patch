--- net/minecraft/src/CommandTime.java
+++ net/minecraft/src/CommandTime.java
@@ -8,35 +8,39 @@
 		return "time";
 	}
 
+	/**
+	 * Return the required permission level for this command.
+	 */
 	public int getRequiredPermissionLevel() {
 		return 2;
 	}
 
-	public String getCommandUsage(ICommandSender var1) {
+	public String getCommandUsage(ICommandSender par1ICommandSender) {
 		return "commands.time.usage";
 	}
 
-	public void processCommand(ICommandSender var1, String[] var2) {
-		if(var2.length > 1) {
+	public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr) {
+		if (par2ArrayOfStr.length > 1) {
 			int var3;
-			if(var2[0].equals("set")) {
-				if(var2[1].equals("day")) {
+
+			if (par2ArrayOfStr[0].equals("set")) {
+				if (par2ArrayOfStr[1].equals("day")) {
 					var3 = 0;
-				} else if(var2[1].equals("night")) {
+				} else if (par2ArrayOfStr[1].equals("night")) {
 					var3 = 12500;
 				} else {
-					var3 = parseIntWithMin(var1, var2[1], 0);
+					var3 = parseIntWithMin(par1ICommandSender, par2ArrayOfStr[1], 0);
 				}
 
-				this.setTime(var1, var3);
-				notifyAdmins(var1, "commands.time.set", new Object[]{Integer.valueOf(var3)});
+				this.setTime(par1ICommandSender, var3);
+				notifyAdmins(par1ICommandSender, "commands.time.set", new Object[] {Integer.valueOf(var3)});
 				return;
 			}
 
-			if(var2[0].equals("add")) {
-				var3 = parseIntWithMin(var1, var2[1], 0);
-				this.addTime(var1, var3);
-				notifyAdmins(var1, "commands.time.added", new Object[]{Integer.valueOf(var3)});
+			if (par2ArrayOfStr[0].equals("add")) {
+				var3 = parseIntWithMin(par1ICommandSender, par2ArrayOfStr[1], 0);
+				this.addTime(par1ICommandSender, var3);
+				notifyAdmins(par1ICommandSender, "commands.time.added", new Object[] {Integer.valueOf(var3)});
 				return;
 			}
 		}
@@ -44,22 +48,29 @@
 		throw new WrongUsageException("commands.time.usage", new Object[0]);
 	}
 
-	public List addTabCompletionOptions(ICommandSender var1, String[] var2) {
-		return var2.length == 1 ? getListOfStringsMatchingLastWord(var2, new String[]{"set", "add"}) : (var2.length == 2 && var2[0].equals("set") ? getListOfStringsMatchingLastWord(var2, new String[]{"day", "night"}) : null);
+	/**
+	 * Adds the strings available in this command to the given list of tab completion options.
+	 */
+	public List addTabCompletionOptions(ICommandSender par1ICommandSender, String[] par2ArrayOfStr) {
+		return par2ArrayOfStr.length == 1 ? getListOfStringsMatchingLastWord(par2ArrayOfStr, new String[] {"set", "add"}): (par2ArrayOfStr.length == 2 && par2ArrayOfStr[0].equals("set") ? getListOfStringsMatchingLastWord(par2ArrayOfStr, new String[] {"day", "night"}): null);
 	}
 
-	protected void setTime(ICommandSender var1, int var2) {
-		for(int var3 = 0; var3 < MinecraftServer.getServer().worldServers.length; ++var3) {
-			MinecraftServer.getServer().worldServers[var3].setWorldTime((long)var2);
+	/**
+	 * Set the time in the server object.
+	 */
+	protected void setTime(ICommandSender par1ICommandSender, int par2) {
+		for (int var3 = 0; var3 < MinecraftServer.getServer().worldServers.length; ++var3) {
+			MinecraftServer.getServer().worldServers[var3].setWorldTime((long)par2);
 		}
-
 	}
 
-	protected void addTime(ICommandSender var1, int var2) {
-		for(int var3 = 0; var3 < MinecraftServer.getServer().worldServers.length; ++var3) {
+	/**
+	 * Adds (or removes) time in the server object.
+	 */
+	protected void addTime(ICommandSender par1ICommandSender, int par2) {
+		for (int var3 = 0; var3 < MinecraftServer.getServer().worldServers.length; ++var3) {
 			WorldServer var4 = MinecraftServer.getServer().worldServers[var3];
-			var4.setWorldTime(var4.getWorldTime() + (long)var2);
+			var4.setWorldTime(var4.getWorldTime() + (long)par2);
 		}
-
 	}
 }
