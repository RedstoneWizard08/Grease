--- net/minecraft/src/CommandWeather.java
+++ net/minecraft/src/CommandWeather.java
@@ -9,49 +9,56 @@
 		return "weather";
 	}
 
+	/**
+	 * Return the required permission level for this command.
+	 */
 	public int getRequiredPermissionLevel() {
 		return 2;
 	}
 
-	public String getCommandUsage(ICommandSender var1) {
+	public String getCommandUsage(ICommandSender par1ICommandSender) {
 		return "commands.weather.usage";
 	}
 
-	public void processCommand(ICommandSender var1, String[] var2) {
-		if(var2.length >= 1 && var2.length <= 2) {
+	public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr) {
+		if (par2ArrayOfStr.length >= 1 && par2ArrayOfStr.length <= 2) {
 			int var3 = (300 + (new Random()).nextInt(600)) * 20;
-			if(var2.length >= 2) {
-				var3 = parseIntBounded(var1, var2[1], 1, 1000000) * 20;
+
+			if (par2ArrayOfStr.length >= 2) {
+				var3 = parseIntBounded(par1ICommandSender, par2ArrayOfStr[1], 1, 1000000) * 20;
 			}
 
 			WorldServer var4 = MinecraftServer.getServer().worldServers[0];
 			WorldInfo var5 = var4.getWorldInfo();
 			var5.setRainTime(var3);
 			var5.setThunderTime(var3);
-			if("clear".equalsIgnoreCase(var2[0])) {
+
+			if ("clear".equalsIgnoreCase(par2ArrayOfStr[0])) {
 				var5.setRaining(false);
 				var5.setThundering(false);
-				notifyAdmins(var1, "commands.weather.clear", new Object[0]);
-			} else if("rain".equalsIgnoreCase(var2[0])) {
+				notifyAdmins(par1ICommandSender, "commands.weather.clear", new Object[0]);
+			} else if ("rain".equalsIgnoreCase(par2ArrayOfStr[0])) {
 				var5.setRaining(true);
 				var5.setThundering(false);
-				notifyAdmins(var1, "commands.weather.rain", new Object[0]);
+				notifyAdmins(par1ICommandSender, "commands.weather.rain", new Object[0]);
 			} else {
-				if(!"thunder".equalsIgnoreCase(var2[0])) {
+				if (!"thunder".equalsIgnoreCase(par2ArrayOfStr[0])) {
 					throw new WrongUsageException("commands.weather.usage", new Object[0]);
 				}
 
 				var5.setRaining(true);
 				var5.setThundering(true);
-				notifyAdmins(var1, "commands.weather.thunder", new Object[0]);
+				notifyAdmins(par1ICommandSender, "commands.weather.thunder", new Object[0]);
 			}
-
 		} else {
 			throw new WrongUsageException("commands.weather.usage", new Object[0]);
 		}
 	}
 
-	public List addTabCompletionOptions(ICommandSender var1, String[] var2) {
-		return var2.length == 1 ? getListOfStringsMatchingLastWord(var2, new String[]{"clear", "rain", "thunder"}) : null;
+	/**
+	 * Adds the strings available in this command to the given list of tab completion options.
+	 */
+	public List addTabCompletionOptions(ICommandSender par1ICommandSender, String[] par2ArrayOfStr) {
+		return par2ArrayOfStr.length == 1 ? getListOfStringsMatchingLastWord(par2ArrayOfStr, new String[] {"clear", "rain", "thunder"}): null;
 	}
 }
