--- net/minecraft/src/ComponentScatteredFeature.java
+++ net/minecraft/src/ComponentScatteredFeature.java
@@ -3,66 +3,72 @@
 import java.util.Random;
 
 abstract class ComponentScatteredFeature extends StructureComponent {
+
+	/** The size of the bounding box for this feature in the X axis */
 	protected int scatteredFeatureSizeX;
+
+	/** The size of the bounding box for this feature in the Y axis */
 	protected int scatteredFeatureSizeY;
+
+	/** The size of the bounding box for this feature in the Z axis */
 	protected int scatteredFeatureSizeZ;
 	protected int field_74936_d = -1;
 
-	public ComponentScatteredFeature() {
-	}
+	public ComponentScatteredFeature() {}
 
-	protected ComponentScatteredFeature(Random var1, int var2, int var3, int var4, int var5, int var6, int var7) {
+	protected ComponentScatteredFeature(Random par1Random, int par2, int par3, int par4, int par5, int par6, int par7) {
 		super(0);
-		this.scatteredFeatureSizeX = var5;
-		this.scatteredFeatureSizeY = var6;
-		this.scatteredFeatureSizeZ = var7;
-		this.coordBaseMode = var1.nextInt(4);
-		switch(this.coordBaseMode) {
-		case 0:
-		case 2:
-			this.boundingBox = new StructureBoundingBox(var2, var3, var4, var2 + var5 - 1, var3 + var6 - 1, var4 + var7 - 1);
-			break;
-		default:
-			this.boundingBox = new StructureBoundingBox(var2, var3, var4, var2 + var7 - 1, var3 + var6 - 1, var4 + var5 - 1);
+		this.scatteredFeatureSizeX = par5;
+		this.scatteredFeatureSizeY = par6;
+		this.scatteredFeatureSizeZ = par7;
+		this.coordBaseMode = par1Random.nextInt(4);
+
+		switch (this.coordBaseMode) {
+			case 0:
+			case 2:
+				this.boundingBox = new StructureBoundingBox(par2, par3, par4, par2 + par5 - 1, par3 + par6 - 1, par4 + par7 - 1);
+				break;
+
+			default:
+				this.boundingBox = new StructureBoundingBox(par2, par3, par4, par2 + par7 - 1, par3 + par6 - 1, par4 + par5 - 1);
 		}
-
-	}
-
-	protected void func_143012_a(NBTTagCompound var1) {
-		var1.setInteger("Width", this.scatteredFeatureSizeX);
-		var1.setInteger("Height", this.scatteredFeatureSizeY);
-		var1.setInteger("Depth", this.scatteredFeatureSizeZ);
-		var1.setInteger("HPos", this.field_74936_d);
-	}
-
-	protected void func_143011_b(NBTTagCompound var1) {
-		this.scatteredFeatureSizeX = var1.getInteger("Width");
-		this.scatteredFeatureSizeY = var1.getInteger("Height");
-		this.scatteredFeatureSizeZ = var1.getInteger("Depth");
-		this.field_74936_d = var1.getInteger("HPos");
-	}
-
-	protected boolean func_74935_a(World var1, StructureBoundingBox var2, int var3) {
-		if(this.field_74936_d >= 0) {
+	}
+
+	protected void func_143012_a(NBTTagCompound par1NBTTagCompound) {
+		par1NBTTagCompound.setInteger("Width", this.scatteredFeatureSizeX);
+		par1NBTTagCompound.setInteger("Height", this.scatteredFeatureSizeY);
+		par1NBTTagCompound.setInteger("Depth", this.scatteredFeatureSizeZ);
+		par1NBTTagCompound.setInteger("HPos", this.field_74936_d);
+	}
+
+	protected void func_143011_b(NBTTagCompound par1NBTTagCompound) {
+		this.scatteredFeatureSizeX = par1NBTTagCompound.getInteger("Width");
+		this.scatteredFeatureSizeY = par1NBTTagCompound.getInteger("Height");
+		this.scatteredFeatureSizeZ = par1NBTTagCompound.getInteger("Depth");
+		this.field_74936_d = par1NBTTagCompound.getInteger("HPos");
+	}
+
+	protected boolean func_74935_a(World par1World, StructureBoundingBox par2StructureBoundingBox, int par3) {
+		if (this.field_74936_d >= 0) {
 			return true;
 		} else {
 			int var4 = 0;
 			int var5 = 0;
 
-			for(int var6 = this.boundingBox.minZ; var6 <= this.boundingBox.maxZ; ++var6) {
-				for(int var7 = this.boundingBox.minX; var7 <= this.boundingBox.maxX; ++var7) {
-					if(var2.isVecInside(var7, 64, var6)) {
-						var4 += Math.max(var1.getTopSolidOrLiquidBlock(var7, var6), var1.provider.getAverageGroundLevel());
+			for (int var6 = this.boundingBox.minZ; var6 <= this.boundingBox.maxZ; ++var6) {
+				for (int var7 = this.boundingBox.minX; var7 <= this.boundingBox.maxX; ++var7) {
+					if (par2StructureBoundingBox.isVecInside(var7, 64, var6)) {
+						var4 += Math.max(par1World.getTopSolidOrLiquidBlock(var7, var6), par1World.provider.getAverageGroundLevel());
 						++var5;
 					}
 				}
 			}
 
-			if(var5 == 0) {
+			if (var5 == 0) {
 				return false;
 			} else {
 				this.field_74936_d = var4 / var5;
-				this.boundingBox.offset(0, this.field_74936_d - this.boundingBox.minY + var3, 0);
+				this.boundingBox.offset(0, this.field_74936_d - this.boundingBox.minY + par3, 0);
 				return true;
 			}
 		}
