--- net/minecraft/src/ComponentStronghold.java
+++ net/minecraft/src/ComponentStronghold.java
@@ -4,129 +4,164 @@
 import java.util.Random;
 
 abstract class ComponentStronghold extends StructureComponent {
-	protected EnumDoor field_143013_d = EnumDoor.OPENING;
+	protected EnumDoor field_143013_d;
 
 	public ComponentStronghold() {
-	}
-
-	protected ComponentStronghold(int var1) {
-		super(var1);
-	}
-
-	protected void func_143012_a(NBTTagCompound var1) {
-		var1.setString("EntryDoor", this.field_143013_d.name());
-	}
-
-	protected void func_143011_b(NBTTagCompound var1) {
-		this.field_143013_d = EnumDoor.valueOf(var1.getString("EntryDoor"));
-	}
-
-	protected void placeDoor(World var1, Random var2, StructureBoundingBox var3, EnumDoor var4, int var5, int var6, int var7) {
-		switch(EnumDoorHelper.doorEnum[var4.ordinal()]) {
-		case 1:
-		default:
-			this.fillWithBlocks(var1, var3, var5, var6, var7, var5 + 3 - 1, var6 + 3 - 1, var7, 0, 0, false);
-			break;
-		case 2:
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5, var6, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5, var6 + 1, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5, var6 + 2, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5 + 1, var6 + 2, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5 + 2, var6 + 2, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5 + 2, var6 + 1, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5 + 2, var6, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.doorWood.blockID, 0, var5 + 1, var6, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.doorWood.blockID, 8, var5 + 1, var6 + 1, var7, var3);
-			break;
-		case 3:
-			this.placeBlockAtCurrentPosition(var1, 0, 0, var5 + 1, var6, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, 0, 0, var5 + 1, var6 + 1, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.fenceIron.blockID, 0, var5, var6, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.fenceIron.blockID, 0, var5, var6 + 1, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.fenceIron.blockID, 0, var5, var6 + 2, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.fenceIron.blockID, 0, var5 + 1, var6 + 2, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.fenceIron.blockID, 0, var5 + 2, var6 + 2, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.fenceIron.blockID, 0, var5 + 2, var6 + 1, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.fenceIron.blockID, 0, var5 + 2, var6, var7, var3);
-			break;
-		case 4:
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5, var6, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5, var6 + 1, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5, var6 + 2, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5 + 1, var6 + 2, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5 + 2, var6 + 2, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5 + 2, var6 + 1, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneBrick.blockID, 0, var5 + 2, var6, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.doorIron.blockID, 0, var5 + 1, var6, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.doorIron.blockID, 8, var5 + 1, var6 + 1, var7, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneButton.blockID, this.getMetadataWithOffset(Block.stoneButton.blockID, 4), var5 + 2, var6 + 1, var7 + 1, var3);
-			this.placeBlockAtCurrentPosition(var1, Block.stoneButton.blockID, this.getMetadataWithOffset(Block.stoneButton.blockID, 3), var5 + 2, var6 + 1, var7 - 1, var3);
-		}
-
-	}
-
-	protected EnumDoor getRandomDoor(Random var1) {
-		int var2 = var1.nextInt(5);
-		switch(var2) {
-		case 0:
-		case 1:
-		default:
-			return EnumDoor.OPENING;
-		case 2:
-			return EnumDoor.WOOD_DOOR;
-		case 3:
-			return EnumDoor.GRATES;
-		case 4:
-			return EnumDoor.IRON_DOOR;
-		}
-	}
-
-	protected StructureComponent getNextComponentNormal(ComponentStrongholdStairs2 var1, List var2, Random var3, int var4, int var5) {
-		switch(this.coordBaseMode) {
-		case 0:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.minX + var4, this.boundingBox.minY + var5, this.boundingBox.maxZ + 1, this.coordBaseMode, this.getComponentType());
-		case 1:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.minX - 1, this.boundingBox.minY + var5, this.boundingBox.minZ + var4, this.coordBaseMode, this.getComponentType());
-		case 2:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.minX + var4, this.boundingBox.minY + var5, this.boundingBox.minZ - 1, this.coordBaseMode, this.getComponentType());
-		case 3:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.maxX + 1, this.boundingBox.minY + var5, this.boundingBox.minZ + var4, this.coordBaseMode, this.getComponentType());
-		default:
-			return null;
-		}
-	}
-
-	protected StructureComponent getNextComponentX(ComponentStrongholdStairs2 var1, List var2, Random var3, int var4, int var5) {
-		switch(this.coordBaseMode) {
-		case 0:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.minX - 1, this.boundingBox.minY + var4, this.boundingBox.minZ + var5, 1, this.getComponentType());
-		case 1:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.minX + var5, this.boundingBox.minY + var4, this.boundingBox.minZ - 1, 2, this.getComponentType());
-		case 2:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.minX - 1, this.boundingBox.minY + var4, this.boundingBox.minZ + var5, 1, this.getComponentType());
-		case 3:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.minX + var5, this.boundingBox.minY + var4, this.boundingBox.minZ - 1, 2, this.getComponentType());
-		default:
-			return null;
-		}
-	}
-
-	protected StructureComponent getNextComponentZ(ComponentStrongholdStairs2 var1, List var2, Random var3, int var4, int var5) {
-		switch(this.coordBaseMode) {
-		case 0:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.maxX + 1, this.boundingBox.minY + var4, this.boundingBox.minZ + var5, 3, this.getComponentType());
-		case 1:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.minX + var5, this.boundingBox.minY + var4, this.boundingBox.maxZ + 1, 0, this.getComponentType());
-		case 2:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.maxX + 1, this.boundingBox.minY + var4, this.boundingBox.minZ + var5, 3, this.getComponentType());
-		case 3:
-			return StructureStrongholdPieces.getNextValidComponentAccess(var1, var2, var3, this.boundingBox.minX + var5, this.boundingBox.minY + var4, this.boundingBox.maxZ + 1, 0, this.getComponentType());
-		default:
-			return null;
-		}
-	}
-
-	protected static boolean canStrongholdGoDeeper(StructureBoundingBox var0) {
-		return var0 != null && var0.minY > 10;
+		this.field_143013_d = EnumDoor.OPENING;
+	}
+
+	protected ComponentStronghold(int par1) {
+		super(par1);
+		this.field_143013_d = EnumDoor.OPENING;
+	}
+
+	protected void func_143012_a(NBTTagCompound par1NBTTagCompound) {
+		par1NBTTagCompound.setString("EntryDoor", this.field_143013_d.name());
+	}
+
+	protected void func_143011_b(NBTTagCompound par1NBTTagCompound) {
+		this.field_143013_d = EnumDoor.valueOf(par1NBTTagCompound.getString("EntryDoor"));
+	}
+
+	/**
+	 * builds a door of the enumerated types (empty opening is a door)
+	 */
+	protected void placeDoor(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox, EnumDoor par4EnumDoor, int par5, int par6, int par7) {
+		switch (EnumDoorHelper.doorEnum[par4EnumDoor.ordinal()]) {
+			case 1:
+			default:
+				this.fillWithBlocks(par1World, par3StructureBoundingBox, par5, par6, par7, par5 + 3 - 1, par6 + 3 - 1, par7, 0, 0, false);
+				break;
+
+			case 2:
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5, par6, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5, par6 + 1, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5, par6 + 2, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5 + 1, par6 + 2, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5 + 2, par6 + 2, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5 + 2, par6 + 1, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5 + 2, par6, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.doorWood.blockID, 0, par5 + 1, par6, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.doorWood.blockID, 8, par5 + 1, par6 + 1, par7, par3StructureBoundingBox);
+				break;
+
+			case 3:
+				this.placeBlockAtCurrentPosition(par1World, 0, 0, par5 + 1, par6, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, 0, 0, par5 + 1, par6 + 1, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.fenceIron.blockID, 0, par5, par6, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.fenceIron.blockID, 0, par5, par6 + 1, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.fenceIron.blockID, 0, par5, par6 + 2, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.fenceIron.blockID, 0, par5 + 1, par6 + 2, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.fenceIron.blockID, 0, par5 + 2, par6 + 2, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.fenceIron.blockID, 0, par5 + 2, par6 + 1, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.fenceIron.blockID, 0, par5 + 2, par6, par7, par3StructureBoundingBox);
+				break;
+
+			case 4:
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5, par6, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5, par6 + 1, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5, par6 + 2, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5 + 1, par6 + 2, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5 + 2, par6 + 2, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5 + 2, par6 + 1, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, par5 + 2, par6, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.doorIron.blockID, 0, par5 + 1, par6, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.doorIron.blockID, 8, par5 + 1, par6 + 1, par7, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneButton.blockID, this.getMetadataWithOffset(Block.stoneButton.blockID, 4), par5 + 2, par6 + 1, par7 + 1, par3StructureBoundingBox);
+				this.placeBlockAtCurrentPosition(par1World, Block.stoneButton.blockID, this.getMetadataWithOffset(Block.stoneButton.blockID, 3), par5 + 2, par6 + 1, par7 - 1, par3StructureBoundingBox);
+		}
+	}
+
+	protected EnumDoor getRandomDoor(Random par1Random) {
+		int var2 = par1Random.nextInt(5);
+
+		switch (var2) {
+			case 0:
+			case 1:
+			default:
+				return EnumDoor.OPENING;
+
+			case 2:
+				return EnumDoor.WOOD_DOOR;
+
+			case 3:
+				return EnumDoor.GRATES;
+
+			case 4:
+				return EnumDoor.IRON_DOOR;
+		}
+	}
+
+	/**
+	 * Gets the next component in any cardinal direction
+	 */
+	protected StructureComponent getNextComponentNormal(ComponentStrongholdStairs2 par1ComponentStrongholdStairs2, List par2List, Random par3Random, int par4, int par5) {
+		switch (this.coordBaseMode) {
+			case 0:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.minX + par4, this.boundingBox.minY + par5, this.boundingBox.maxZ + 1, this.coordBaseMode, this.getComponentType());
+
+			case 1:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.minX - 1, this.boundingBox.minY + par5, this.boundingBox.minZ + par4, this.coordBaseMode, this.getComponentType());
+
+			case 2:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.minX + par4, this.boundingBox.minY + par5, this.boundingBox.minZ - 1, this.coordBaseMode, this.getComponentType());
+
+			case 3:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.maxX + 1, this.boundingBox.minY + par5, this.boundingBox.minZ + par4, this.coordBaseMode, this.getComponentType());
+
+			default:
+				return null;
+		}
+	}
+
+	/**
+	 * Gets the next component in the +/- X direction
+	 */
+	protected StructureComponent getNextComponentX(ComponentStrongholdStairs2 par1ComponentStrongholdStairs2, List par2List, Random par3Random, int par4, int par5) {
+		switch (this.coordBaseMode) {
+			case 0:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.minX - 1, this.boundingBox.minY + par4, this.boundingBox.minZ + par5, 1, this.getComponentType());
+
+			case 1:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.minX + par5, this.boundingBox.minY + par4, this.boundingBox.minZ - 1, 2, this.getComponentType());
+
+			case 2:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.minX - 1, this.boundingBox.minY + par4, this.boundingBox.minZ + par5, 1, this.getComponentType());
+
+			case 3:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.minX + par5, this.boundingBox.minY + par4, this.boundingBox.minZ - 1, 2, this.getComponentType());
+
+			default:
+				return null;
+		}
+	}
+
+	/**
+	 * Gets the next component in the +/- Z direction
+	 */
+	protected StructureComponent getNextComponentZ(ComponentStrongholdStairs2 par1ComponentStrongholdStairs2, List par2List, Random par3Random, int par4, int par5) {
+		switch (this.coordBaseMode) {
+			case 0:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.maxX + 1, this.boundingBox.minY + par4, this.boundingBox.minZ + par5, 3, this.getComponentType());
+
+			case 1:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.minX + par5, this.boundingBox.minY + par4, this.boundingBox.maxZ + 1, 0, this.getComponentType());
+
+			case 2:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.maxX + 1, this.boundingBox.minY + par4, this.boundingBox.minZ + par5, 3, this.getComponentType());
+
+			case 3:
+				return StructureStrongholdPieces.getNextValidComponentAccess(par1ComponentStrongholdStairs2, par2List, par3Random, this.boundingBox.minX + par5, this.boundingBox.minY + par4, this.boundingBox.maxZ + 1, 0, this.getComponentType());
+
+			default:
+				return null;
+		}
+	}
+
+	/**
+	 * returns false if the Structure Bounding Box goes below 10
+	 */
+	protected static boolean canStrongholdGoDeeper(StructureBoundingBox par0StructureBoundingBox) {
+		return par0StructureBoundingBox != null && par0StructureBoundingBox.minY > 10;
 	}
 }
