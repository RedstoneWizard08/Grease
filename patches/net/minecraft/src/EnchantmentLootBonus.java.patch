--- net/minecraft/src/EnchantmentLootBonus.java
+++ net/minecraft/src/EnchantmentLootBonus.java
@@ -1,28 +1,40 @@
 package net.minecraft.src;
 
 public class EnchantmentLootBonus extends Enchantment {
-	protected EnchantmentLootBonus(int var1, int var2, EnumEnchantmentType var3) {
-		super(var1, var2, var3);
+	protected EnchantmentLootBonus(int par1, int par2, EnumEnchantmentType par3EnumEnchantmentType) {
+		super(par1, par2, par3EnumEnchantmentType);
 		this.setName("lootBonus");
-		if(var3 == EnumEnchantmentType.digger) {
+
+		if (par3EnumEnchantmentType == EnumEnchantmentType.digger) {
 			this.setName("lootBonusDigger");
 		}
-
-	}
-
-	public int getMinEnchantability(int var1) {
-		return 15 + (var1 - 1) * 9;
-	}
-
-	public int getMaxEnchantability(int var1) {
-		return super.getMinEnchantability(var1) + 50;
-	}
-
+	}
+
+	/**
+	 * Returns the minimal value of enchantability needed on the enchantment level passed.
+	 */
+	public int getMinEnchantability(int par1) {
+		return 15 + (par1 - 1) * 9;
+	}
+
+	/**
+	 * Returns the maximum value of enchantability nedded on the enchantment level passed.
+	 */
+	public int getMaxEnchantability(int par1) {
+		return super.getMinEnchantability(par1) + 50;
+	}
+
+	/**
+	 * Returns the maximum level that the enchantment can have.
+	 */
 	public int getMaxLevel() {
 		return 3;
 	}
 
-	public boolean canApplyTogether(Enchantment var1) {
-		return super.canApplyTogether(var1) && var1.effectId != silkTouch.effectId;
+	/**
+	 * Determines if the enchantment passed can be applyied together with this enchantment.
+	 */
+	public boolean canApplyTogether(Enchantment par1Enchantment) {
+		return super.canApplyTogether(par1Enchantment) && par1Enchantment.effectId != silkTouch.effectId;
 	}
 }
