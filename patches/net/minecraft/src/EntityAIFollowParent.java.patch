--- net/minecraft/src/EntityAIFollowParent.java
+++ net/minecraft/src/EntityAIFollowParent.java
@@ -4,18 +4,23 @@
 import java.util.List;
 
 public class EntityAIFollowParent extends EntityAIBase {
+
+	/** The child that is following its parent. */
 	EntityAnimal childAnimal;
 	EntityAnimal parentAnimal;
 	double field_75347_c;
 	private int field_75345_d;
 
-	public EntityAIFollowParent(EntityAnimal var1, double var2) {
-		this.childAnimal = var1;
-		this.field_75347_c = var2;
+	public EntityAIFollowParent(EntityAnimal par1EntityAnimal, double par2) {
+		this.childAnimal = par1EntityAnimal;
+		this.field_75347_c = par2;
 	}
 
+	/**
+	 * Returns whether the EntityAIBase should begin execution.
+	 */
 	public boolean shouldExecute() {
-		if(this.childAnimal.getGrowingAge() >= 0) {
+		if (this.childAnimal.getGrowingAge() >= 0) {
 			return false;
 		} else {
 			List var1 = this.childAnimal.worldObj.getEntitiesWithinAABB(this.childAnimal.getClass(), this.childAnimal.boundingBox.expand(8.0D, 4.0D, 8.0D));
@@ -23,20 +28,22 @@
 			double var3 = Double.MAX_VALUE;
 			Iterator var5 = var1.iterator();
 
-			while(var5.hasNext()) {
+			while (var5.hasNext()) {
 				EntityAnimal var6 = (EntityAnimal)var5.next();
-				if(var6.getGrowingAge() >= 0) {
+
+				if (var6.getGrowingAge() >= 0) {
 					double var7 = this.childAnimal.getDistanceSqToEntity(var6);
-					if(var7 <= var3) {
+
+					if (var7 <= var3) {
 						var3 = var7;
 						var2 = var6;
 					}
 				}
 			}
 
-			if(var2 == null) {
+			if (var2 == null) {
 				return false;
-			} else if(var3 < 9.0D) {
+			} else if (var3 < 9.0D) {
 				return false;
 			} else {
 				this.parentAnimal = var2;
@@ -45,8 +52,11 @@
 		}
 	}
 
+	/**
+	 * Returns whether an in-progress EntityAIBase should continue executing
+	 */
 	public boolean continueExecuting() {
-		if(!this.parentAnimal.isEntityAlive()) {
+		if (!this.parentAnimal.isEntityAlive()) {
 			return false;
 		} else {
 			double var1 = this.childAnimal.getDistanceSqToEntity(this.parentAnimal);
@@ -54,16 +64,25 @@
 		}
 	}
 
+	/**
+	 * Execute a one shot task or start executing a continuous task
+	 */
 	public void startExecuting() {
 		this.field_75345_d = 0;
 	}
 
+	/**
+	 * Resets the task
+	 */
 	public void resetTask() {
 		this.parentAnimal = null;
 	}
 
+	/**
+	 * Updates the task
+	 */
 	public void updateTask() {
-		if(--this.field_75345_d <= 0) {
+		if (--this.field_75345_d <= 0) {
 			this.field_75345_d = 10;
 			this.childAnimal.getNavigator().tryMoveToEntityLiving(this.parentAnimal, this.field_75347_c);
 		}
