--- net/minecraft/src/EntityAILookAtVillager.java
+++ net/minecraft/src/EntityAILookAtVillager.java
@@ -5,15 +5,18 @@
 	private EntityVillager theVillager;
 	private int lookTime;
 
-	public EntityAILookAtVillager(EntityIronGolem var1) {
-		this.theGolem = var1;
+	public EntityAILookAtVillager(EntityIronGolem par1EntityIronGolem) {
+		this.theGolem = par1EntityIronGolem;
 		this.setMutexBits(3);
 	}
 
+	/**
+	 * Returns whether the EntityAIBase should begin execution.
+	 */
 	public boolean shouldExecute() {
-		if(!this.theGolem.worldObj.isDaytime()) {
+		if (!this.theGolem.worldObj.isDaytime()) {
 			return false;
-		} else if(this.theGolem.getRNG().nextInt(8000) != 0) {
+		} else if (this.theGolem.getRNG().nextInt(8000) != 0) {
 			return false;
 		} else {
 			this.theVillager = (EntityVillager)this.theGolem.worldObj.findNearestEntityWithinAABB(EntityVillager.class, this.theGolem.boundingBox.expand(6.0D, 2.0D, 6.0D), this.theGolem);
@@ -21,20 +24,32 @@
 		}
 	}
 
+	/**
+	 * Returns whether an in-progress EntityAIBase should continue executing
+	 */
 	public boolean continueExecuting() {
 		return this.lookTime > 0;
 	}
 
+	/**
+	 * Execute a one shot task or start executing a continuous task
+	 */
 	public void startExecuting() {
 		this.lookTime = 400;
 		this.theGolem.setHoldingRose(true);
 	}
 
+	/**
+	 * Resets the task
+	 */
 	public void resetTask() {
 		this.theGolem.setHoldingRose(false);
 		this.theVillager = null;
 	}
 
+	/**
+	 * Updates the task
+	 */
 	public void updateTask() {
 		this.theGolem.getLookHelper().setLookPositionWithEntity(this.theVillager, 30.0F, 30.0F);
 		--this.lookTime;
