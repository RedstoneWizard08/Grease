--- net/minecraft/src/EntityAIMoveTowardsRestriction.java
+++ net/minecraft/src/EntityAIMoveTowardsRestriction.java
@@ -7,19 +7,23 @@
 	private double movePosZ;
 	private double movementSpeed;
 
-	public EntityAIMoveTowardsRestriction(EntityCreature var1, double var2) {
-		this.theEntity = var1;
-		this.movementSpeed = var2;
+	public EntityAIMoveTowardsRestriction(EntityCreature par1EntityCreature, double par2) {
+		this.theEntity = par1EntityCreature;
+		this.movementSpeed = par2;
 		this.setMutexBits(1);
 	}
 
+	/**
+	 * Returns whether the EntityAIBase should begin execution.
+	 */
 	public boolean shouldExecute() {
-		if(this.theEntity.func_110173_bK()) {
+		if (this.theEntity.func_110173_bK()) {
 			return false;
 		} else {
 			ChunkCoordinates var1 = this.theEntity.getHomePosition();
 			Vec3 var2 = RandomPositionGenerator.findRandomTargetBlockTowards(this.theEntity, 16, 7, this.theEntity.worldObj.getWorldVec3Pool().getVecFromPool((double)var1.posX, (double)var1.posY, (double)var1.posZ));
-			if(var2 == null) {
+
+			if (var2 == null) {
 				return false;
 			} else {
 				this.movePosX = var2.xCoord;
@@ -30,10 +34,16 @@
 		}
 	}
 
+	/**
+	 * Returns whether an in-progress EntityAIBase should continue executing
+	 */
 	public boolean continueExecuting() {
 		return !this.theEntity.getNavigator().noPath();
 	}
 
+	/**
+	 * Execute a one shot task or start executing a continuous task
+	 */
 	public void startExecuting() {
 		this.theEntity.getNavigator().tryMoveToXYZ(this.movePosX, this.movePosY, this.movePosZ, this.movementSpeed);
 	}
