--- net/minecraft/src/EntityAIOwnerHurtTarget.java
+++ net/minecraft/src/EntityAIOwnerHurtTarget.java
@@ -5,18 +5,22 @@
 	EntityLivingBase theTarget;
 	private int field_142050_e;
 
-	public EntityAIOwnerHurtTarget(EntityTameable var1) {
-		super(var1, false);
-		this.theEntityTameable = var1;
+	public EntityAIOwnerHurtTarget(EntityTameable par1EntityTameable) {
+		super(par1EntityTameable, false);
+		this.theEntityTameable = par1EntityTameable;
 		this.setMutexBits(1);
 	}
 
+	/**
+	 * Returns whether the EntityAIBase should begin execution.
+	 */
 	public boolean shouldExecute() {
-		if(!this.theEntityTameable.isTamed()) {
+		if (!this.theEntityTameable.isTamed()) {
 			return false;
 		} else {
 			EntityLivingBase var1 = this.theEntityTameable.func_130012_q();
-			if(var1 == null) {
+
+			if (var1 == null) {
 				return false;
 			} else {
 				this.theTarget = var1.getLastAttacker();
@@ -26,10 +30,14 @@
 		}
 	}
 
+	/**
+	 * Execute a one shot task or start executing a continuous task
+	 */
 	public void startExecuting() {
 		this.taskOwner.setAttackTarget(this.theTarget);
 		EntityLivingBase var1 = this.theEntityTameable.func_130012_q();
-		if(var1 != null) {
+
+		if (var1 != null) {
 			this.field_142050_e = var1.getLastAttackerTime();
 		}
 
