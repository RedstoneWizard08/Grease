--- net/minecraft/src/EntityAISit.java
+++ net/minecraft/src/EntityAISit.java
@@ -2,19 +2,24 @@
 
 public class EntityAISit extends EntityAIBase {
 	private EntityTameable theEntity;
+
+	/** If the EntityTameable is sitting. */
 	private boolean isSitting;
 
-	public EntityAISit(EntityTameable var1) {
-		this.theEntity = var1;
+	public EntityAISit(EntityTameable par1EntityTameable) {
+		this.theEntity = par1EntityTameable;
 		this.setMutexBits(5);
 	}
 
+	/**
+	 * Returns whether the EntityAIBase should begin execution.
+	 */
 	public boolean shouldExecute() {
-		if(!this.theEntity.isTamed()) {
-			return false;
-		} else if(this.theEntity.isInWater()) {
-			return false;
-		} else if(!this.theEntity.onGround) {
+		if (!this.theEntity.isTamed()) {
+			return false;
+		} else if (this.theEntity.isInWater()) {
+			return false;
+		} else if (!this.theEntity.onGround) {
 			return false;
 		} else {
 			EntityLivingBase var1 = this.theEntity.func_130012_q();
@@ -22,16 +27,25 @@
 		}
 	}
 
+	/**
+	 * Execute a one shot task or start executing a continuous task
+	 */
 	public void startExecuting() {
 		this.theEntity.getNavigator().clearPathEntity();
 		this.theEntity.setSitting(true);
 	}
 
+	/**
+	 * Resets the task
+	 */
 	public void resetTask() {
 		this.theEntity.setSitting(false);
 	}
 
-	public void setSitting(boolean var1) {
-		this.isSitting = var1;
+	/**
+	 * Sets the sitting flag.
+	 */
+	public void setSitting(boolean par1) {
+		this.isSitting = par1;
 	}
 }
