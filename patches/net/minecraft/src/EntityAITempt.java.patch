--- net/minecraft/src/EntityAITempt.java
+++ net/minecraft/src/EntityAITempt.java
@@ -1,35 +1,64 @@
 package net.minecraft.src;
 
 public class EntityAITempt extends EntityAIBase {
+
+	/** The entity using this AI that is tempted by the player. */
 	private EntityCreature temptedEntity;
 	private double field_75282_b;
+
+	/** X position of player tempting this mob */
 	private double targetX;
+
+	/** Y position of player tempting this mob */
 	private double targetY;
+
+	/** Z position of player tempting this mob */
 	private double targetZ;
 	private double field_75278_f;
 	private double field_75279_g;
+
+	/** The player that is tempting the entity that is using this AI. */
 	private EntityPlayer temptingPlayer;
+
+	/**
+	 * A counter that is decremented each time the shouldExecute method is called. The shouldExecute method will always
+	 * return false if delayTemptCounter is greater than 0.
+	 */
 	private int delayTemptCounter;
+
+	/** True if this EntityAITempt task is running */
 	private boolean isRunning;
+
+	/**
+	 * This field saves the ID of the items that can be used to breed entities with this behaviour.
+	 */
 	private int breedingFood;
+
+	/**
+	 * Whether the entity using this AI will be scared by the tempter's sudden movement.
+	 */
 	private boolean scaredByPlayerMovement;
 	private boolean field_75286_m;
 
-	public EntityAITempt(EntityCreature var1, double var2, int var4, boolean var5) {
-		this.temptedEntity = var1;
-		this.field_75282_b = var2;
-		this.breedingFood = var4;
-		this.scaredByPlayerMovement = var5;
+	public EntityAITempt(EntityCreature par1EntityCreature, double par2, int par4, boolean par5) {
+		this.temptedEntity = par1EntityCreature;
+		this.field_75282_b = par2;
+		this.breedingFood = par4;
+		this.scaredByPlayerMovement = par5;
 		this.setMutexBits(3);
 	}
 
+	/**
+	 * Returns whether the EntityAIBase should begin execution.
+	 */
 	public boolean shouldExecute() {
-		if(this.delayTemptCounter > 0) {
+		if (this.delayTemptCounter > 0) {
 			--this.delayTemptCounter;
 			return false;
 		} else {
 			this.temptingPlayer = this.temptedEntity.worldObj.getClosestPlayerToEntity(this.temptedEntity, 10.0D);
-			if(this.temptingPlayer == null) {
+
+			if (this.temptingPlayer == null) {
 				return false;
 			} else {
 				ItemStack var1 = this.temptingPlayer.getCurrentEquippedItem();
@@ -38,14 +67,17 @@
 		}
 	}
 
+	/**
+	 * Returns whether an in-progress EntityAIBase should continue executing
+	 */
 	public boolean continueExecuting() {
-		if(this.scaredByPlayerMovement) {
-			if(this.temptedEntity.getDistanceSqToEntity(this.temptingPlayer) < 36.0D) {
-				if(this.temptingPlayer.getDistanceSq(this.targetX, this.targetY, this.targetZ) > 0.1D * 0.1D) {
+		if (this.scaredByPlayerMovement) {
+			if (this.temptedEntity.getDistanceSqToEntity(this.temptingPlayer) < 36.0D) {
+				if (this.temptingPlayer.getDistanceSq(this.targetX, this.targetY, this.targetZ) > 0.010000000000000002D) {
 					return false;
 				}
 
-				if(Math.abs((double)this.temptingPlayer.rotationPitch - this.field_75278_f) > 5.0D || Math.abs((double)this.temptingPlayer.rotationYaw - this.field_75279_g) > 5.0D) {
+				if (Math.abs((double)this.temptingPlayer.rotationPitch - this.field_75278_f) > 5.0D || Math.abs((double)this.temptingPlayer.rotationYaw - this.field_75279_g) > 5.0D) {
 					return false;
 				}
 			} else {
@@ -61,6 +93,9 @@
 		return this.shouldExecute();
 	}
 
+	/**
+	 * Execute a one shot task or start executing a continuous task
+	 */
 	public void startExecuting() {
 		this.targetX = this.temptingPlayer.posX;
 		this.targetY = this.temptingPlayer.posY;
@@ -70,6 +105,9 @@
 		this.temptedEntity.getNavigator().setAvoidsWater(false);
 	}
 
+	/**
+	 * Resets the task
+	 */
 	public void resetTask() {
 		this.temptingPlayer = null;
 		this.temptedEntity.getNavigator().clearPathEntity();
@@ -78,16 +116,22 @@
 		this.temptedEntity.getNavigator().setAvoidsWater(this.field_75286_m);
 	}
 
+	/**
+	 * Updates the task
+	 */
 	public void updateTask() {
 		this.temptedEntity.getLookHelper().setLookPositionWithEntity(this.temptingPlayer, 30.0F, (float)this.temptedEntity.getVerticalFaceSpeed());
-		if(this.temptedEntity.getDistanceSqToEntity(this.temptingPlayer) < 6.25D) {
+
+		if (this.temptedEntity.getDistanceSqToEntity(this.temptingPlayer) < 6.25D) {
 			this.temptedEntity.getNavigator().clearPathEntity();
 		} else {
 			this.temptedEntity.getNavigator().tryMoveToEntityLiving(this.temptingPlayer, this.field_75282_b);
 		}
-
 	}
 
+	/**
+	 * @see #isRunning
+	 */
 	public boolean isRunning() {
 		return this.isRunning;
 	}
