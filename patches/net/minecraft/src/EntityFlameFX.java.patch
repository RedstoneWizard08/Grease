--- net/minecraft/src/EntityFlameFX.java
+++ net/minecraft/src/EntityFlameFX.java
@@ -1,16 +1,18 @@
 package net.minecraft.src;
 
 public class EntityFlameFX extends EntityFX {
+
+	/** the scale of the flame FX */
 	private float flameScale;
 
-	public EntityFlameFX(World var1, double var2, double var4, double var6, double var8, double var10, double var12) {
-		super(var1, var2, var4, var6, var8, var10, var12);
-		this.motionX = this.motionX * (double)0.01F + var8;
-		this.motionY = this.motionY * (double)0.01F + var10;
-		this.motionZ = this.motionZ * (double)0.01F + var12;
-		double var10000 = var2 + (double)((this.ab.nextFloat() - this.ab.nextFloat()) * 0.05F);
-		var10000 = var4 + (double)((this.ab.nextFloat() - this.ab.nextFloat()) * 0.05F);
-		var10000 = var6 + (double)((this.ab.nextFloat() - this.ab.nextFloat()) * 0.05F);
+	public EntityFlameFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12) {
+		super(par1World, par2, par4, par6, par8, par10, par12);
+		this.motionX = this.motionX * 0.009999999776482582D + par8;
+		this.motionY = this.motionY * 0.009999999776482582D + par10;
+		this.motionZ = this.motionZ * 0.009999999776482582D + par12;
+		double var10000 = par2 + (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.05F);
+		var10000 = par4 + (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.05F);
+		var10000 = par6 + (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.05F);
 		this.flameScale = this.particleScale;
 		this.particleRed = this.particleGreen = this.particleBlue = 1.0F;
 		this.particleMaxAge = (int)(8.0D / (Math.random() * 0.8D + 0.2D)) + 4;
@@ -18,63 +20,73 @@
 		this.setParticleTextureIndex(48);
 	}
 
-	public void renderParticle(Tessellator var1, float var2, float var3, float var4, float var5, float var6, float var7) {
-		float var8 = ((float)this.particleAge + var2) / (float)this.particleMaxAge;
+	public void renderParticle(Tessellator par1Tessellator, float par2, float par3, float par4, float par5, float par6, float par7) {
+		float var8 = ((float)this.particleAge + par2) / (float)this.particleMaxAge;
 		this.particleScale = this.flameScale * (1.0F - var8 * var8 * 0.5F);
-		super.renderParticle(var1, var2, var3, var4, var5, var6, var7);
+		super.renderParticle(par1Tessellator, par2, par3, par4, par5, par6, par7);
 	}
 
-	public int getBrightnessForRender(float var1) {
-		float var2 = ((float)this.particleAge + var1) / (float)this.particleMaxAge;
-		if(var2 < 0.0F) {
+	public int getBrightnessForRender(float par1) {
+		float var2 = ((float)this.particleAge + par1) / (float)this.particleMaxAge;
+
+		if (var2 < 0.0F) {
 			var2 = 0.0F;
 		}
 
-		if(var2 > 1.0F) {
+		if (var2 > 1.0F) {
 			var2 = 1.0F;
 		}
 
-		int var3 = super.getBrightnessForRender(var1);
+		int var3 = super.getBrightnessForRender(par1);
 		int var4 = var3 & 255;
 		int var5 = var3 >> 16 & 255;
 		var4 += (int)(var2 * 15.0F * 16.0F);
-		if(var4 > 240) {
+
+		if (var4 > 240) {
 			var4 = 240;
 		}
 
 		return var4 | var5 << 16;
 	}
 
-	public float getBrightness(float var1) {
-		float var2 = ((float)this.particleAge + var1) / (float)this.particleMaxAge;
-		if(var2 < 0.0F) {
+	/**
+	 * Gets how bright this entity is.
+	 */
+	public float getBrightness(float par1) {
+		float var2 = ((float)this.particleAge + par1) / (float)this.particleMaxAge;
+
+		if (var2 < 0.0F) {
 			var2 = 0.0F;
 		}
 
-		if(var2 > 1.0F) {
+		if (var2 > 1.0F) {
 			var2 = 1.0F;
 		}
 
-		float var3 = super.getBrightness(var1);
+		float var3 = super.getBrightness(par1);
 		return var3 * var2 + (1.0F - var2);
 	}
 
+	/**
+	 * Called to update the entity's position/logic.
+	 */
 	public void onUpdate() {
 		this.prevPosX = this.posX;
 		this.prevPosY = this.posY;
 		this.prevPosZ = this.posZ;
-		if(this.particleAge++ >= this.particleMaxAge) {
+
+		if (this.particleAge++ >= this.particleMaxAge) {
 			this.setDead();
 		}
 
 		this.moveEntity(this.motionX, this.motionY, this.motionZ);
-		this.motionX *= (double)0.96F;
-		this.motionY *= (double)0.96F;
-		this.motionZ *= (double)0.96F;
-		if(this.onGround) {
-			this.motionX *= (double)0.7F;
-			this.motionZ *= (double)0.7F;
-		}
+		this.motionX *= 0.9599999785423279D;
+		this.motionY *= 0.9599999785423279D;
+		this.motionZ *= 0.9599999785423279D;
 
+		if (this.onGround) {
+			this.motionX *= 0.699999988079071D;
+			this.motionZ *= 0.699999988079071D;
+		}
 	}
 }
