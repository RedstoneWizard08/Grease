--- net/minecraft/src/EntityLavaFX.java
+++ net/minecraft/src/EntityLavaFX.java
@@ -3,68 +3,77 @@
 public class EntityLavaFX extends EntityFX {
 	private float lavaParticleScale;
 
-	public EntityLavaFX(World var1, double var2, double var4, double var6) {
-		super(var1, var2, var4, var6, 0.0D, 0.0D, 0.0D);
-		this.motionX *= (double)0.8F;
-		this.motionY *= (double)0.8F;
-		this.motionZ *= (double)0.8F;
-		this.motionY = (double)(this.ab.nextFloat() * 0.4F + 0.05F);
+	public EntityLavaFX(World par1World, double par2, double par4, double par6) {
+		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		this.motionX *= 0.800000011920929D;
+		this.motionY *= 0.800000011920929D;
+		this.motionZ *= 0.800000011920929D;
+		this.motionY = (double)(this.rand.nextFloat() * 0.4F + 0.05F);
 		this.particleRed = this.particleGreen = this.particleBlue = 1.0F;
-		this.particleScale *= this.ab.nextFloat() * 2.0F + 0.2F;
+		this.particleScale *= this.rand.nextFloat() * 2.0F + 0.2F;
 		this.lavaParticleScale = this.particleScale;
 		this.particleMaxAge = (int)(16.0D / (Math.random() * 0.8D + 0.2D));
 		this.noClip = false;
 		this.setParticleTextureIndex(49);
 	}
 
-	public int getBrightnessForRender(float var1) {
-		float var2 = ((float)this.particleAge + var1) / (float)this.particleMaxAge;
-		if(var2 < 0.0F) {
+	public int getBrightnessForRender(float par1) {
+		float var2 = ((float)this.particleAge + par1) / (float)this.particleMaxAge;
+
+		if (var2 < 0.0F) {
 			var2 = 0.0F;
 		}
 
-		if(var2 > 1.0F) {
+		if (var2 > 1.0F) {
 			var2 = 1.0F;
 		}
 
-		int var3 = super.getBrightnessForRender(var1);
+		int var3 = super.getBrightnessForRender(par1);
 		short var4 = 240;
 		int var5 = var3 >> 16 & 255;
 		return var4 | var5 << 16;
 	}
 
-	public float getBrightness(float var1) {
+	/**
+	 * Gets how bright this entity is.
+	 */
+	public float getBrightness(float par1) {
 		return 1.0F;
 	}
 
-	public void renderParticle(Tessellator var1, float var2, float var3, float var4, float var5, float var6, float var7) {
-		float var8 = ((float)this.particleAge + var2) / (float)this.particleMaxAge;
+	public void renderParticle(Tessellator par1Tessellator, float par2, float par3, float par4, float par5, float par6, float par7) {
+		float var8 = ((float)this.particleAge + par2) / (float)this.particleMaxAge;
 		this.particleScale = this.lavaParticleScale * (1.0F - var8 * var8);
-		super.renderParticle(var1, var2, var3, var4, var5, var6, var7);
+		super.renderParticle(par1Tessellator, par2, par3, par4, par5, par6, par7);
 	}
 
+	/**
+	 * Called to update the entity's position/logic.
+	 */
 	public void onUpdate() {
 		this.prevPosX = this.posX;
 		this.prevPosY = this.posY;
 		this.prevPosZ = this.posZ;
-		if(this.particleAge++ >= this.particleMaxAge) {
+
+		if (this.particleAge++ >= this.particleMaxAge) {
 			this.setDead();
 		}
 
 		float var1 = (float)this.particleAge / (float)this.particleMaxAge;
-		if(this.ab.nextFloat() > var1) {
+
+		if (this.rand.nextFloat() > var1) {
 			this.worldObj.spawnParticle("smoke", this.posX, this.posY, this.posZ, this.motionX, this.motionY, this.motionZ);
 		}
 
 		this.motionY -= 0.03D;
 		this.moveEntity(this.motionX, this.motionY, this.motionZ);
-		this.motionX *= (double)0.999F;
-		this.motionY *= (double)0.999F;
-		this.motionZ *= (double)0.999F;
-		if(this.onGround) {
-			this.motionX *= (double)0.7F;
-			this.motionZ *= (double)0.7F;
-		}
+		this.motionX *= 0.9990000128746033D;
+		this.motionY *= 0.9990000128746033D;
+		this.motionZ *= 0.9990000128746033D;
 
+		if (this.onGround) {
+			this.motionX *= 0.699999988079071D;
+			this.motionZ *= 0.699999988079071D;
+		}
 	}
 }
