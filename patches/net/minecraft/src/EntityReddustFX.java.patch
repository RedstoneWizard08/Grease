--- net/minecraft/src/EntityReddustFX.java
+++ net/minecraft/src/EntityReddustFX.java
@@ -1,69 +1,89 @@
 package net.minecraft.src;
 
+// MCPatcher Start
+import com.prupe.mcpatcher.cc.ColorizeBlock;
+import com.prupe.mcpatcher.cc.Colorizer;
+// MCPatcher End
+
 public class EntityReddustFX extends EntityFX {
 	float reddustParticleScale;
 
-	public EntityReddustFX(World var1, double var2, double var4, double var6, float var8, float var9, float var10) {
-		this(var1, var2, var4, var6, 1.0F, var8, var9, var10);
+	public EntityReddustFX(World par1World, double par2, double par4, double par6, float par8, float par9, float par10) {
+		this(par1World, par2, par4, par6, 1.0F, par8, par9, par10);
 	}
 
-	public EntityReddustFX(World var1, double var2, double var4, double var6, float var8, float var9, float var10, float var11) {
-		super(var1, var2, var4, var6, 0.0D, 0.0D, 0.0D);
-		this.motionX *= (double)0.1F;
-		this.motionY *= (double)0.1F;
-		this.motionZ *= (double)0.1F;
-		if(var9 == 0.0F) {
-			var9 = 1.0F;
+	public EntityReddustFX(World par1World, double par2, double par4, double par6, float par8, float par9, float par10, float par11) {
+		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		this.motionX *= 0.10000000149011612D;
+		this.motionY *= 0.10000000149011612D;
+		this.motionZ *= 0.10000000149011612D;
+
+		if (par9 == 0.0F) {
+			par9 = 1.0F;
+
+			// MCPatcher Start
+			if (ColorizeBlock.computeRedstoneWireColor(15)) {
+				par9 = Colorizer.setColor[0];
+				par10 = Colorizer.setColor[1];
+				par11 = Colorizer.setColor[2];
+			}
+			// MCPatcher End
 		}
 
 		float var12 = (float)Math.random() * 0.4F + 0.6F;
-		this.particleRed = ((float)(Math.random() * (double)0.2F) + 0.8F) * var9 * var12;
-		this.particleGreen = ((float)(Math.random() * (double)0.2F) + 0.8F) * var10 * var12;
-		this.particleBlue = ((float)(Math.random() * (double)0.2F) + 0.8F) * var11 * var12;
-		this.particleScale *= 12.0F / 16.0F;
-		this.particleScale *= var8;
+		this.particleRed = ((float)(Math.random() * 0.20000000298023224D) + 0.8F) * par9 * var12;
+		this.particleGreen = ((float)(Math.random() * 0.20000000298023224D) + 0.8F) * par10 * var12;
+		this.particleBlue = ((float)(Math.random() * 0.20000000298023224D) + 0.8F) * par11 * var12;
+		this.particleScale *= 0.75F;
+		this.particleScale *= par8;
 		this.reddustParticleScale = this.particleScale;
 		this.particleMaxAge = (int)(8.0D / (Math.random() * 0.8D + 0.2D));
-		this.particleMaxAge = (int)((float)this.particleMaxAge * var8);
+		this.particleMaxAge = (int)((float)this.particleMaxAge * par8);
 		this.noClip = false;
 	}
 
-	public void renderParticle(Tessellator var1, float var2, float var3, float var4, float var5, float var6, float var7) {
-		float var8 = ((float)this.particleAge + var2) / (float)this.particleMaxAge * 32.0F;
-		if(var8 < 0.0F) {
+	public void renderParticle(Tessellator par1Tessellator, float par2, float par3, float par4, float par5, float par6, float par7) {
+		float var8 = ((float)this.particleAge + par2) / (float)this.particleMaxAge * 32.0F;
+
+		if (var8 < 0.0F) {
 			var8 = 0.0F;
 		}
 
-		if(var8 > 1.0F) {
+		if (var8 > 1.0F) {
 			var8 = 1.0F;
 		}
 
 		this.particleScale = this.reddustParticleScale * var8;
-		super.renderParticle(var1, var2, var3, var4, var5, var6, var7);
+		super.renderParticle(par1Tessellator, par2, par3, par4, par5, par6, par7);
 	}
 
+	/**
+	 * Called to update the entity's position/logic.
+	 */
 	public void onUpdate() {
 		this.prevPosX = this.posX;
 		this.prevPosY = this.posY;
 		this.prevPosZ = this.posZ;
-		if(this.particleAge++ >= this.particleMaxAge) {
+
+		if (this.particleAge++ >= this.particleMaxAge) {
 			this.setDead();
 		}
 
 		this.setParticleTextureIndex(7 - this.particleAge * 8 / this.particleMaxAge);
 		this.moveEntity(this.motionX, this.motionY, this.motionZ);
-		if(this.posY == this.prevPosY) {
+
+		if (this.posY == this.prevPosY) {
 			this.motionX *= 1.1D;
 			this.motionZ *= 1.1D;
 		}
 
-		this.motionX *= (double)0.96F;
-		this.motionY *= (double)0.96F;
-		this.motionZ *= (double)0.96F;
-		if(this.onGround) {
-			this.motionX *= (double)0.7F;
-			this.motionZ *= (double)0.7F;
-		}
+		this.motionX *= 0.9599999785423279D;
+		this.motionY *= 0.9599999785423279D;
+		this.motionZ *= 0.9599999785423279D;
 
+		if (this.onGround) {
+			this.motionX *= 0.699999988079071D;
+			this.motionZ *= 0.699999988079071D;
+		}
 	}
 }
