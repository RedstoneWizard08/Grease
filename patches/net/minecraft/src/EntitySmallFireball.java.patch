--- net/minecraft/src/EntitySmallFireball.java
+++ net/minecraft/src/EntitySmallFireball.java
@@ -1,66 +1,80 @@
 package net.minecraft.src;
 
 public class EntitySmallFireball extends EntityFireball {
-	public EntitySmallFireball(World var1) {
-		super(var1);
-		this.setSize(5.0F / 16.0F, 5.0F / 16.0F);
-	}
-
-	public EntitySmallFireball(World var1, EntityLivingBase var2, double var3, double var5, double var7) {
-		super(var1, var2, var3, var5, var7);
-		this.setSize(5.0F / 16.0F, 5.0F / 16.0F);
-	}
-
-	public EntitySmallFireball(World var1, double var2, double var4, double var6, double var8, double var10, double var12) {
-		super(var1, var2, var4, var6, var8, var10, var12);
-		this.setSize(5.0F / 16.0F, 5.0F / 16.0F);
-	}
-
-	protected void onImpact(MovingObjectPosition var1) {
-		if(!this.worldObj.isRemote) {
-			if(var1.entityHit != null) {
-				if(!var1.entityHit.isImmuneToFire() && var1.entityHit.attackEntityFrom(DamageSource.causeFireballDamage(this, this.shootingEntity), 5.0F)) {
-					var1.entityHit.setFire(5);
+	public EntitySmallFireball(World par1World) {
+		super(par1World);
+		this.setSize(0.3125F, 0.3125F);
+	}
+
+	public EntitySmallFireball(World par1World, EntityLivingBase par2EntityLivingBase, double par3, double par5, double par7) {
+		super(par1World, par2EntityLivingBase, par3, par5, par7);
+		this.setSize(0.3125F, 0.3125F);
+	}
+
+	public EntitySmallFireball(World par1World, double par2, double par4, double par6, double par8, double par10, double par12) {
+		super(par1World, par2, par4, par6, par8, par10, par12);
+		this.setSize(0.3125F, 0.3125F);
+	}
+
+	/**
+	 * Called when this EntityFireball hits a block or entity.
+	 */
+	protected void onImpact(MovingObjectPosition par1MovingObjectPosition) {
+		if (!this.worldObj.isRemote) {
+			if (par1MovingObjectPosition.entityHit != null) {
+				if (!par1MovingObjectPosition.entityHit.isImmuneToFire() && par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeFireballDamage(this, this.shootingEntity), 5.0F)) {
+					par1MovingObjectPosition.entityHit.setFire(5);
 				}
 			} else {
-				int var2 = var1.blockX;
-				int var3 = var1.blockY;
-				int var4 = var1.blockZ;
-				switch(var1.sideHit) {
-				case 0:
-					--var3;
-					break;
-				case 1:
-					++var3;
-					break;
-				case 2:
-					--var4;
-					break;
-				case 3:
-					++var4;
-					break;
-				case 4:
-					--var2;
-					break;
-				case 5:
-					++var2;
+				int var2 = par1MovingObjectPosition.blockX;
+				int var3 = par1MovingObjectPosition.blockY;
+				int var4 = par1MovingObjectPosition.blockZ;
+
+				switch (par1MovingObjectPosition.sideHit) {
+					case 0:
+						--var3;
+						break;
+
+					case 1:
+						++var3;
+						break;
+
+					case 2:
+						--var4;
+						break;
+
+					case 3:
+						++var4;
+						break;
+
+					case 4:
+						--var2;
+						break;
+
+					case 5:
+						++var2;
 				}
 
-				if(this.worldObj.isAirBlock(var2, var3, var4)) {
+				if (this.worldObj.isAirBlock(var2, var3, var4)) {
 					this.worldObj.setBlock(var2, var3, var4, Block.fire.blockID);
 				}
 			}
 
 			this.setDead();
 		}
-
 	}
 
+	/**
+	 * Returns true if other Entities should be prevented from moving through this Entity.
+	 */
 	public boolean canBeCollidedWith() {
 		return false;
 	}
 
-	public boolean attackEntityFrom(DamageSource var1, float var2) {
+	/**
+	 * Called when the entity is attacked.
+	 */
+	public boolean attackEntityFrom(DamageSource par1DamageSource, float par2) {
 		return false;
 	}
 }
