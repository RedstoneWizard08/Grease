--- net/minecraft/src/EntityTNTPrimed.java
+++ net/minecraft/src/EntityTNTPrimed.java
@@ -1,65 +1,77 @@
 package net.minecraft.src;
 
 public class EntityTNTPrimed extends Entity {
+
+	/** How long the fuse is */
 	public int fuse;
 	private EntityLivingBase tntPlacedBy;
 
-	public EntityTNTPrimed(World var1) {
-		super(var1);
+	public EntityTNTPrimed(World par1World) {
+		super(par1World);		
 		this.preventEntitySpawning = true;
 		this.setSize(0.98F, 0.98F);
 		this.yOffset = this.height / 2.0F;
 	}
 
-	public EntityTNTPrimed(World var1, double var2, double var4, double var6, EntityLivingBase var8) {
-		this(var1);
-		this.setPosition(var2, var4, var6);
-		float var9 = (float)(Math.random() * (double)((float)Math.PI) * 2.0D);
+	public EntityTNTPrimed(World par1World, double par2, double par4, double par6, EntityLivingBase par8EntityLivingBase) {
+		this(par1World);
+		this.setPosition(par2, par4, par6);
+		float var9 = (float)(Math.random() * Math.PI * 2.0D);
 		this.motionX = (double)(-((float)Math.sin((double)var9)) * 0.02F);
-		this.motionY = (double)0.2F;
+		this.motionY = 0.20000000298023224D;
 		this.motionZ = (double)(-((float)Math.cos((double)var9)) * 0.02F);
 		this.fuse = 80;
-		this.prevPosX = var2;
-		this.prevPosY = var4;
-		this.prevPosZ = var6;
-		this.tntPlacedBy = var8;
-	}
-
-	protected void entityInit() {
-	}
-
+		this.prevPosX = par2;
+		this.prevPosY = par4;
+		this.prevPosZ = par6;
+		this.tntPlacedBy = par8EntityLivingBase;
+	}
+
+	protected void entityInit() {}
+
+	/**
+	 * returns if this entity triggers Block.onEntityWalking on the blocks they walk on. used for spiders and wolves to
+	 * prevent them from trampling crops
+	 */
 	protected boolean canTriggerWalking() {
 		return false;
 	}
 
+	/**
+	 * Returns true if other Entities should be prevented from moving through this Entity.
+	 */
 	public boolean canBeCollidedWith() {
 		return !this.isDead;
 	}
 
+	/**
+	 * Called to update the entity's position/logic.
+	 */
 	public void onUpdate() {
 		this.prevPosX = this.posX;
 		this.prevPosY = this.posY;
 		this.prevPosZ = this.posZ;
-		this.motionY -= (double)0.04F;
+		this.motionY -= 0.03999999910593033D;
 		this.moveEntity(this.motionX, this.motionY, this.motionZ);
-		this.motionX *= (double)0.98F;
-		this.motionY *= (double)0.98F;
-		this.motionZ *= (double)0.98F;
-		if(this.onGround) {
-			this.motionX *= (double)0.7F;
-			this.motionZ *= (double)0.7F;
+		this.motionX *= 0.9800000190734863D;
+		this.motionY *= 0.9800000190734863D;
+		this.motionZ *= 0.9800000190734863D;
+
+		if (this.onGround) {
+			this.motionX *= 0.699999988079071D;
+			this.motionZ *= 0.699999988079071D;
 			this.motionY *= -0.5D;
 		}
 
-		if(this.fuse-- <= 0) {
+		if (this.fuse-- <= 0) {
 			this.setDead();
-			if(!this.worldObj.isRemote) {
+
+			if (!this.worldObj.isRemote) {
 				this.explode();
 			}
 		} else {
 			this.worldObj.spawnParticle("smoke", this.posX, this.posY + 0.5D, this.posZ, 0.0D, 0.0D, 0.0D);
 		}
-
 	}
 
 	private void explode() {
@@ -67,18 +79,27 @@
 		this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, var1, true);
 	}
 
-	protected void writeEntityToNBT(NBTTagCompound var1) {
-		var1.setByte("Fuse", (byte)this.fuse);
+	/**
+	 * (abstract) Protected helper method to write subclass entity data to NBT.
+	 */
+	protected void writeEntityToNBT(NBTTagCompound par1NBTTagCompound) {
+		par1NBTTagCompound.setByte("Fuse", (byte)this.fuse);
 	}
 
-	protected void readEntityFromNBT(NBTTagCompound var1) {
-		this.fuse = var1.getByte("Fuse");
+	/**
+	 * (abstract) Protected helper method to read subclass entity data from NBT.
+	 */
+	protected void readEntityFromNBT(NBTTagCompound par1NBTTagCompound) {
+		this.fuse = par1NBTTagCompound.getByte("Fuse");
 	}
 
 	public float getShadowSize() {
 		return 0.0F;
 	}
 
+	/**
+	 * returns null or the entityliving it was placed or ignited by
+	 */
 	public EntityLivingBase getTntPlacedBy() {
 		return this.tntPlacedBy;
 	}
