--- net/minecraft/src/EnumGameType.java
+++ net/minecraft/src/EnumGameType.java
@@ -5,57 +5,78 @@
 	SURVIVAL(0, "survival"),
 	CREATIVE(1, "creative"),
 	ADVENTURE(2, "adventure");
-
 	int id;
-	String f;
+	String name;
 
-	private EnumGameType(int var3, String var4) {
-		this.id = var3;
-		this.f = var4;
+	private EnumGameType(int par3, String par4Str) {
+		this.id = par3;
+		this.name = par4Str;
 	}
 
+	/**
+	 * Returns the ID of this game type
+	 */
 	public int getID() {
 		return this.id;
 	}
 
+	/**
+	 * Returns the name of this game type
+	 */
 	public String getName() {
-		return this.f;
+		return this.name;
 	}
 
-	public void configurePlayerCapabilities(PlayerCapabilities var1) {
-		if(this == CREATIVE) {
-			var1.allowFlying = true;
-			var1.isCreativeMode = true;
-			var1.disableDamage = true;
+	/**
+	 * Configures the player capabilities based on the game type
+	 */
+	public void configurePlayerCapabilities(PlayerCapabilities par1PlayerCapabilities) {
+		if (this == CREATIVE) {
+			par1PlayerCapabilities.allowFlying = true;
+			par1PlayerCapabilities.isCreativeMode = true;
+			par1PlayerCapabilities.disableDamage = true;
 		} else {
-			var1.allowFlying = false;
-			var1.isCreativeMode = false;
-			var1.disableDamage = false;
-			var1.isFlying = false;
+			par1PlayerCapabilities.allowFlying = false;
+			par1PlayerCapabilities.isCreativeMode = false;
+			par1PlayerCapabilities.disableDamage = false;
+			par1PlayerCapabilities.isFlying = false;
 		}
 
-		var1.allowEdit = !this.isAdventure();
+		par1PlayerCapabilities.allowEdit = !this.isAdventure();
 	}
 
+	/**
+	 * Returns true if this is the ADVENTURE game type
+	 */
 	public boolean isAdventure() {
 		return this == ADVENTURE;
 	}
 
+	/**
+	 * Returns true if this is the CREATIVE game type
+	 */
 	public boolean isCreative() {
 		return this == CREATIVE;
 	}
 
+	/**
+	 * Returns true if this is the SURVIVAL or ADVENTURE game type
+	 */
 	public boolean isSurvivalOrAdventure() {
 		return this == SURVIVAL || this == ADVENTURE;
 	}
 
-	public static EnumGameType getByID(int var0) {
+	/**
+	 * Returns the game type with the specified ID, or SURVIVAL if none found. Args: id
+	 */
+	public static EnumGameType getByID(int par0) {
 		EnumGameType[] var1 = values();
 		int var2 = var1.length;
 
-		for(int var3 = 0; var3 < var2; ++var3) {
+		for (int var3 = 0; var3 < var2; ++var3) {
 			EnumGameType var4 = var1[var3];
-			if(var4.id == var0) {
+
+			if (var4.id == par0) {
 				return var4;
 			}
 		}
@@ -63,13 +84,17 @@
 		return SURVIVAL;
 	}
 
-	public static EnumGameType getByName(String var0) {
+	/**
+	 * Returns the game type with the specified name, or SURVIVAL if none found. This is case sensitive. Args: name
+	 */
+	public static EnumGameType getByName(String par0Str) {
 		EnumGameType[] var1 = values();
 		int var2 = var1.length;
 
-		for(int var3 = 0; var3 < var2; ++var3) {
+		for (int var3 = 0; var3 < var2; ++var3) {
 			EnumGameType var4 = var1[var3];
-			if(var4.f.equals(var0)) {
+
+			if (var4.name.equals(par0Str)) {
 				return var4;
 			}
 		}
