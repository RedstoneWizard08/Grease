--- net/minecraft/src/FileResourcePack.java
+++ net/minecraft/src/FileResourcePack.java
@@ -16,34 +16,35 @@
 import java.util.zip.ZipFile;
 
 public class FileResourcePack extends AbstractResourcePack implements Closeable {
-	public static final Splitter c = Splitter.on('/').omitEmptyStrings().limit(3);
-	private ZipFile d;
+	public static final Splitter entryNameSplitter = Splitter.on('/').omitEmptyStrings().limit(3);
+	public ZipFile resourcePackZipFile;
 
-	public FileResourcePack(File var1) {
-		super(var1);
+	public FileResourcePack(File par1File) {
+		super(par1File);
 	}
 
 	private ZipFile getResourcePackZipFile() throws IOException {
-		if(this.d == null) {
-			this.d = new ZipFile(this.b);
+		if (this.resourcePackZipFile == null) {
+			this.resourcePackZipFile = new ZipFile(this.resourcePackFile);
 		}
 
-		return this.d;
+		return this.resourcePackZipFile;
 	}
 
-	protected InputStream getInputStreamByName(String var1) throws IOException {
+	protected InputStream getInputStreamByName(String par1Str) throws IOException {
 		ZipFile var2 = this.getResourcePackZipFile();
-		ZipEntry var3 = var2.getEntry(var1);
-		if(var3 == null) {
-			throw new ResourcePackFileNotFoundException(this.b, var1);
+		ZipEntry var3 = var2.getEntry(par1Str);
+
+		if (var3 == null) {
+			throw new ResourcePackFileNotFoundException(this.resourcePackFile, par1Str);
 		} else {
 			return var2.getInputStream(var3);
 		}
 	}
 
-	public boolean hasResourceName(String var1) {
+	public boolean hasResourceName(String par1Str) {
 		try {
-			return this.getResourcePackZipFile().getEntry(var1) != null;
+			return this.getResourcePackZipFile().getEntry(par1Str) != null;
 		} catch (IOException var3) {
 			return false;
 		}
@@ -51,6 +52,7 @@
 
 	public Set getResourceDomains() {
 		ZipFile var1;
+
 		try {
 			var1 = this.getResourcePackZipFile();
 		} catch (IOException var8) {
@@ -60,14 +62,17 @@
 		Enumeration var2 = var1.entries();
 		HashSet var3 = Sets.newHashSet();
 
-		while(var2.hasMoreElements()) {
+		while (var2.hasMoreElements()) {
 			ZipEntry var4 = (ZipEntry)var2.nextElement();
 			String var5 = var4.getName();
-			if(var5.startsWith("assets/")) {
-				ArrayList var6 = Lists.newArrayList(c.split(var5));
-				if(var6.size() > 1) {
+
+			if (var5.startsWith("assets/")) {
+				ArrayList var6 = Lists.newArrayList(entryNameSplitter.split(var5));
+
+				if (var6.size() > 1) {
 					String var7 = (String)var6.get(1);
-					if(!var7.equals(var7.toLowerCase())) {
+
+					if (!var7.equals(var7.toLowerCase())) {
 						this.logNameNotLowercase(var7);
 					} else {
 						var3.add(var7);
@@ -81,14 +86,21 @@
 
 	protected void finalize() {
 		this.close();
-		super.finalize();
+
+		try {
+			super.finalize();
+		} catch (Throwable t) {
+		}
 	}
 
 	public void close() {
-		if(this.d != null) {
-			this.d.close();
-			this.d = null;
-		}
+		if (this.resourcePackZipFile != null) {
+			try {
+				this.resourcePackZipFile.close();
+			} catch (Exception ex) {
+			}
 
+			this.resourcePackZipFile = null;
+		}
 	}
 }
