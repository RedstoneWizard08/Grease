--- net/minecraft/src/FolderResourcePack.java
+++ net/minecraft/src/FolderResourcePack.java
@@ -11,29 +11,31 @@
 import org.apache.commons.io.filefilter.DirectoryFileFilter;
 
 public class FolderResourcePack extends AbstractResourcePack {
-	public FolderResourcePack(File var1) {
-		super(var1);
-	}
-
-	protected InputStream getInputStreamByName(String var1) throws IOException {
-		return new BufferedInputStream(new FileInputStream(new File(this.b, var1)));
-	}
-
-	protected boolean hasResourceName(String var1) {
-		return (new File(this.b, var1)).isFile();
+	public FolderResourcePack(File par1File) {
+		super(par1File);
+	}
+
+	protected InputStream getInputStreamByName(String par1Str) throws IOException {
+		return new BufferedInputStream(new FileInputStream(new File(this.resourcePackFile, par1Str)));
+	}
+
+	protected boolean hasResourceName(String par1Str) {
+		return (new File(this.resourcePackFile, par1Str)).isFile();
 	}
 
 	public Set getResourceDomains() {
 		HashSet var1 = Sets.newHashSet();
-		File var2 = new File(this.b, "assets/");
-		if(var2.isDirectory()) {
-			File[] var3 = var2.listFiles(DirectoryFileFilter.DIRECTORY);
+		File var2 = new File(this.resourcePackFile, "assets/");
+
+		if (var2.isDirectory()) {
+			File[] var3 = var2.listFiles((java.io.FileFilter)DirectoryFileFilter.DIRECTORY);
 			int var4 = var3.length;
 
-			for(int var5 = 0; var5 < var4; ++var5) {
+			for (int var5 = 0; var5 < var4; ++var5) {
 				File var6 = var3[var5];
 				String var7 = getRelativeName(var2, var6);
-				if(!var7.equals(var7.toLowerCase())) {
+
+				if (!var7.equals(var7.toLowerCase())) {
 					this.logNameNotLowercase(var7);
 				} else {
 					var1.add(var7.substring(0, var7.length() - 1));
