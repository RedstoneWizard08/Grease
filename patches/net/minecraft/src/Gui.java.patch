--- net/minecraft/src/Gui.java
+++ net/minecraft/src/Gui.java
@@ -8,68 +8,75 @@
 	public static final ResourceLocation icons = new ResourceLocation("textures/gui/icons.png");
 	protected float zLevel;
 
-	protected void drawHorizontalLine(int var1, int var2, int var3, int var4) {
-		if(var2 < var1) {
-			int var5 = var1;
-			var1 = var2;
-			var2 = var5;
-		}
-
-		drawRect(var1, var3, var2 + 1, var3 + 1, var4);
-	}
-
-	protected void drawVerticalLine(int var1, int var2, int var3, int var4) {
-		if(var3 < var2) {
-			int var5 = var2;
-			var2 = var3;
-			var3 = var5;
-		}
-
-		drawRect(var1, var2 + 1, var1 + 1, var3, var4);
-	}
-
-	public static void drawRect(int var0, int var1, int var2, int var3, int var4) {
+	protected void drawHorizontalLine(int par1, int par2, int par3, int par4) {
+		if (par2 < par1) {
+			int var5 = par1;
+			par1 = par2;
+			par2 = var5;
+		}
+
+		drawRect(par1, par3, par2 + 1, par3 + 1, par4);
+	}
+
+	protected void drawVerticalLine(int par1, int par2, int par3, int par4) {
+		if (par3 < par2) {
+			int var5 = par2;
+			par2 = par3;
+			par3 = var5;
+		}
+
+		drawRect(par1, par2 + 1, par1 + 1, par3, par4);
+	}
+
+	/**
+	 * Draws a solid color rectangle with the specified coordinates and color. Args: x1, y1, x2, y2, color
+	 */
+	public static void drawRect(int par0, int par1, int par2, int par3, int par4) {
 		int var5;
-		if(var0 < var2) {
-			var5 = var0;
-			var0 = var2;
-			var2 = var5;
-		}
-
-		if(var1 < var3) {
-			var5 = var1;
-			var1 = var3;
-			var3 = var5;
-		}
-
-		float var10 = (float)(var4 >> 24 & 255) / 255.0F;
-		float var6 = (float)(var4 >> 16 & 255) / 255.0F;
-		float var7 = (float)(var4 >> 8 & 255) / 255.0F;
-		float var8 = (float)(var4 & 255) / 255.0F;
+
+		if (par0 < par2) {
+			var5 = par0;
+			par0 = par2;
+			par2 = var5;
+		}
+
+		if (par1 < par3) {
+			var5 = par1;
+			par1 = par3;
+			par3 = var5;
+		}
+
+		float var10 = (float)(par4 >> 24 & 255) / 255.0F;
+		float var6 = (float)(par4 >> 16 & 255) / 255.0F;
+		float var7 = (float)(par4 >> 8 & 255) / 255.0F;
+		float var8 = (float)(par4 & 255) / 255.0F;
 		Tessellator var9 = Tessellator.instance;
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glDisable(GL11.GL_TEXTURE_2D);
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 		GL11.glColor4f(var6, var7, var8, var10);
 		var9.startDrawingQuads();
-		var9.addVertex((double)var0, (double)var3, 0.0D);
-		var9.addVertex((double)var2, (double)var3, 0.0D);
-		var9.addVertex((double)var2, (double)var1, 0.0D);
-		var9.addVertex((double)var0, (double)var1, 0.0D);
+		var9.addVertex((double)par0, (double)par3, 0.0D);
+		var9.addVertex((double)par2, (double)par3, 0.0D);
+		var9.addVertex((double)par2, (double)par1, 0.0D);
+		var9.addVertex((double)par0, (double)par1, 0.0D);
 		var9.draw();
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
 		GL11.glDisable(GL11.GL_BLEND);
 	}
 
-	protected void drawGradientRect(int var1, int var2, int var3, int var4, int var5, int var6) {
-		float var7 = (float)(var5 >> 24 & 255) / 255.0F;
-		float var8 = (float)(var5 >> 16 & 255) / 255.0F;
-		float var9 = (float)(var5 >> 8 & 255) / 255.0F;
-		float var10 = (float)(var5 & 255) / 255.0F;
-		float var11 = (float)(var6 >> 24 & 255) / 255.0F;
-		float var12 = (float)(var6 >> 16 & 255) / 255.0F;
-		float var13 = (float)(var6 >> 8 & 255) / 255.0F;
-		float var14 = (float)(var6 & 255) / 255.0F;
+	/**
+	 * Draws a rectangle with a vertical gradient between the specified colors.
+	 */
+	protected void drawGradientRect(int par1, int par2, int par3, int par4, int par5, int par6) {
+		float var7 = (float)(par5 >> 24 & 255) / 255.0F;
+		float var8 = (float)(par5 >> 16 & 255) / 255.0F;
+		float var9 = (float)(par5 >> 8 & 255) / 255.0F;
+		float var10 = (float)(par5 & 255) / 255.0F;
+		float var11 = (float)(par6 >> 24 & 255) / 255.0F;
+		float var12 = (float)(par6 >> 16 & 255) / 255.0F;
+		float var13 = (float)(par6 >> 8 & 255) / 255.0F;
+		float var14 = (float)(par6 & 255) / 255.0F;
 		GL11.glDisable(GL11.GL_TEXTURE_2D);
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glDisable(GL11.GL_ALPHA_TEST);
@@ -78,11 +85,11 @@
 		Tessellator var15 = Tessellator.instance;
 		var15.startDrawingQuads();
 		var15.setColorRGBA_F(var8, var9, var10, var7);
-		var15.addVertex((double)var3, (double)var2, (double)this.zLevel);
-		var15.addVertex((double)var1, (double)var2, (double)this.zLevel);
+		var15.addVertex((double)par3, (double)par2, (double)this.zLevel);
+		var15.addVertex((double)par1, (double)par2, (double)this.zLevel);
 		var15.setColorRGBA_F(var12, var13, var14, var11);
-		var15.addVertex((double)var1, (double)var4, (double)this.zLevel);
-		var15.addVertex((double)var3, (double)var4, (double)this.zLevel);
+		var15.addVertex((double)par1, (double)par4, (double)this.zLevel);
+		var15.addVertex((double)par3, (double)par4, (double)this.zLevel);
 		var15.draw();
 		GL11.glShadeModel(GL11.GL_FLAT);
 		GL11.glDisable(GL11.GL_BLEND);
@@ -90,33 +97,42 @@
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
 	}
 
-	public void drawCenteredString(FontRenderer var1, String var2, int var3, int var4, int var5) {
-		var1.drawStringWithShadow(var2, var3 - var1.getStringWidth(var2) / 2, var4, var5);
-	}
-
-	public void drawString(FontRenderer var1, String var2, int var3, int var4, int var5) {
-		var1.drawStringWithShadow(var2, var3, var4, var5);
-	}
-
-	public void drawTexturedModalRect(int var1, int var2, int var3, int var4, int var5, int var6) {
+	/**
+	 * Renders the specified text to the screen, center-aligned.
+	 */
+	public void drawCenteredString(FontRenderer par1FontRenderer, String par2Str, int par3, int par4, int par5) {
+		par1FontRenderer.drawStringWithShadow(par2Str, par3 - par1FontRenderer.getStringWidth(par2Str) / 2, par4, par5);
+	}
+
+	/**
+	 * Renders the specified text to the screen.
+	 */
+	public void drawString(FontRenderer par1FontRenderer, String par2Str, int par3, int par4, int par5) {
+		par1FontRenderer.drawStringWithShadow(par2Str, par3, par4, par5);
+	}
+
+	/**
+	 * Draws a textured rectangle at the stored z-value. Args: x, y, u, v, width, height
+	 */
+	public void drawTexturedModalRect(int par1, int par2, int par3, int par4, int par5, int par6) {
 		float var7 = 0.00390625F;
 		float var8 = 0.00390625F;
 		Tessellator var9 = Tessellator.instance;
 		var9.startDrawingQuads();
-		var9.addVertexWithUV((double)(var1 + 0), (double)(var2 + var6), (double)this.zLevel, (double)((float)(var3 + 0) * var7), (double)((float)(var4 + var6) * var8));
-		var9.addVertexWithUV((double)(var1 + var5), (double)(var2 + var6), (double)this.zLevel, (double)((float)(var3 + var5) * var7), (double)((float)(var4 + var6) * var8));
-		var9.addVertexWithUV((double)(var1 + var5), (double)(var2 + 0), (double)this.zLevel, (double)((float)(var3 + var5) * var7), (double)((float)(var4 + 0) * var8));
-		var9.addVertexWithUV((double)(var1 + 0), (double)(var2 + 0), (double)this.zLevel, (double)((float)(var3 + 0) * var7), (double)((float)(var4 + 0) * var8));
+		var9.addVertexWithUV((double)(par1 + 0), (double)(par2 + par6), (double)this.zLevel, (double)((float)(par3 + 0) * var7), (double)((float)(par4 + par6) * var8));
+		var9.addVertexWithUV((double)(par1 + par5), (double)(par2 + par6), (double)this.zLevel, (double)((float)(par3 + par5) * var7), (double)((float)(par4 + par6) * var8));
+		var9.addVertexWithUV((double)(par1 + par5), (double)(par2 + 0), (double)this.zLevel, (double)((float)(par3 + par5) * var7), (double)((float)(par4 + 0) * var8));
+		var9.addVertexWithUV((double)(par1 + 0), (double)(par2 + 0), (double)this.zLevel, (double)((float)(par3 + 0) * var7), (double)((float)(par4 + 0) * var8));
 		var9.draw();
 	}
 
-	public void drawTexturedModelRectFromIcon(int var1, int var2, Icon var3, int var4, int var5) {
+	public void drawTexturedModelRectFromIcon(int par1, int par2, Icon par3Icon, int par4, int par5) {
 		Tessellator var6 = Tessellator.instance;
 		var6.startDrawingQuads();
-		var6.addVertexWithUV((double)(var1 + 0), (double)(var2 + var5), (double)this.zLevel, (double)var3.getMinU(), (double)var3.getMaxV());
-		var6.addVertexWithUV((double)(var1 + var4), (double)(var2 + var5), (double)this.zLevel, (double)var3.getMaxU(), (double)var3.getMaxV());
-		var6.addVertexWithUV((double)(var1 + var4), (double)(var2 + 0), (double)this.zLevel, (double)var3.getMaxU(), (double)var3.getMinV());
-		var6.addVertexWithUV((double)(var1 + 0), (double)(var2 + 0), (double)this.zLevel, (double)var3.getMinU(), (double)var3.getMinV());
+		var6.addVertexWithUV((double)(par1 + 0), (double)(par2 + par5), (double)this.zLevel, (double)par3Icon.getMinU(), (double)par3Icon.getMaxV());
+		var6.addVertexWithUV((double)(par1 + par4), (double)(par2 + par5), (double)this.zLevel, (double)par3Icon.getMaxU(), (double)par3Icon.getMaxV());
+		var6.addVertexWithUV((double)(par1 + par4), (double)(par2 + 0), (double)this.zLevel, (double)par3Icon.getMaxU(), (double)par3Icon.getMinV());
+		var6.addVertexWithUV((double)(par1 + 0), (double)(par2 + 0), (double)this.zLevel, (double)par3Icon.getMinU(), (double)par3Icon.getMinV());
 		var6.draw();
 	}
 }
