--- net/minecraft/src/GuiCommandBlock.java
+++ net/minecraft/src/GuiCommandBlock.java
@@ -5,40 +5,56 @@
 import org.lwjgl.input.Keyboard;
 
 public class GuiCommandBlock extends GuiScreen {
+
+	/** Text field containing the command block's command. */
 	private GuiTextField commandTextField;
+
+	/** Command block being edited. */
 	private final TileEntityCommandBlock commandBlock;
 	private GuiButton doneBtn;
 	private GuiButton cancelBtn;
 
-	public GuiCommandBlock(TileEntityCommandBlock var1) {
-		this.commandBlock = var1;
+	public GuiCommandBlock(TileEntityCommandBlock par1TileEntityCommandBlock) {
+		this.commandBlock = par1TileEntityCommandBlock;
 	}
 
+	/**
+	 * Called from the main game loop to update the screen.
+	 */
 	public void updateScreen() {
 		this.commandTextField.updateCursorCounter();
 	}
 
+	/**
+	 * Adds the buttons (and other controls) to the screen in question.
+	 */
 	public void initGui() {
 		Keyboard.enableRepeatEvents(true);
-		this.i.clear();
-		this.i.add(this.doneBtn = new GuiButton(0, this.width / 2 - 100, this.height / 4 + 96 + 12, I18n.getString("gui.done")));
-		this.i.add(this.cancelBtn = new GuiButton(1, this.width / 2 - 100, this.height / 4 + 120 + 12, I18n.getString("gui.cancel")));
+		this.buttonList.clear();
+		this.buttonList.add(this.doneBtn = new GuiButton(0, this.width / 2 - 100, this.height / 4 + 96 + 12, I18n.getString("gui.done")));
+		this.buttonList.add(this.cancelBtn = new GuiButton(1, this.width / 2 - 100, this.height / 4 + 120 + 12, I18n.getString("gui.cancel")));
 		this.commandTextField = new GuiTextField(this.fontRenderer, this.width / 2 - 150, 60, 300, 20);
-		this.commandTextField.setMaxStringLength(Short.MAX_VALUE);
+		this.commandTextField.setMaxStringLength(32767);
 		this.commandTextField.setFocused(true);
 		this.commandTextField.setText(this.commandBlock.getCommand());
 		this.doneBtn.enabled = this.commandTextField.getText().trim().length() > 0;
 	}
 
+	/**
+	 * Called when the screen is unloaded. Used to disable keyboard repeat events
+	 */
 	public void onGuiClosed() {
 		Keyboard.enableRepeatEvents(false);
 	}
 
-	protected void actionPerformed(GuiButton var1) {
-		if(var1.enabled) {
-			if(var1.id == 1) {
+	/**
+	 * Fired when a control is clicked. This is the equivalent of ActionListener.actionPerformed(ActionEvent e).
+	 */
+	protected void actionPerformed(GuiButton par1GuiButton) {
+		if (par1GuiButton.enabled) {
+			if (par1GuiButton.id == 1) {
 				this.mc.displayGuiScreen((GuiScreen)null);
-			} else if(var1.id == 0) {
+			} else if (par1GuiButton.id == 0) {
 				String var2 = "MC|AdvCdm";
 				ByteArrayOutputStream var3 = new ByteArrayOutputStream();
 				DataOutputStream var4 = new DataOutputStream(var3);
@@ -55,29 +71,37 @@
 
 				this.mc.displayGuiScreen((GuiScreen)null);
 			}
-
 		}
 	}
 
-	protected void keyTyped(char var1, int var2) {
-		this.commandTextField.textboxKeyTyped(var1, var2);
+	/**
+	 * Fired when a key is typed. This is the equivalent of KeyListener.keyTyped(KeyEvent e).
+	 */
+	protected void keyTyped(char par1, int par2) {
+		this.commandTextField.textboxKeyTyped(par1, par2);
 		this.doneBtn.enabled = this.commandTextField.getText().trim().length() > 0;
-		if(var2 != 28 && var2 != 156) {
-			if(var2 == 1) {
+
+		if (par2 != 28 && par2 != 156) {
+			if (par2 == 1) {
 				this.actionPerformed(this.cancelBtn);
 			}
 		} else {
 			this.actionPerformed(this.doneBtn);
 		}
-
-	}
-
-	protected void mouseClicked(int var1, int var2, int var3) {
-		super.mouseClicked(var1, var2, var3);
-		this.commandTextField.mouseClicked(var1, var2, var3);
-	}
-
-	public void drawScreen(int var1, int var2, float var3) {
+	}
+
+	/**
+	 * Called when the mouse is clicked.
+	 */
+	protected void mouseClicked(int par1, int par2, int par3) {
+		super.mouseClicked(par1, par2, par3);
+		this.commandTextField.mouseClicked(par1, par2, par3);
+	}
+
+	/**
+	 * Draws the screen and all the components in it.
+	 */
+	public void drawScreen(int par1, int par2, float par3) {
 		this.drawDefaultBackground();
 		this.drawCenteredString(this.fontRenderer, I18n.getString("advMode.setCommand"), this.width / 2, 20, 16777215);
 		this.drawString(this.fontRenderer, I18n.getString("advMode.command"), this.width / 2 - 150, 47, 10526880);
@@ -85,6 +109,6 @@
 		this.drawString(this.fontRenderer, I18n.getString("advMode.randomPlayer"), this.width / 2 - 150, 108, 10526880);
 		this.drawString(this.fontRenderer, I18n.getString("advMode.allPlayers"), this.width / 2 - 150, 119, 10526880);
 		this.commandTextField.drawTextBox();
-		super.drawScreen(var1, var2, var3);
+		super.drawScreen(par1, par2, par3);
 	}
 }
