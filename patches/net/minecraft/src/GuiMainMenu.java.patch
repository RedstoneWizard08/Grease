--- net/minecraft/src/GuiMainMenu.java
+++ net/minecraft/src/GuiMainMenu.java
@@ -13,22 +13,36 @@
 import org.lwjgl.util.glu.Project;
 
 public class GuiMainMenu extends GuiScreen {
-	private static final Random b = new Random();
+
+	/** The RNG used by the Main Menu Screen. */
+	private static final Random rand = new Random();
+
+	/** Counts the number of screen updates. */
 	private float updateCounter;
-	private String d = "missingno";
+
+	/** The splash message. */
+	private String splashText = "missingno";
 	private GuiButton buttonResetDemo;
+
+	/** Timer used to rotate the panorama, increases every tick. */
 	private int panoramaTimer;
+
+	/**
+	 * Texture allocated for the current viewport of the main menu's panorama background.
+	 */
 	private DynamicTexture viewportTexture;
 	private boolean field_96141_q = true;
 	private static boolean field_96140_r;
 	private static boolean field_96139_s;
-	private final Object u = new Object();
-	private String v;
-	private String w;
+	private final Object field_104025_t = new Object();
+	private String field_92025_p;
+	private String field_104024_v;
 	private static final ResourceLocation splashTexts = new ResourceLocation("texts/splashes.txt");
 	private static final ResourceLocation minecraftTitleTextures = new ResourceLocation("textures/gui/title/minecraft.png");
-	private static final ResourceLocation[] titlePanoramaPaths = new ResourceLocation[]{new ResourceLocation("textures/gui/title/background/panorama_0.png"), new ResourceLocation("textures/gui/title/background/panorama_1.png"), new ResourceLocation("textures/gui/title/background/panorama_2.png"), new ResourceLocation("textures/gui/title/background/panorama_3.png"), new ResourceLocation("textures/gui/title/background/panorama_4.png"), new ResourceLocation("textures/gui/title/background/panorama_5.png")};
-	public static final String a = "Please click " + EnumChatFormatting.UNDERLINE + "here" + EnumChatFormatting.RESET + " for more information.";
+
+	/** An array of all the paths to the panorama pictures. */
+	private static final ResourceLocation[] titlePanoramaPaths = new ResourceLocation[] {new ResourceLocation("textures/gui/title/background/panorama_0.png"), new ResourceLocation("textures/gui/title/background/panorama_1.png"), new ResourceLocation("textures/gui/title/background/panorama_2.png"), new ResourceLocation("textures/gui/title/background/panorama_3.png"), new ResourceLocation("textures/gui/title/background/panorama_4.png"), new ResourceLocation("textures/gui/title/background/panorama_5.png")};
+	public static final String field_96138_a = "Please click " + EnumChatFormatting.UNDERLINE + "here" + EnumChatFormatting.RESET + " for more information.";
 	private int field_92024_r;
 	private int field_92023_s;
 	private int field_92022_t;
@@ -40,182 +54,202 @@
 
 	public GuiMainMenu() {
 		BufferedReader var1 = null;
-
 		String var3;
+
 		try {
 			ArrayList var2 = new ArrayList();
 			var1 = new BufferedReader(new InputStreamReader(Minecraft.getMinecraft().getResourceManager().getResource(splashTexts).getInputStream(), Charsets.UTF_8));
 
-			while(true) {
-				var3 = var1.readLine();
-				if(var3 == null) {
-					do {
-						this.d = (String)var2.get(b.nextInt(var2.size()));
-					} while(this.d.hashCode() == 125780783);
-					break;
-				}
-
+			while ((var3 = var1.readLine()) != null) {
 				var3 = var3.trim();
-				if(!var3.isEmpty()) {
+
+				if (!var3.isEmpty()) {
 					var2.add(var3);
 				}
 			}
+
+			do {
+				this.splashText = (String)var2.get(rand.nextInt(var2.size()));
+			} while (this.splashText.hashCode() == 125780783);
 		} catch (IOException var12) {
+			;
 		} finally {
-			if(var1 != null) {
+			if (var1 != null) {
 				try {
 					var1.close();
 				} catch (IOException var11) {
+					;
 				}
 			}
-
 		}
 
-		this.updateCounter = b.nextFloat();
-		this.v = "";
+		this.updateCounter = rand.nextFloat();
+		this.field_92025_p = "";
 		String var14 = System.getProperty("os_architecture");
 		var3 = System.getProperty("java_version");
-		if("ppc".equalsIgnoreCase(var14)) {
-			this.v = "" + EnumChatFormatting.BOLD + "Notice!" + EnumChatFormatting.RESET + " PowerPC compatibility will be dropped in Minecraft 1.6";
-			this.w = "http://tinyurl.com/javappc";
-		} else if(var3 != null && var3.startsWith("1.5")) {
-			this.v = "" + EnumChatFormatting.BOLD + "Notice!" + EnumChatFormatting.RESET + " Java 1.5 compatibility will be dropped in Minecraft 1.6";
-			this.w = "http://tinyurl.com/javappc";
+
+		if ("ppc".equalsIgnoreCase(var14)) {
+			this.field_92025_p = "" + EnumChatFormatting.BOLD + "Notice!" + EnumChatFormatting.RESET + " PowerPC compatibility will be dropped in Minecraft 1.6";
+			this.field_104024_v = "http://tinyurl.com/javappc";
+		} else if (var3 != null && var3.startsWith("1.5")) {
+			this.field_92025_p = "" + EnumChatFormatting.BOLD + "Notice!" + EnumChatFormatting.RESET + " Java 1.5 compatibility will be dropped in Minecraft 1.6";
+			this.field_104024_v = "http://tinyurl.com/javappc";
 		}
-
 	}
 
+	/**
+	 * Called from the main game loop to update the screen.
+	 */
 	public void updateScreen() {
 		++this.panoramaTimer;
 	}
 
+	/**
+	 * Returns true if this GUI should pause the game when it is displayed in single-player
+	 */
 	public boolean doesGuiPauseGame() {
 		return false;
 	}
 
-	protected void keyTyped(char var1, int var2) {
-	}
+	/**
+	 * Fired when a key is typed. This is the equivalent of KeyListener.keyTyped(KeyEvent e).
+	 */
+	protected void keyTyped(char par1, int par2) {}
 
+	/**
+	 * Adds the buttons (and other controls) to the screen in question.
+	 */
 	public void initGui() {
 		this.viewportTexture = new DynamicTexture(256, 256);
 		this.field_110351_G = this.mc.getTextureManager().getDynamicTextureLocation("background", this.viewportTexture);
 		Calendar var1 = Calendar.getInstance();
 		var1.setTime(new Date());
-		if(var1.get(2) + 1 == 11 && var1.get(5) == 9) {
-			this.d = "Happy birthday, ez!";
-		} else if(var1.get(2) + 1 == 6 && var1.get(5) == 1) {
-			this.d = "Happy birthday, Notch!";
-		} else if(var1.get(2) + 1 == 12 && var1.get(5) == 24) {
-			this.d = "Merry X-mas!";
-		} else if(var1.get(2) + 1 == 1 && var1.get(5) == 1) {
-			this.d = "Happy new year!";
-		} else if(var1.get(2) + 1 == 10 && var1.get(5) == 31) {
-			this.d = "OOoooOOOoooo! Spooky!";
+
+		if (var1.get(2) + 1 == 11 && var1.get(5) == 9) {
+			this.splashText = "Happy birthday, ez!";
+		} else if (var1.get(2) + 1 == 6 && var1.get(5) == 1) {
+			this.splashText = "Happy birthday, Notch!";
+		} else if (var1.get(2) + 1 == 12 && var1.get(5) == 24) {
+			this.splashText = "Merry X-mas!";
+		} else if (var1.get(2) + 1 == 1 && var1.get(5) == 1) {
+			this.splashText = "Happy new year!";
+		} else if (var1.get(2) + 1 == 10 && var1.get(5) == 31) {
+			this.splashText = "OOoooOOOoooo! Spooky!";
 		}
 
 		boolean var2 = true;
 		int var3 = this.height / 4 + 48;
-		if(this.mc.isDemo()) {
+
+		if (this.mc.isDemo()) {
 			this.addDemoButtons(var3, 24);
 		} else {
 			this.addSingleplayerMultiplayerButtons(var3, 24);
 		}
 
 		this.func_130020_g();
-		this.i.add(new GuiButton(0, this.width / 2 - 100, var3 + 72 + 12, 98, 20, I18n.getString("menu.options")));
-		this.i.add(new GuiButton(4, this.width / 2 + 2, var3 + 72 + 12, 98, 20, I18n.getString("menu.quit")));
-		this.i.add(new GuiButtonLanguage(5, this.width / 2 - 124, var3 + 72 + 12));
-		Object var4 = this.u;
-		synchronized(var4) {
-			this.field_92023_s = this.fontRenderer.getStringWidth(this.v);
-			this.field_92024_r = this.fontRenderer.getStringWidth(a);
+		this.buttonList.add(new GuiButton(0, this.width / 2 - 100, var3 + 72 + 12, 98, 20, I18n.getString("menu.options")));
+		this.buttonList.add(new GuiButton(4, this.width / 2 + 2, var3 + 72 + 12, 98, 20, I18n.getString("menu.quit")));
+		this.buttonList.add(new GuiButtonLanguage(5, this.width / 2 - 124, var3 + 72 + 12));
+		Object var4 = this.field_104025_t;
+
+		synchronized (this.field_104025_t) {
+			this.field_92023_s = this.fontRenderer.getStringWidth(this.field_92025_p);
+			this.field_92024_r = this.fontRenderer.getStringWidth(field_96138_a);
 			int var5 = Math.max(this.field_92023_s, this.field_92024_r);
 			this.field_92022_t = (this.width - var5) / 2;
-			this.field_92021_u = ((GuiButton)this.i.get(0)).yPosition - 24;
+			this.field_92021_u = ((GuiButton)this.buttonList.get(0)).yPosition - 24;
 			this.field_92020_v = this.field_92022_t + var5;
 			this.field_92019_w = this.field_92021_u + 24;
 		}
 	}
 
 	private void func_130020_g() {
-		if(this.field_96141_q) {
-			if(!field_96140_r) {
+		if (this.field_96141_q) {
+			if (!field_96140_r) {
 				field_96140_r = true;
 				(new RunnableTitleScreen(this)).start();
-			} else if(field_96139_s) {
+			} else if (field_96139_s) {
 				this.func_130022_h();
 			}
 		}
-
 	}
 
 	private void func_130022_h() {
 		this.minecraftRealmsButton.drawButton = true;
 	}
 
-	private void addSingleplayerMultiplayerButtons(int var1, int var2) {
-		this.i.add(new GuiButton(1, this.width / 2 - 100, var1, I18n.getString("menu.singleplayer")));
-		this.i.add(new GuiButton(2, this.width / 2 - 100, var1 + var2 * 1, I18n.getString("menu.multiplayer")));
-		this.i.add(this.minecraftRealmsButton = new GuiButton(14, this.width / 2 - 100, var1 + var2 * 2, I18n.getString("menu.online")));
+	/**
+	 * Adds Singleplayer and Multiplayer buttons on Main Menu for players who have bought the game.
+	 */
+	private void addSingleplayerMultiplayerButtons(int par1, int par2) {
+		this.buttonList.add(new GuiButton(1, this.width / 2 - 100, par1, I18n.getString("menu.singleplayer")));
+		this.buttonList.add(new GuiButton(2, this.width / 2 - 100, par1 + par2 * 1, I18n.getString("menu.multiplayer")));
+		this.buttonList.add(this.minecraftRealmsButton = new GuiButton(14, this.width / 2 - 100, par1 + par2 * 2, I18n.getString("menu.online")));
 		this.minecraftRealmsButton.drawButton = false;
 	}
 
-	private void addDemoButtons(int var1, int var2) {
-		this.i.add(new GuiButton(11, this.width / 2 - 100, var1, I18n.getString("menu.playdemo")));
-		this.i.add(this.buttonResetDemo = new GuiButton(12, this.width / 2 - 100, var1 + var2 * 1, I18n.getString("menu.resetdemo")));
+	/**
+	 * Adds Demo buttons on Main Menu for players who are playing Demo.
+	 */
+	private void addDemoButtons(int par1, int par2) {
+		this.buttonList.add(new GuiButton(11, this.width / 2 - 100, par1, I18n.getString("menu.playdemo")));
+		this.buttonList.add(this.buttonResetDemo = new GuiButton(12, this.width / 2 - 100, par1 + par2 * 1, I18n.getString("menu.resetdemo")));
 		ISaveFormat var3 = this.mc.getSaveLoader();
 		WorldInfo var4 = var3.getWorldInfo("Demo_World");
-		if(var4 == null) {
+
+		if (var4 == null) {
 			this.buttonResetDemo.enabled = false;
 		}
-
 	}
 
-	protected void actionPerformed(GuiButton var1) {
-		if(var1.id == 0) {
+	/**
+	 * Fired when a control is clicked. This is the equivalent of ActionListener.actionPerformed(ActionEvent e).
+	 */
+	protected void actionPerformed(GuiButton par1GuiButton) {
+		if (par1GuiButton.id == 0) {
 			this.mc.displayGuiScreen(new GuiOptions(this, this.mc.gameSettings));
 		}
 
-		if(var1.id == 5) {
+		if (par1GuiButton.id == 5) {
 			this.mc.displayGuiScreen(new GuiLanguage(this, this.mc.gameSettings, this.mc.getLanguageManager()));
 		}
 
-		if(var1.id == 1) {
+		if (par1GuiButton.id == 1) {
 			this.mc.displayGuiScreen(new GuiSelectWorld(this));
 		}
 
-		if(var1.id == 2) {
+		if (par1GuiButton.id == 2) {
 			this.mc.displayGuiScreen(new GuiMultiplayer(this));
 		}
 
-		if(var1.id == 14 && this.minecraftRealmsButton.drawButton) {
+		if (par1GuiButton.id == 14 && this.minecraftRealmsButton.drawButton) {
 			this.func_140005_i();
 		}
 
-		if(var1.id == 4) {
+		if (par1GuiButton.id == 4) {
 			this.mc.shutdown();
 		}
 
-		if(var1.id == 11) {
+		if (par1GuiButton.id == 11) {
 			this.mc.launchIntegratedServer("Demo_World", "Demo_World", DemoWorldServer.demoWorldSettings);
 		}
 
-		if(var1.id == 12) {
+		if (par1GuiButton.id == 12) {
 			ISaveFormat var2 = this.mc.getSaveLoader();
 			WorldInfo var3 = var2.getWorldInfo("Demo_World");
-			if(var3 != null) {
+
+			if (var3 != null) {
 				GuiYesNo var4 = GuiSelectWorld.getDeleteWorldScreen(this, var3.getWorldName(), 12);
 				this.mc.displayGuiScreen(var4);
 			}
 		}
-
 	}
 
 	private void func_140005_i() {
 		McoClient var1 = new McoClient(this.mc.getSession());
 
 		try {
-			if(var1.func_140054_c().booleanValue()) {
+			if (var1.func_140054_c().booleanValue()) {
 				this.mc.displayGuiScreen(new GuiScreenClientOutdated(this));
 			} else {
 				this.mc.displayGuiScreen(new GuiScreenOnlineServers(this));
@@ -225,21 +259,20 @@
 		} catch (IOException var4) {
 			this.mc.getLogAgent().logSevere(var4.getLocalizedMessage());
 		}
-
 	}
 
-	public void confirmClicked(boolean var1, int var2) {
-		if(var1 && var2 == 12) {
+	public void confirmClicked(boolean par1, int par2) {
+		if (par1 && par2 == 12) {
 			ISaveFormat var6 = this.mc.getSaveLoader();
 			var6.flushCache();
 			var6.deleteWorldDirectory("Demo_World");
 			this.mc.displayGuiScreen(this);
-		} else if(var2 == 13) {
-			if(var1) {
+		} else if (par2 == 13) {
+			if (par1) {
 				try {
 					Class var3 = Class.forName("java.awt.Desktop");
 					Object var4 = var3.getMethod("getDesktop", new Class[0]).invoke((Object)null, new Object[0]);
-					var3.getMethod("browse", new Class[]{URI.class}).invoke(var4, new Object[]{new URI(this.w)});
+					var3.getMethod("browse", new Class[] {URI.class}).invoke(var4, new Object[] {new URI(this.field_104024_v)});
 				} catch (Throwable var5) {
 					var5.printStackTrace();
 				}
@@ -247,10 +280,12 @@
 
 			this.mc.displayGuiScreen(this);
 		}
-
 	}
 
-	private void drawPanorama(int var1, int var2, float var3) {
+	/**
+	 * Draws the main menu panorama
+	 */
+	private void drawPanorama(int par1, int par2, float par3) {
 		Tessellator var4 = Tessellator.instance;
 		GL11.glMatrixMode(GL11.GL_PROJECTION);
 		GL11.glPushMatrix();
@@ -268,34 +303,35 @@
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 		byte var5 = 8;
 
-		for(int var6 = 0; var6 < var5 * var5; ++var6) {
+		for (int var6 = 0; var6 < var5 * var5; ++var6) {
 			GL11.glPushMatrix();
 			float var7 = ((float)(var6 % var5) / (float)var5 - 0.5F) / 64.0F;
 			float var8 = ((float)(var6 / var5) / (float)var5 - 0.5F) / 64.0F;
 			float var9 = 0.0F;
 			GL11.glTranslatef(var7, var8, var9);
-			GL11.glRotatef(MathHelper.sin(((float)this.panoramaTimer + var3) / 400.0F) * 25.0F + 20.0F, 1.0F, 0.0F, 0.0F);
-			GL11.glRotatef(-((float)this.panoramaTimer + var3) * 0.1F, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(MathHelper.sin(((float)this.panoramaTimer + par3) / 400.0F) * 25.0F + 20.0F, 1.0F, 0.0F, 0.0F);
+			GL11.glRotatef(-((float)this.panoramaTimer + par3) * 0.1F, 0.0F, 1.0F, 0.0F);
 
-			for(int var10 = 0; var10 < 6; ++var10) {
+			for (int var10 = 0; var10 < 6; ++var10) {
 				GL11.glPushMatrix();
-				if(var10 == 1) {
+
+				if (var10 == 1) {
 					GL11.glRotatef(90.0F, 0.0F, 1.0F, 0.0F);
 				}
 
-				if(var10 == 2) {
+				if (var10 == 2) {
 					GL11.glRotatef(180.0F, 0.0F, 1.0F, 0.0F);
 				}
 
-				if(var10 == 3) {
+				if (var10 == 3) {
 					GL11.glRotatef(-90.0F, 0.0F, 1.0F, 0.0F);
 				}
 
-				if(var10 == 4) {
+				if (var10 == 4) {
 					GL11.glRotatef(90.0F, 1.0F, 0.0F, 0.0F);
 				}
 
-				if(var10 == 5) {
+				if (var10 == 5) {
 					GL11.glRotatef(-90.0F, 1.0F, 0.0F, 0.0F);
 				}
 
@@ -327,7 +363,10 @@
 		GL11.glEnable(GL11.GL_DEPTH_TEST);
 	}
 
-	private void rotateAndBlurSkybox(float var1) {
+	/**
+	 * Rotate and blurs the skybox view in the main menu
+	 */
+	private void rotateAndBlurSkybox(float par1) {
 		this.mc.getTextureManager().bindTexture(this.field_110351_G);
 		GL11.glCopyTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, 0, 0, 256, 256);
 		GL11.glEnable(GL11.GL_BLEND);
@@ -337,7 +376,7 @@
 		var2.startDrawingQuads();
 		byte var3 = 3;
 
-		for(int var4 = 0; var4 < var3; ++var4) {
+		for (int var4 = 0; var4 < var3; ++var4) {
 			var2.setColorRGBA_F(1.0F, 1.0F, 1.0F, 1.0F / (float)(var4 + 1));
 			int var5 = this.width;
 			int var6 = this.height;
@@ -352,19 +391,22 @@
 		GL11.glColorMask(true, true, true, true);
 	}
 
-	private void renderSkybox(int var1, int var2, float var3) {
+	/**
+	 * Renders the skybox in the main menu
+	 */
+	private void renderSkybox(int par1, int par2, float par3) {
 		GL11.glViewport(0, 0, 256, 256);
-		this.drawPanorama(var1, var2, var3);
+		this.drawPanorama(par1, par2, par3);
 		GL11.glDisable(GL11.GL_TEXTURE_2D);
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
-		this.rotateAndBlurSkybox(var3);
-		this.rotateAndBlurSkybox(var3);
-		this.rotateAndBlurSkybox(var3);
-		this.rotateAndBlurSkybox(var3);
-		this.rotateAndBlurSkybox(var3);
-		this.rotateAndBlurSkybox(var3);
-		this.rotateAndBlurSkybox(var3);
-		this.rotateAndBlurSkybox(var3);
+		this.rotateAndBlurSkybox(par3);
+		this.rotateAndBlurSkybox(par3);
+		this.rotateAndBlurSkybox(par3);
+		this.rotateAndBlurSkybox(par3);
+		this.rotateAndBlurSkybox(par3);
+		this.rotateAndBlurSkybox(par3);
+		this.rotateAndBlurSkybox(par3);
+		this.rotateAndBlurSkybox(par3);
 		GL11.glViewport(0, 0, this.mc.displayWidth, this.mc.displayHeight);
 		Tessellator var4 = Tessellator.instance;
 		var4.startDrawingQuads();
@@ -383,8 +425,11 @@
 		var4.draw();
 	}
 
-	public void drawScreen(int var1, int var2, float var3) {
-		this.renderSkybox(var1, var2, var3);
+	/**
+	 * Draws the screen and all the components in it.
+	 */
+	public void drawScreen(int par1, int par2, float par3) {
+		this.renderSkybox(par1, par2, par3);
 		Tessellator var4 = Tessellator.instance;
 		short var5 = 274;
 		int var6 = this.width / 2 - var5 / 2;
@@ -393,7 +438,8 @@
 		this.drawGradientRect(0, 0, this.width, this.height, 0, Integer.MIN_VALUE);
 		this.mc.getTextureManager().bindTexture(minecraftTitleTextures);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		if((double)this.updateCounter < 1.0E-4D) {
+
+		if ((double)this.updateCounter < 1.0E-4D) {
 			this.drawTexturedModalRect(var6 + 0, var7 + 0, 0, 0, 99, 44);
 			this.drawTexturedModalRect(var6 + 99, var7 + 0, 129, 0, 27, 44);
 			this.drawTexturedModalRect(var6 + 99 + 26, var7 + 0, 126, 0, 3, 44);
@@ -409,58 +455,63 @@
 		GL11.glTranslatef((float)(this.width / 2 + 90), 70.0F, 0.0F);
 		GL11.glRotatef(-20.0F, 0.0F, 0.0F, 1.0F);
 		float var8 = 1.8F - MathHelper.abs(MathHelper.sin((float)(Minecraft.getSystemTime() % 1000L) / 1000.0F * (float)Math.PI * 2.0F) * 0.1F);
-		var8 = var8 * 100.0F / (float)(this.fontRenderer.getStringWidth(this.d) + 32);
+		var8 = var8 * 100.0F / (float)(this.fontRenderer.getStringWidth(this.splashText) + 32);
 		GL11.glScalef(var8, var8, var8);
-		this.drawCenteredString(this.fontRenderer, this.d, 0, -8, 16776960);
+		this.drawCenteredString(this.fontRenderer, this.splashText, 0, -8, 16776960);
 		GL11.glPopMatrix();
 		String var9 = "Minecraft 1.6.4";
-		if(this.mc.isDemo()) {
+
+		if (this.mc.isDemo()) {
 			var9 = var9 + " Demo";
 		}
 
 		this.drawString(this.fontRenderer, var9, 2, this.height - 10, 16777215);
 		String var10 = "Copyright Mojang AB. Do not distribute!";
 		this.drawString(this.fontRenderer, var10, this.width - this.fontRenderer.getStringWidth(var10) - 2, this.height - 10, 16777215);
-		if(this.v != null && this.v.length() > 0) {
+
+		if (this.field_92025_p != null && this.field_92025_p.length() > 0) {
 			drawRect(this.field_92022_t - 2, this.field_92021_u - 2, this.field_92020_v + 2, this.field_92019_w - 1, 1428160512);
-			this.drawString(this.fontRenderer, this.v, this.field_92022_t, this.field_92021_u, 16777215);
-			this.drawString(this.fontRenderer, a, (this.width - this.field_92024_r) / 2, ((GuiButton)this.i.get(0)).yPosition - 12, 16777215);
+			this.drawString(this.fontRenderer, this.field_92025_p, this.field_92022_t, this.field_92021_u, 16777215);
+			this.drawString(this.fontRenderer, field_96138_a, (this.width - this.field_92024_r) / 2, ((GuiButton)this.buttonList.get(0)).yPosition - 12, 16777215);
 		}
 
-		super.drawScreen(var1, var2, var3);
+		super.drawScreen(par1, par2, par3);
 	}
 
-	protected void mouseClicked(int var1, int var2, int var3) {
-		super.mouseClicked(var1, var2, var3);
-		Object var4 = this.u;
-		synchronized(var4) {
-			if(this.v.length() > 0 && var1 >= this.field_92022_t && var1 <= this.field_92020_v && var2 >= this.field_92021_u && var2 <= this.field_92019_w) {
-				GuiConfirmOpenLink var5 = new GuiConfirmOpenLink(this, this.w, 13, true);
+	/**
+	 * Called when the mouse is clicked.
+	 */
+	protected void mouseClicked(int par1, int par2, int par3) {
+		super.mouseClicked(par1, par2, par3);
+		Object var4 = this.field_104025_t;
+
+		synchronized (this.field_104025_t) {
+			if (this.field_92025_p.length() > 0 && par1 >= this.field_92022_t && par1 <= this.field_92020_v && par2 >= this.field_92021_u && par2 <= this.field_92019_w) {
+				GuiConfirmOpenLink var5 = new GuiConfirmOpenLink(this, this.field_104024_v, 13, true);
 				var5.func_92026_h();
 				this.mc.displayGuiScreen(var5);
 			}
-
 		}
 	}
 
-	static Minecraft func_110348_a(GuiMainMenu var0) {
-		return var0.mc;
-	}
-
-	static void func_130021_b(GuiMainMenu var0) {
-		var0.func_130022_h();
-	}
-
-	static boolean func_110349_a(boolean var0) {
-		field_96139_s = var0;
-		return var0;
-	}
-
-	static Minecraft func_130018_c(GuiMainMenu var0) {
-		return var0.mc;
-	}
-
-	static Minecraft func_130019_d(GuiMainMenu var0) {
-		return var0.mc;
+	static Minecraft func_110348_a(GuiMainMenu par0GuiMainMenu) {
+		return par0GuiMainMenu.mc;
+	}
+
+	static void func_130021_b(GuiMainMenu par0GuiMainMenu) {
+		par0GuiMainMenu.func_130022_h();
+	}
+
+	static boolean func_110349_a(boolean par0) {
+		field_96139_s = par0;
+		return par0;
+	}
+
+	static Minecraft func_130018_c(GuiMainMenu par0GuiMainMenu) {
+		return par0GuiMainMenu.mc;
+	}
+
+	static Minecraft func_130019_d(GuiMainMenu par0GuiMainMenu) {
+		return par0GuiMainMenu.mc;
 	}
 }
