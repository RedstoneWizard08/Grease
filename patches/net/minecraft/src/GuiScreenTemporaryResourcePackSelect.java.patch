--- net/minecraft/src/GuiScreenTemporaryResourcePackSelect.java
+++ net/minecraft/src/GuiScreenTemporaryResourcePackSelect.java
@@ -11,33 +11,40 @@
 	private GuiScreenTemporaryResourcePackSelectSelectionList field_110346_c;
 	private GameSettings field_96146_n;
 
-	public GuiScreenTemporaryResourcePackSelect(GuiScreen var1, GameSettings var2) {
-		this.field_110347_a = var1;
-		this.field_96146_n = var2;
+	public GuiScreenTemporaryResourcePackSelect(GuiScreen par1GuiScreen, GameSettings par2GameSettings) {
+		this.field_110347_a = par1GuiScreen;
+		this.field_96146_n = par2GameSettings;
 	}
 
+	/**
+	 * Adds the buttons (and other controls) to the screen in question.
+	 */
 	public void initGui() {
-		this.i.add(new GuiSmallButton(5, this.width / 2 - 154, this.height - 48, I18n.getString("resourcePack.openFolder")));
-		this.i.add(new GuiSmallButton(6, this.width / 2 + 4, this.height - 48, I18n.getString("gui.done")));
+		this.buttonList.add(new GuiSmallButton(5, this.width / 2 - 154, this.height - 48, I18n.getString("resourcePack.openFolder")));
+		this.buttonList.add(new GuiSmallButton(6, this.width / 2 + 4, this.height - 48, I18n.getString("gui.done")));
 		this.field_110346_c = new GuiScreenTemporaryResourcePackSelectSelectionList(this, this.mc.getResourcePackRepository());
 		this.field_110346_c.registerScrollButtons(7, 8);
 	}
 
-	protected void actionPerformed(GuiButton var1) {
-		if(var1.enabled) {
-			if(var1.id == 5) {
+	/**
+	 * Fired when a control is clicked. This is the equivalent of ActionListener.actionPerformed(ActionEvent e).
+	 */
+	protected void actionPerformed(GuiButton par1GuiButton) {
+		if (par1GuiButton.enabled) {
+			if (par1GuiButton.id == 5) {
 				File var2 = GuiScreenTemporaryResourcePackSelectSelectionList.func_110510_a(this.field_110346_c).getDirResourcepacks();
 				String var3 = var2.getAbsolutePath();
-				if(Util.getOSType() == EnumOS.MACOS) {
+
+				if (Util.getOSType() == EnumOS.MACOS) {
 					try {
 						this.mc.getLogAgent().logInfo(var3);
-						Runtime.getRuntime().exec(new String[]{"/usr/bin/open", var3});
+						Runtime.getRuntime().exec(new String[] {"/usr/bin/open", var3});
 						return;
 					} catch (IOException var9) {
 						var9.printStackTrace();
 					}
-				} else if(Util.getOSType() == EnumOS.WINDOWS) {
-					String var4 = String.format("cmd.exe /C start \"Open file\" \"%s\"", new Object[]{var3});
+				} else if (Util.getOSType() == EnumOS.WINDOWS) {
+					String var4 = String.format("cmd.exe /C start \"Open file\" \"%s\"", new Object[] {var3});
 
 					try {
 						Runtime.getRuntime().exec(var4);
@@ -52,91 +59,104 @@
 				try {
 					Class var5 = Class.forName("java.awt.Desktop");
 					Object var6 = var5.getMethod("getDesktop", new Class[0]).invoke((Object)null, new Object[0]);
-					var5.getMethod("browse", new Class[]{URI.class}).invoke(var6, new Object[]{var2.toURI()});
+					var5.getMethod("browse", new Class[] {URI.class}).invoke(var6, new Object[] {var2.toURI()});
 				} catch (Throwable var7) {
 					var7.printStackTrace();
 					var10 = true;
 				}
 
-				if(var10) {
+				if (var10) {
 					this.mc.getLogAgent().logInfo("Opening via system class!");
 					Sys.openURL("file://" + var3);
 				}
-			} else if(var1.id == 6) {
+			} else if (par1GuiButton.id == 6) {
 				this.mc.displayGuiScreen(this.field_110347_a);
 			} else {
-				this.field_110346_c.actionPerformed(var1);
+				this.field_110346_c.actionPerformed(par1GuiButton);
 			}
-
 		}
 	}
 
-	protected void mouseClicked(int var1, int var2, int var3) {
-		super.mouseClicked(var1, var2, var3);
-	}
-
-	protected void mouseMovedOrUp(int var1, int var2, int var3) {
-		super.mouseMovedOrUp(var1, var2, var3);
-	}
-
-	public void drawScreen(int var1, int var2, float var3) {
-		this.field_110346_c.drawScreen(var1, var2, var3);
-		if(this.refreshTimer <= 0) {
+	/**
+	 * Called when the mouse is clicked.
+	 */
+	protected void mouseClicked(int par1, int par2, int par3) {
+		super.mouseClicked(par1, par2, par3);
+	}
+
+	/**
+	 * Called when the mouse is moved or a mouse button is released.  Signature: (mouseX, mouseY, which) which==-1 is
+	 * mouseMove, which==0 or which==1 is mouseUp
+	 */
+	protected void mouseMovedOrUp(int par1, int par2, int par3) {
+		super.mouseMovedOrUp(par1, par2, par3);
+	}
+
+	/**
+	 * Draws the screen and all the components in it.
+	 */
+	public void drawScreen(int par1, int par2, float par3) {
+		this.field_110346_c.drawScreen(par1, par2, par3);
+
+		if (this.refreshTimer <= 0) {
 			GuiScreenTemporaryResourcePackSelectSelectionList.func_110510_a(this.field_110346_c).updateRepositoryEntriesAll();
 			this.refreshTimer = 20;
 		}
 
 		this.drawCenteredString(this.fontRenderer, I18n.getString("resourcePack.title"), this.width / 2, 16, 16777215);
 		this.drawCenteredString(this.fontRenderer, I18n.getString("resourcePack.folderInfo"), this.width / 2 - 77, this.height - 26, 8421504);
-		super.drawScreen(var1, var2, var3);
+		super.drawScreen(par1, par2, par3);
 	}
 
+	/**
+	 * Called from the main game loop to update the screen.
+	 */
 	public void updateScreen() {
 		super.updateScreen();
 		--this.refreshTimer;
 	}
 
-	static Minecraft func_110344_a(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.mc;
-	}
-
-	static Minecraft func_110341_b(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.mc;
-	}
-
-	static Minecraft func_110339_c(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.mc;
-	}
-
-	static Minecraft func_110345_d(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.mc;
-	}
-
-	static Minecraft func_110334_e(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.mc;
-	}
-
-	static Minecraft func_110340_f(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.mc;
-	}
-
-	static FontRenderer func_130017_g(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.fontRenderer;
-	}
-
-	static FontRenderer func_130016_h(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.fontRenderer;
-	}
-
-	static FontRenderer func_110337_i(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.fontRenderer;
-	}
-
-	static FontRenderer func_110335_j(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.fontRenderer;
-	}
-
-	static FontRenderer func_110338_k(GuiScreenTemporaryResourcePackSelect var0) {
-		return var0.fontRenderer;
+	static Minecraft func_110344_a(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.mc;
+	}
+
+	static Minecraft func_110341_b(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.mc;
+	}
+
+	static Minecraft func_110339_c(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.mc;
+	}
+
+	static Minecraft func_110345_d(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.mc;
+	}
+
+	static Minecraft func_110334_e(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.mc;
+	}
+
+	static Minecraft func_110340_f(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.mc;
+	}
+
+	static FontRenderer func_130017_g(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.fontRenderer;
+	}
+
+	static FontRenderer func_130016_h(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.fontRenderer;
+	}
+
+	static FontRenderer func_110337_i(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.fontRenderer;
+	}
+
+	static FontRenderer func_110335_j(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.fontRenderer;
+	}
+
+	static FontRenderer func_110338_k(GuiScreenTemporaryResourcePackSelect par0GuiScreenTemporaryResourcePackSelect) {
+		return par0GuiScreenTemporaryResourcePackSelect.fontRenderer;
 	}
 }
