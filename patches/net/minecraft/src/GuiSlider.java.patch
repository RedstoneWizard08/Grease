--- net/minecraft/src/GuiSlider.java
+++ net/minecraft/src/GuiSlider.java
@@ -3,34 +3,48 @@
 import org.lwjgl.opengl.GL11;
 
 public class GuiSlider extends GuiButton {
+
+	/** The value of this slider control. */
 	public float sliderValue = 1.0F;
+
+	/** Is this slider control being dragged. */
 	public boolean dragging;
+
+	/** Additional ID for this slider control. */
 	private EnumOptions idFloat;
 
-	public GuiSlider(int var1, int var2, int var3, EnumOptions var4, String var5, float var6) {
-		super(var1, var2, var3, 150, 20, var5);
-		this.idFloat = var4;
-		this.sliderValue = var6;
+	public GuiSlider(int par1, int par2, int par3, EnumOptions par4EnumOptions, String par5Str, float par6) {
+		super(par1, par2, par3, 150, 20, par5Str);
+		this.idFloat = par4EnumOptions;
+		this.sliderValue = par6;
 	}
 
-	protected int getHoverState(boolean var1) {
+	/**
+	 * Returns 0 if the button is disabled, 1 if the mouse is NOT hovering over this button and 2 if it IS hovering over
+	 * this button.
+	 */
+	protected int getHoverState(boolean par1) {
 		return 0;
 	}
 
-	protected void mouseDragged(Minecraft var1, int var2, int var3) {
-		if(this.drawButton) {
-			if(this.dragging) {
-				this.sliderValue = (float)(var2 - (this.xPosition + 4)) / (float)(this.width - 8);
-				if(this.sliderValue < 0.0F) {
+	/**
+	 * Fired when the mouse button is dragged. Equivalent of MouseListener.mouseDragged(MouseEvent e).
+	 */
+	protected void mouseDragged(Minecraft par1Minecraft, int par2, int par3) {
+		if (this.drawButton) {
+			if (this.dragging) {
+				this.sliderValue = (float)(par2 - (this.xPosition + 4)) / (float)(this.width - 8);
+
+				if (this.sliderValue < 0.0F) {
 					this.sliderValue = 0.0F;
 				}
 
-				if(this.sliderValue > 1.0F) {
+				if (this.sliderValue > 1.0F) {
 					this.sliderValue = 1.0F;
 				}
 
-				var1.gameSettings.setOptionFloatValue(this.idFloat, this.sliderValue);
-				this.f = var1.gameSettings.getKeyBinding(this.idFloat);
+				par1Minecraft.gameSettings.setOptionFloatValue(this.idFloat, this.sliderValue);
+				this.displayString = par1Minecraft.gameSettings.getKeyBinding(this.idFloat);
 			}
 
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
@@ -39,19 +53,23 @@
 		}
 	}
 
-	public boolean mousePressed(Minecraft var1, int var2, int var3) {
-		if(super.mousePressed(var1, var2, var3)) {
-			this.sliderValue = (float)(var2 - (this.xPosition + 4)) / (float)(this.width - 8);
-			if(this.sliderValue < 0.0F) {
+	/**
+	 * Returns true if the mouse has been pressed on this control. Equivalent of MouseListener.mousePressed(MouseEvent e).
+	 */
+	public boolean mousePressed(Minecraft par1Minecraft, int par2, int par3) {
+		if (super.mousePressed(par1Minecraft, par2, par3)) {
+			this.sliderValue = (float)(par2 - (this.xPosition + 4)) / (float)(this.width - 8);
+
+			if (this.sliderValue < 0.0F) {
 				this.sliderValue = 0.0F;
 			}
 
-			if(this.sliderValue > 1.0F) {
+			if (this.sliderValue > 1.0F) {
 				this.sliderValue = 1.0F;
 			}
 
-			var1.gameSettings.setOptionFloatValue(this.idFloat, this.sliderValue);
-			this.f = var1.gameSettings.getKeyBinding(this.idFloat);
+			par1Minecraft.gameSettings.setOptionFloatValue(this.idFloat, this.sliderValue);
+			this.displayString = par1Minecraft.gameSettings.getKeyBinding(this.idFloat);
 			this.dragging = true;
 			return true;
 		} else {
@@ -59,7 +77,10 @@
 		}
 	}
 
-	public void mouseReleased(int var1, int var2) {
+	/**
+	 * Fired when the mouse button is released. Equivalent of MouseListener.mouseReleased(MouseEvent e).
+	 */
+	public void mouseReleased(int par1, int par2) {
 		this.dragging = false;
 	}
 }
