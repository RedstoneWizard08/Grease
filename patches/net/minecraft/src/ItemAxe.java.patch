--- net/minecraft/src/ItemAxe.java
+++ net/minecraft/src/ItemAxe.java
@@ -1,13 +1,19 @@
 package net.minecraft.src;
 
 public class ItemAxe extends ItemTool {
-	private static Block[] blocksEffectiveAgainst = new Block[]{Block.planks, Block.bookShelf, Block.wood, Block.chest, Block.stoneDoubleSlab, Block.stoneSingleSlab, Block.pumpkin, Block.pumpkinLantern};
-
-	protected ItemAxe(int var1, EnumToolMaterial var2) {
-		super(var1, 3.0F, var2, blocksEffectiveAgainst);
+
+	/** an array of the blocks this axe is effective against */
+	private static Block[] blocksEffectiveAgainst = new Block[] {Block.planks, Block.bookShelf, Block.wood, Block.chest, Block.stoneDoubleSlab, Block.stoneSingleSlab, Block.pumpkin, Block.pumpkinLantern};
+
+	protected ItemAxe(int par1, EnumToolMaterial par2EnumToolMaterial) {
+		super(par1, 3.0F, par2EnumToolMaterial, blocksEffectiveAgainst);
 	}
 
-	public float getStrVsBlock(ItemStack var1, Block var2) {
-		return var2 == null || var2.blockMaterial != Material.wood && var2.blockMaterial != Material.plants && var2.blockMaterial != Material.vine ? super.getStrVsBlock(var1, var2) : this.efficiencyOnProperMaterial;
+	/**
+	 * Returns the strength of the stack against a given block. 1.0F base, (Quality+1)*2 if correct blocktype, 1.5F if
+	 * sword
+	 */
+	public float getStrVsBlock(ItemStack par1ItemStack, Block par2Block) {
+		return par2Block != null && (par2Block.blockMaterial == Material.wood || par2Block.blockMaterial == Material.plants || par2Block.blockMaterial == Material.vine) ? this.efficiencyOnProperMaterial : super.getStrVsBlock(par1ItemStack, par2Block);
 	}
 }
