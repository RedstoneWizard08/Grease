--- net/minecraft/src/ItemBlock.java
+++ net/minecraft/src/ItemBlock.java
@@ -1,76 +1,99 @@
 package net.minecraft.src;
 
+//Spout Start
+
 import java.util.List;
 
+import com.prupe.mcpatcher.cc.ColorizeBlock;
+
+//Spout end
+
 public class ItemBlock extends Item {
+	/** The block ID of the Block associated with this ItemBlock */
 	private int blockID;
 	private Icon field_94588_b;
 
-	public ItemBlock(int var1) {
-		super(var1);
-		this.blockID = var1 + 256;
+	public ItemBlock(int par1) {
+		super(par1);
+		this.blockID = par1 + 256;
 	}
 
+	/**
+	 * Returns the blockID for this Item
+	 */
 	public int getBlockID() {
 		return this.blockID;
 	}
 
+	/**
+	 * Returns 0 for /terrain.png, 1 for /gui/items.png
+	 */
 	public int getSpriteNumber() {
 		return Block.blocksList[this.blockID].getItemIconName() != null ? 1 : 0;
 	}
 
-	public Icon getIconFromDamage(int var1) {
+	/**
+	 * Gets an icon index based on an item's damage value
+	 */
+	public Icon getIconFromDamage(int par1) {
 		return this.field_94588_b != null ? this.field_94588_b : Block.blocksList[this.blockID].getBlockTextureFromSide(1);
 	}
 
-	public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
-		int var11 = var3.getBlockId(var4, var5, var6);
-		if(var11 == Block.snow.blockID && (var3.getBlockMetadata(var4, var5, var6) & 7) < 1) {
-			var7 = 1;
-		} else if(var11 != Block.vine.blockID && var11 != Block.tallGrass.blockID && var11 != Block.deadBush.blockID) {
-			if(var7 == 0) {
-				--var5;
-			}
-
-			if(var7 == 1) {
-				++var5;
-			}
-
-			if(var7 == 2) {
-				--var6;
-			}
-
-			if(var7 == 3) {
-				++var6;
-			}
-
-			if(var7 == 4) {
-				--var4;
-			}
-
-			if(var7 == 5) {
-				++var4;
+	/**
+	 * Callback for item usage. If the item does something special on right
+	 * clicking, he will have one of those. Return True if something happen and
+	 * false if it don't. This is for ITEMS, not BLOCKS
+	 */
+	public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10) {
+		int var11 = par3World.getBlockId(par4, par5, par6);
+
+		if (var11 == Block.snow.blockID && (par3World.getBlockMetadata(par4, par5, par6) & 7) < 1) {
+			par7 = 1;
+		} else if (var11 != Block.vine.blockID && var11 != Block.tallGrass.blockID && var11 != Block.deadBush.blockID) {
+			if (par7 == 0) {
+				--par5;
+			}
+
+			if (par7 == 1) {
+				++par5;
+			}
+
+			if (par7 == 2) {
+				--par6;
+			}
+
+			if (par7 == 3) {
+				++par6;
+			}
+
+			if (par7 == 4) {
+				--par4;
+			}
+
+			if (par7 == 5) {
+				++par4;
 			}
 		}
 
-		if(var1.stackSize == 0) {
-			return false;
-		} else if(!var2.canPlayerEdit(var4, var5, var6, var7, var1)) {
-			return false;
-		} else if(var5 == 255 && Block.blocksList[this.blockID].blockMaterial.isSolid()) {
-			return false;
-		} else if(var3.canPlaceEntityOnSide(this.blockID, var4, var5, var6, false, var7, var2, var1)) {
+		if (par1ItemStack.stackSize == 0) {
+			return false;
+		} else if (!par2EntityPlayer.canPlayerEdit(par4, par5, par6, par7, par1ItemStack)) {
+			return false;
+		} else if (par5 == 255 && Block.blocksList[this.blockID].blockMaterial.isSolid()) {
+			return false;
+		} else if (par3World.canPlaceEntityOnSide(this.blockID, par4, par5, par6, false, par7, par2EntityPlayer, par1ItemStack)) {
 			Block var12 = Block.blocksList[this.blockID];
-			int var13 = this.getMetadata(var1.getItemDamage());
-			int var14 = Block.blocksList[this.blockID].onBlockPlaced(var3, var4, var5, var6, var7, var8, var9, var10, var13);
-			if(var3.setBlock(var4, var5, var6, this.blockID, var14, 3)) {
-				if(var3.getBlockId(var4, var5, var6) == this.blockID) {
-					Block.blocksList[this.blockID].onBlockPlacedBy(var3, var4, var5, var6, var2, var1);
-					Block.blocksList[this.blockID].onPostBlockPlaced(var3, var4, var5, var6, var14);
+			int var13 = this.getMetadata(par1ItemStack.getItemDamage());
+			int var14 = Block.blocksList[this.blockID].onBlockPlaced(par3World, par4, par5, par6, par7, par8, par9, par10, var13);
+
+			if (par3World.setBlock(par4, par5, par6, this.blockID, var14, 3)) {
+				if (par3World.getBlockId(par4, par5, par6) == this.blockID) {
+					Block.blocksList[this.blockID].onBlockPlacedBy(par3World, par4, par5, par6, par2EntityPlayer, par1ItemStack);
+					Block.blocksList[this.blockID].onPostBlockPlaced(par3World, par4, par5, par6, var14);
 				}
 
-				var3.playSoundEffect((double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), var12.stepSound.getPlaceSound(), (var12.stepSound.getVolume() + 1.0F) / 2.0F, var12.stepSound.getPitch() * 0.8F);
-				--var1.stackSize;
+				par3World.playSoundEffect((double) ((float) par4 + 0.5F), (double) ((float) par5 + 0.5F), (double) ((float) par6 + 0.5F), var12.stepSound.getPlaceSound(), (var12.stepSound.getVolume() + 1.0F) / 2.0F, var12.stepSound.getPitch() * 0.8F);
+				--par1ItemStack.stackSize;
 			}
 
 			return true;
@@ -79,60 +102,86 @@
 		}
 	}
 
-	public boolean canPlaceItemBlockOnSide(World var1, int var2, int var3, int var4, int var5, EntityPlayer var6, ItemStack var7) {
-		int var8 = var1.getBlockId(var2, var3, var4);
-		if(var8 == Block.snow.blockID) {
-			var5 = 1;
-		} else if(var8 != Block.vine.blockID && var8 != Block.tallGrass.blockID && var8 != Block.deadBush.blockID) {
-			if(var5 == 0) {
-				--var3;
-			}
-
-			if(var5 == 1) {
-				++var3;
-			}
-
-			if(var5 == 2) {
-				--var4;
-			}
-
-			if(var5 == 3) {
-				++var4;
-			}
-
-			if(var5 == 4) {
-				--var2;
-			}
-
-			if(var5 == 5) {
-				++var2;
+	/**
+	 * Returns true if the given ItemBlock can be placed on the given side of
+	 * the given block position.
+	 */
+	public boolean canPlaceItemBlockOnSide(World par1World, int par2, int par3, int par4, int par5, EntityPlayer par6EntityPlayer, ItemStack par7ItemStack) {
+		int var8 = par1World.getBlockId(par2, par3, par4);
+
+		if (var8 == Block.snow.blockID) {
+			par5 = 1;
+		} else if (var8 != Block.vine.blockID && var8 != Block.tallGrass.blockID && var8 != Block.deadBush.blockID) {
+			if (par5 == 0) {
+				--par3;
+			}
+
+			if (par5 == 1) {
+				++par3;
+			}
+
+			if (par5 == 2) {
+				--par4;
+			}
+
+			if (par5 == 3) {
+				++par4;
+			}
+
+			if (par5 == 4) {
+				--par2;
+			}
+
+			if (par5 == 5) {
+				++par2;
 			}
 		}
 
-		return var1.canPlaceEntityOnSide(this.getBlockID(), var2, var3, var4, false, var5, (Entity)null, var7);
+		return par1World.canPlaceEntityOnSide(this.getBlockID(), par2, par3, par4, false, par5, (Entity) null, par7ItemStack);
 	}
 
-	public String getUnlocalizedName(ItemStack var1) {
+	/**
+	 * Returns the unlocalized name of this item. This version accepts an
+	 * ItemStack so different stacks can have different names based on their
+	 * damage or NBT.
+	 */
+	public String getUnlocalizedName(ItemStack par1ItemStack) {
 		return Block.blocksList[this.blockID].getUnlocalizedName();
 	}
 
+	/**
+	 * Returns the unlocalized name of this item.
+	 */
 	public String getUnlocalizedName() {
 		return Block.blocksList[this.blockID].getUnlocalizedName();
 	}
 
+	/**
+	 * gets the CreativeTab this item is displayed on
+	 */
 	public CreativeTabs getCreativeTab() {
 		return Block.blocksList[this.blockID].getCreativeTabToDisplayOn();
 	}
 
-	public void getSubItems(int var1, CreativeTabs var2, List var3) {
-		Block.blocksList[this.blockID].getSubBlocks(var1, var2, var3);
+	/**
+	 * returns a list of items with the same ID, but different meta (eg: dye
+	 * returns 16 items)
+	 */
+	public void getSubItems(int par1, CreativeTabs par2CreativeTabs, List par3List) {
+		Block.blocksList[this.blockID].getSubBlocks(par1, par2CreativeTabs, par3List);
 	}
 
-	public void registerIcons(IconRegister var1) {
+	public void registerIcons(IconRegister par1IconRegister) {
 		String var2 = Block.blocksList[this.blockID].getItemIconName();
-		if(var2 != null) {
-			this.field_94588_b = var1.registerIcon(var2);
+
+		if (var2 != null) {
+			this.field_94588_b = par1IconRegister.registerIcon(var2);
 		}
+	}
 
+	//Spout MCPatcher start
+	public int getColorFromItemStack(ItemStack var1, int var2) {
+		return ColorizeBlock.getItemColorFromDamage(super.getColorFromItemStack(var1, var2), this.blockID, var2);
 	}
+	//Spout MCPatcher end
 }
