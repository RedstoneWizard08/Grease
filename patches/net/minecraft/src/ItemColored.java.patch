--- net/minecraft/src/ItemColored.java
+++ net/minecraft/src/ItemColored.java
@@ -1,41 +1,55 @@
 package net.minecraft.src;
 
 public class ItemColored extends ItemBlock {
-	private final Block blockRef = Block.blocksList[this.getBlockID()];
-	private String[] b;
-
-	public ItemColored(int var1, boolean var2) {
-		super(var1);
-		if(var2) {
+	private final Block blockRef;
+	private String[] blockNames;
+
+	public ItemColored(int par1, boolean par2) {
+		super(par1);
+		this.blockRef = Block.blocksList[this.getBlockID()];
+
+		if (par2) {
 			this.setMaxDamage(0);
 			this.setHasSubtypes(true);
 		}
-
-	}
-
-	public int getColorFromItemStack(ItemStack var1, int var2) {
-		return this.blockRef.getRenderColor(var1.getItemDamage());
-	}
-
-	public Icon getIconFromDamage(int var1) {
-		return this.blockRef.getIcon(0, var1);
-	}
-
-	public int getMetadata(int var1) {
-		return var1;
-	}
-
-	public ItemColored setBlockNames(String[] var1) {
-		this.b = var1;
+	}
+
+	public int getColorFromItemStack(ItemStack par1ItemStack, int par2) {
+		return this.blockRef.getRenderColor(par1ItemStack.getItemDamage());
+	}
+
+	/**
+	 * Gets an icon index based on an item's damage value
+	 */
+	public Icon getIconFromDamage(int par1) {
+		return this.blockRef.getIcon(0, par1);
+	}
+
+	/**
+	 * Returns the metadata of the block which this Item (ItemBlock) can place
+	 */
+	public int getMetadata(int par1) {
+		return par1;
+	}
+
+	/**
+	 * Sets the array of strings to be used for name lookups from item damage to metadata
+	 */
+	public ItemColored setBlockNames(String[] par1ArrayOfStr) {
+		this.blockNames = par1ArrayOfStr;
 		return this;
 	}
 
-	public String getUnlocalizedName(ItemStack var1) {
-		if(this.b == null) {
-			return super.getUnlocalizedName(var1);
+	/**
+	 * Returns the unlocalized name of this item. This version accepts an ItemStack so different stacks can have different
+	 * names based on their damage or NBT.
+	 */
+	public String getUnlocalizedName(ItemStack par1ItemStack) {
+		if (this.blockNames == null) {
+			return super.getUnlocalizedName(par1ItemStack);
 		} else {
-			int var2 = var1.getItemDamage();
-			return var2 >= 0 && var2 < this.b.length ? super.getUnlocalizedName(var1) + "." + this.b[var2] : super.getUnlocalizedName(var1);
+			int var2 = par1ItemStack.getItemDamage();
+			return var2 >= 0 && var2 < this.blockNames.length ? super.getUnlocalizedName(par1ItemStack) + "." + this.blockNames[var2] : super.getUnlocalizedName(par1ItemStack);
 		}
 	}
 }
