--- net/minecraft/src/ItemHangingEntity.java
+++ net/minecraft/src/ItemHangingEntity.java
@@ -1,31 +1,36 @@
 package net.minecraft.src;
 
 public class ItemHangingEntity extends Item {
-	private final Class a;
+	private final Class hangingEntityClass;
 
-	public ItemHangingEntity(int var1, Class var2) {
-		super(var1);
-		this.a = var2;
+	public ItemHangingEntity(int par1, Class par2Class) {
+		super(par1);
+		this.hangingEntityClass = par2Class;
 		this.setCreativeTab(CreativeTabs.tabDecorations);
 	}
 
-	public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
-		if(var7 == 0) {
+	/**
+	 * Callback for item usage. If the item does something special on right clicking, he will have one of those. Return
+	 * True if something happen and false if it don't. This is for ITEMS, not BLOCKS
+	 */
+	public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10) {
+		if (par7 == 0) {
 			return false;
-		} else if(var7 == 1) {
+		} else if (par7 == 1) {
 			return false;
 		} else {
-			int var11 = Direction.facingToDirection[var7];
-			EntityHanging var12 = this.createHangingEntity(var3, var4, var5, var6, var11);
-			if(!var2.canPlayerEdit(var4, var5, var6, var7, var1)) {
+			int var11 = Direction.facingToDirection[par7];
+			EntityHanging var12 = this.createHangingEntity(par3World, par4, par5, par6, var11);
+
+			if (!par2EntityPlayer.canPlayerEdit(par4, par5, par6, par7, par1ItemStack)) {
 				return false;
 			} else {
-				if(var12 != null && var12.onValidSurface()) {
-					if(!var3.isRemote) {
-						var3.spawnEntityInWorld(var12);
+				if (var12 != null && var12.onValidSurface()) {
+					if (!par3World.isRemote) {
+						par3World.spawnEntityInWorld(var12);
 					}
 
-					--var1.stackSize;
+					--par1ItemStack.stackSize;
 				}
 
 				return true;
@@ -33,7 +38,10 @@
 		}
 	}
 
-	private EntityHanging createHangingEntity(World var1, int var2, int var3, int var4, int var5) {
-		return (EntityHanging)(this.a == EntityPainting.class ? new EntityPainting(var1, var2, var3, var4, var5) : (this.a == EntityItemFrame.class ? new EntityItemFrame(var1, var2, var3, var4, var5) : null));
+	/**
+	 * Create the hanging entity associated to this item.
+	 */
+	private EntityHanging createHangingEntity(World par1World, int par2, int par3, int par4, int par5) {
+		return (EntityHanging)(this.hangingEntityClass == EntityPainting.class ? new EntityPainting(par1World, par2, par3, par4, par5) : (this.hangingEntityClass == EntityItemFrame.class ? new EntityItemFrame(par1World, par2, par3, par4, par5) : null));
 	}
 }
