--- net/minecraft/src/ItemMinecart.java
+++ net/minecraft/src/ItemMinecart.java
@@ -4,27 +4,33 @@
 	private static final IBehaviorDispenseItem dispenserMinecartBehavior = new BehaviorDispenseMinecart();
 	public int minecartType;
 
-	public ItemMinecart(int var1, int var2) {
-		super(var1);
+	public ItemMinecart(int par1, int par2) {
+		super(par1);
 		this.maxStackSize = 1;
-		this.minecartType = var2;
+		this.minecartType = par2;
 		this.setCreativeTab(CreativeTabs.tabTransport);
 		BlockDispenser.dispenseBehaviorRegistry.putObject(this, dispenserMinecartBehavior);
 	}
 
-	public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
-		int var11 = var3.getBlockId(var4, var5, var6);
-		if(BlockRailBase.isRailBlock(var11)) {
-			if(!var3.isRemote) {
-				EntityMinecart var12 = EntityMinecart.createMinecart(var3, (double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), this.minecartType);
-				if(var1.hasDisplayName()) {
-					var12.setMinecartName(var1.getDisplayName());
+	/**
+	 * Callback for item usage. If the item does something special on right clicking, he will have one of those. Return
+	 * True if something happen and false if it don't. This is for ITEMS, not BLOCKS
+	 */
+	public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10) {
+		int var11 = par3World.getBlockId(par4, par5, par6);
+
+		if (BlockRailBase.isRailBlock(var11)) {
+			if (!par3World.isRemote) {
+				EntityMinecart var12 = EntityMinecart.createMinecart(par3World, (double)((float)par4 + 0.5F), (double)((float)par5 + 0.5F), (double)((float)par6 + 0.5F), this.minecartType);
+
+				if (par1ItemStack.hasDisplayName()) {
+					var12.setMinecartName(par1ItemStack.getDisplayName());
 				}
 
-				var3.spawnEntityInWorld(var12);
+				par3World.spawnEntityInWorld(var12);
 			}
 
-			--var1.stackSize;
+			--par1ItemStack.stackSize;
 			return true;
 		} else {
 			return false;
