--- net/minecraft/src/ItemMonsterPlacer.java
+++ net/minecraft/src/ItemMonsterPlacer.java
@@ -3,59 +3,73 @@
 import java.util.Iterator;
 import java.util.List;
 
+import com.prupe.mcpatcher.cc.ColorizeItem;
+
 public class ItemMonsterPlacer extends Item {
 	private Icon theIcon;
 
-	public ItemMonsterPlacer(int var1) {
-		super(var1);
+	public ItemMonsterPlacer(int par1) {
+		super(par1);
 		this.setHasSubtypes(true);
 		this.setCreativeTab(CreativeTabs.tabMisc);
 	}
 
-	public String getItemDisplayName(ItemStack var1) {
+	public String getItemDisplayName(ItemStack par1ItemStack) {
 		String var2 = ("" + StatCollector.translateToLocal(this.getUnlocalizedName() + ".name")).trim();
-		String var3 = EntityList.getStringFromID(var1.getItemDamage());
-		if(var3 != null) {
+		String var3 = EntityList.getStringFromID(par1ItemStack.getItemDamage());
+
+		if (var3 != null) {
 			var2 = var2 + " " + StatCollector.translateToLocal("entity." + var3 + ".name");
 		}
 
 		return var2;
 	}
 
-	public int getColorFromItemStack(ItemStack var1, int var2) {
-		EntityEggInfo var3 = (EntityEggInfo)EntityList.a.get(Integer.valueOf(var1.getItemDamage()));
-		return var3 != null ? (var2 == 0 ? var3.primaryColor : var3.secondaryColor) : 16777215;
+	public int getColorFromItemStack(ItemStack par1ItemStack, int par2) {
+		EntityEggInfo var3 = (EntityEggInfo)EntityList.entityEggs.get(Integer.valueOf(par1ItemStack.getItemDamage()));
+		// MCPatcher Start
+		return var3 != null ? (par2 == 0 ? ColorizeItem.colorizeSpawnerEgg(var3.primaryColor, par1ItemStack.getItemDamage(), par2) : ColorizeItem.colorizeSpawnerEgg(var3.secondaryColor, par1ItemStack.getItemDamage(), par2)) : ColorizeItem.colorizeSpawnerEgg(16777215, par1ItemStack.getItemDamage(), par2);
+		// MCPatcher End
 	}
 
 	public boolean requiresMultipleRenderPasses() {
 		return true;
 	}
 
-	public Icon getIconFromDamageForRenderPass(int var1, int var2) {
-		return var2 > 0 ? this.theIcon : super.getIconFromDamageForRenderPass(var1, var2);
+	/**
+	 * Gets an icon index based on an item's damage value and the given render pass
+	 */
+	public Icon getIconFromDamageForRenderPass(int par1, int par2) {
+		return par2 > 0 ? this.theIcon : super.getIconFromDamageForRenderPass(par1, par2);
 	}
 
-	public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
-		if(var3.isRemote) {
+	/**
+	 * Callback for item usage. If the item does something special on right clicking, he will have one of those. Return
+	 * True if something happen and false if it don't. This is for ITEMS, not BLOCKS
+	 */
+	public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10) {
+		if (par3World.isRemote) {
 			return true;
 		} else {
-			int var11 = var3.getBlockId(var4, var5, var6);
-			var4 += Facing.offsetsXForSide[var7];
-			var5 += Facing.offsetsYForSide[var7];
-			var6 += Facing.offsetsZForSide[var7];
+			int var11 = par3World.getBlockId(par4, par5, par6);
+			par4 += Facing.offsetsXForSide[par7];
+			par5 += Facing.offsetsYForSide[par7];
+			par6 += Facing.offsetsZForSide[par7];
 			double var12 = 0.0D;
-			if(var7 == 1 && Block.blocksList[var11] != null && Block.blocksList[var11].getRenderType() == 11) {
+
+			if (par7 == 1 && Block.blocksList[var11] != null && Block.blocksList[var11].getRenderType() == 11) {
 				var12 = 0.5D;
 			}
 
-			Entity var14 = spawnCreature(var3, var1.getItemDamage(), (double)var4 + 0.5D, (double)var5 + var12, (double)var6 + 0.5D);
-			if(var14 != null) {
-				if(var14 instanceof EntityLivingBase && var1.hasDisplayName()) {
-					((EntityLiving)var14).setCustomNameTag(var1.getDisplayName());
+			Entity var14 = spawnCreature(par3World, par1ItemStack.getItemDamage(), (double)par4 + 0.5D, (double)par5 + var12, (double)par6 + 0.5D);
+
+			if (var14 != null) {
+				if (var14 instanceof EntityLivingBase && par1ItemStack.hasDisplayName()) {
+					((EntityLiving)var14).setCustomNameTag(par1ItemStack.getDisplayName());
 				}
 
-				if(!var2.capabilities.isCreativeMode) {
-					--var1.stackSize;
+				if (!par2EntityPlayer.capabilities.isCreativeMode) {
+					--par1ItemStack.stackSize;
 				}
 			}
 
@@ -63,60 +77,71 @@
 		}
 	}
 
-	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
-		if(var2.isRemote) {
-			return var1;
+	/**
+	 * Called whenever this item is equipped and the right mouse button is pressed. Args: itemStack, world, entityPlayer
+	 */
+	public ItemStack onItemRightClick(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer) {
+		if (par2World.isRemote) {
+			return par1ItemStack;
 		} else {
-			MovingObjectPosition var4 = this.getMovingObjectPositionFromPlayer(var2, var3, true);
-			if(var4 == null) {
-				return var1;
+			MovingObjectPosition var4 = this.getMovingObjectPositionFromPlayer(par2World, par3EntityPlayer, true);
+
+			if (var4 == null) {
+				return par1ItemStack;
 			} else {
-				if(var4.typeOfHit == EnumMovingObjectType.TILE) {
+				if (var4.typeOfHit == EnumMovingObjectType.TILE) {
 					int var5 = var4.blockX;
 					int var6 = var4.blockY;
 					int var7 = var4.blockZ;
-					if(!var2.canMineBlock(var3, var5, var6, var7)) {
-						return var1;
-					}
-
-					if(!var3.canPlayerEdit(var5, var6, var7, var4.sideHit, var1)) {
-						return var1;
-					}
-
-					if(var2.getBlockMaterial(var5, var6, var7) == Material.water) {
-						Entity var8 = spawnCreature(var2, var1.getItemDamage(), (double)var5, (double)var6, (double)var7);
-						if(var8 != null) {
-							if(var8 instanceof EntityLivingBase && var1.hasDisplayName()) {
-								((EntityLiving)var8).setCustomNameTag(var1.getDisplayName());
+
+					if (!par2World.canMineBlock(par3EntityPlayer, var5, var6, var7)) {
+						return par1ItemStack;
+					}
+
+					if (!par3EntityPlayer.canPlayerEdit(var5, var6, var7, var4.sideHit, par1ItemStack)) {
+						return par1ItemStack;
+					}
+
+					if (par2World.getBlockMaterial(var5, var6, var7) == Material.water) {
+						Entity var8 = spawnCreature(par2World, par1ItemStack.getItemDamage(), (double)var5, (double)var6, (double)var7);
+
+						if (var8 != null) {
+							if (var8 instanceof EntityLivingBase && par1ItemStack.hasDisplayName()) {
+								((EntityLiving)var8).setCustomNameTag(par1ItemStack.getDisplayName());
 							}
 
-							if(!var3.capabilities.isCreativeMode) {
-								--var1.stackSize;
+							if (!par3EntityPlayer.capabilities.isCreativeMode) {
+								--par1ItemStack.stackSize;
 							}
 						}
 					}
 				}
 
-				return var1;
+				return par1ItemStack;
 			}
 		}
 	}
-
-	public static Entity spawnCreature(World var0, int var1, double var2, double var4, double var6) {
-		if(!EntityList.a.containsKey(Integer.valueOf(var1))) {
+	
+	/**
+	 * Spawns the creature specified by the egg's type in the location specified by the last three parameters. Parameters:
+	 * world, entityID, x, y, z.
+	 */
+	public static Entity spawnCreature(World par0World, int par1, double par2, double par4, double par6) {
+		if (!EntityList.entityEggs.containsKey(Integer.valueOf(par1))) {
 			return null;
 		} else {
 			Entity var8 = null;
 
-			for(int var9 = 0; var9 < 1; ++var9) {
-				var8 = EntityList.createEntityByID(var1, var0);
-				if(var8 != null && var8 instanceof EntityLivingBase) {
+			for (int var9 = 0; var9 < 1; ++var9) {
+				var8 = EntityList.createEntityByID(par1, par0World);
+
+				if (var8 != null && var8 instanceof EntityLivingBase) {
 					EntityLiving var10 = (EntityLiving)var8;
-					var8.setLocationAndAngles(var2, var4, var6, MathHelper.wrapAngleTo180_float(var0.s.nextFloat() * 360.0F), 0.0F);
+					var8.setLocationAndAngles(par2, par4, par6, MathHelper.wrapAngleTo180_float(par0World.rand.nextFloat() * 360.0F), 0.0F);
 					var10.rotationYawHead = var10.rotationYaw;
 					var10.renderYawOffset = var10.rotationYaw;
 					var10.onSpawnWithEgg((EntityLivingData)null);
-					var0.spawnEntityInWorld(var8);
+					par0World.spawnEntityInWorld(var8);
 					var10.playLivingSound();
 				}
 			}
@@ -125,18 +150,20 @@
 		}
 	}
 
-	public void getSubItems(int var1, CreativeTabs var2, List var3) {
-		Iterator var4 = EntityList.a.values().iterator();
+	/**
+	 * returns a list of items with the same ID, but different meta (eg: dye returns 16 items)
+	 */
+	public void getSubItems(int par1, CreativeTabs par2CreativeTabs, List par3List) {
+		Iterator var4 = EntityList.entityEggs.values().iterator();
 
-		while(var4.hasNext()) {
+		while (var4.hasNext()) {
 			EntityEggInfo var5 = (EntityEggInfo)var4.next();
-			var3.add(new ItemStack(var1, 1, var5.spawnedID));
+			par3List.add(new ItemStack(par1, 1, var5.spawnedID));
 		}
-
 	}
 
-	public void registerIcons(IconRegister var1) {
-		super.registerIcons(var1);
-		this.theIcon = var1.registerIcon(this.getIconString() + "_overlay");
+	public void registerIcons(IconRegister par1IconRegister) {
+		super.registerIcons(par1IconRegister);
+		this.theIcon = par1IconRegister.registerIcon(this.getIconString() + "_overlay");
 	}
 }
