--- net/minecraft/src/ItemRecord.java
+++ net/minecraft/src/ItemRecord.java
@@ -5,29 +5,40 @@
 import java.util.Map;
 
 public class ItemRecord extends Item {
-	private static final Map b = new HashMap();
-	public final String a;
-
-	protected ItemRecord(int var1, String var2) {
-		super(var1);
-		this.a = var2;
+
+	/** List of all record items and their names. */
+	private static final Map records = new HashMap();
+
+	/** The name of the record. */
+	public final String recordName;
+
+	protected ItemRecord(int par1, String par2Str) {
+		super(par1);
+		this.recordName = par2Str;
 		this.maxStackSize = 1;
 		this.setCreativeTab(CreativeTabs.tabMisc);
-		b.put(var2, this);
+		records.put(par2Str, this);
 	}
 
-	public Icon getIconFromDamage(int var1) {
+	/**
+	 * Gets an icon index based on an item's damage value
+	 */
+	public Icon getIconFromDamage(int par1) {
 		return this.itemIcon;
 	}
 
-	public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
-		if(var3.getBlockId(var4, var5, var6) == Block.jukebox.blockID && var3.getBlockMetadata(var4, var5, var6) == 0) {
-			if(var3.isRemote) {
+	/**
+	 * Callback for item usage. If the item does something special on right clicking, he will have one of those. Return
+	 * True if something happen and false if it don't. This is for ITEMS, not BLOCKS
+	 */
+	public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10) {
+		if (par3World.getBlockId(par4, par5, par6) == Block.jukebox.blockID && par3World.getBlockMetadata(par4, par5, par6) == 0) {
+			if (par3World.isRemote) {
 				return true;
 			} else {
-				((BlockJukeBox)Block.jukebox).insertRecord(var3, var4, var5, var6, var1);
-				var3.playAuxSFXAtEntity((EntityPlayer)null, 1005, var4, var5, var6, this.itemID);
-				--var1.stackSize;
+				((BlockJukeBox)Block.jukebox).insertRecord(par3World, par4, par5, par6, par1ItemStack);
+				par3World.playAuxSFXAtEntity((EntityPlayer)null, 1005, par4, par5, par6, this.itemID);
+				--par1ItemStack.stackSize;
 				return true;
 			}
 		} else {
@@ -35,19 +46,31 @@
 		}
 	}
 
-	public void addInformation(ItemStack var1, EntityPlayer var2, List var3, boolean var4) {
-		var3.add(this.getRecordTitle());
+	/**
+	 * allows items to add custom lines of information to the mouseover description
+	 */
+	public void addInformation(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, List par3List, boolean par4) {
+		par3List.add(this.getRecordTitle());
 	}
 
+	/**
+	 * Return the title for this record.
+	 */
 	public String getRecordTitle() {
-		return "C418 - " + this.a;
+		return "C418 - " + this.recordName;
 	}
 
-	public EnumRarity getRarity(ItemStack var1) {
+	/**
+	 * Return an item rarity from EnumRarity
+	 */
+	public EnumRarity getRarity(ItemStack par1ItemStack) {
 		return EnumRarity.rare;
 	}
 
-	public static ItemRecord getRecord(String var0) {
-		return (ItemRecord)b.get(var0);
+	/**
+	 * Return the record item corresponding to the given name.
+	 */
+	public static ItemRecord getRecord(String par0Str) {
+		return (ItemRecord)records.get(par0Str);
 	}
 }
