--- net/minecraft/src/ItemSaddle.java
+++ net/minecraft/src/ItemSaddle.java
@@ -1,18 +1,22 @@
 package net.minecraft.src;
 
 public class ItemSaddle extends Item {
-	public ItemSaddle(int var1) {
-		super(var1);
+	public ItemSaddle(int par1) {
+		super(par1);
 		this.maxStackSize = 1;
 		this.setCreativeTab(CreativeTabs.tabTransport);
 	}
 
-	public boolean itemInteractionForEntity(ItemStack var1, EntityPlayer var2, EntityLivingBase var3) {
-		if(var3 instanceof EntityPig) {
-			EntityPig var4 = (EntityPig)var3;
-			if(!var4.getSaddled() && !var4.isChild()) {
+	/**
+	 * Returns true if the item can be used on the given entity, e.g. shears on sheep.
+	 */
+	public boolean itemInteractionForEntity(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, EntityLivingBase par3EntityLivingBase) {
+		if (par3EntityLivingBase instanceof EntityPig) {
+			EntityPig var4 = (EntityPig)par3EntityLivingBase;
+
+			if (!var4.getSaddled() && !var4.isChild()) {
 				var4.setSaddled(true);
-				--var1.stackSize;
+				--par1ItemStack.stackSize;
 			}
 
 			return true;
@@ -21,8 +25,12 @@
 		}
 	}
 
-	public boolean hitEntity(ItemStack var1, EntityLivingBase var2, EntityLivingBase var3) {
-		this.itemInteractionForEntity(var1, (EntityPlayer)null, var2);
+	/**
+	 * Current implementations of this method in child classes do not use the entry argument beside ev. They just raise the
+	 * damage on the stack.
+	 */
+	public boolean hitEntity(ItemStack par1ItemStack, EntityLivingBase par2EntityLivingBase, EntityLivingBase par3EntityLivingBase) {
+		this.itemInteractionForEntity(par1ItemStack, (EntityPlayer)null, par2EntityLivingBase);
 		return true;
 	}
 }
