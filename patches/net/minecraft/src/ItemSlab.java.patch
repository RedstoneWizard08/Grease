--- net/minecraft/src/ItemSlab.java
+++ net/minecraft/src/ItemSlab.java
@@ -2,130 +2,154 @@
 
 public class ItemSlab extends ItemBlock {
 	private final boolean isFullBlock;
+
+	/** Instance of BlockHalfSlab. */
 	private final BlockHalfSlab theHalfSlab;
+
+	/** The double-slab block corresponding to this item. */
 	private final BlockHalfSlab doubleSlab;
 
-	public ItemSlab(int var1, BlockHalfSlab var2, BlockHalfSlab var3, boolean var4) {
-		super(var1);
-		this.theHalfSlab = var2;
-		this.doubleSlab = var3;
-		this.isFullBlock = var4;
+	public ItemSlab(int par1, BlockHalfSlab par2BlockHalfSlab, BlockHalfSlab par3BlockHalfSlab, boolean par4) {
+		super(par1);
+		this.theHalfSlab = par2BlockHalfSlab;
+		this.doubleSlab = par3BlockHalfSlab;
+		this.isFullBlock = par4;
 		this.setMaxDamage(0);
 		this.setHasSubtypes(true);
 	}
 
-	public Icon getIconFromDamage(int var1) {
-		return Block.blocksList[this.itemID].getIcon(2, var1);
-	}
-
-	public int getMetadata(int var1) {
-		return var1;
-	}
-
-	public String getUnlocalizedName(ItemStack var1) {
-		return this.theHalfSlab.getFullSlabName(var1.getItemDamage());
-	}
-
-	public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
-		if(this.isFullBlock) {
-			return super.onItemUse(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10);
-		} else if(var1.stackSize == 0) {
+	/**
+	 * Gets an icon index based on an item's damage value
+	 */
+	public Icon getIconFromDamage(int par1) {
+		return Block.blocksList[this.itemID].getIcon(2, par1);
+	}
+
+	/**
+	 * Returns the metadata of the block which this Item (ItemBlock) can place
+	 */
+	public int getMetadata(int par1) {
+		return par1;
+	}
+
+	/**
+	 * Returns the unlocalized name of this item. This version accepts an ItemStack so different stacks can have different
+	 * names based on their damage or NBT.
+	 */
+	public String getUnlocalizedName(ItemStack par1ItemStack) {
+		return this.theHalfSlab.getFullSlabName(par1ItemStack.getItemDamage());
+	}
+
+	/**
+	 * Callback for item usage. If the item does something special on right clicking, he will have one of those. Return
+	 * True if something happen and false if it don't. This is for ITEMS, not BLOCKS
+	 */
+	public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10) {
+		if (this.isFullBlock) {
+			return super.onItemUse(par1ItemStack, par2EntityPlayer, par3World, par4, par5, par6, par7, par8, par9, par10);
+		} else if (par1ItemStack.stackSize == 0) {
 			return false;
-		} else if(!var2.canPlayerEdit(var4, var5, var6, var7, var1)) {
+		} else if (!par2EntityPlayer.canPlayerEdit(par4, par5, par6, par7, par1ItemStack)) {
 			return false;
 		} else {
-			int var11 = var3.getBlockId(var4, var5, var6);
-			int var12 = var3.getBlockMetadata(var4, var5, var6);
+			int var11 = par3World.getBlockId(par4, par5, par6);
+			int var12 = par3World.getBlockMetadata(par4, par5, par6);
 			int var13 = var12 & 7;
 			boolean var14 = (var12 & 8) != 0;
-			if((var7 == 1 && !var14 || var7 == 0 && var14) && var11 == this.theHalfSlab.blockID && var13 == var1.getItemDamage()) {
-				if(var3.checkNoEntityCollision(this.doubleSlab.getCollisionBoundingBoxFromPool(var3, var4, var5, var6)) && var3.setBlock(var4, var5, var6, this.doubleSlab.blockID, var13, 3)) {
-					var3.playSoundEffect((double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), this.doubleSlab.stepSound.getPlaceSound(), (this.doubleSlab.stepSound.getVolume() + 1.0F) / 2.0F, this.doubleSlab.stepSound.getPitch() * 0.8F);
-					--var1.stackSize;
+
+			if ((par7 == 1 && !var14 || par7 == 0 && var14) && var11 == this.theHalfSlab.blockID && var13 == par1ItemStack.getItemDamage()) {
+				if (par3World.checkNoEntityCollision(this.doubleSlab.getCollisionBoundingBoxFromPool(par3World, par4, par5, par6)) && par3World.setBlock(par4, par5, par6, this.doubleSlab.blockID, var13, 3)) {
+					par3World.playSoundEffect((double)((float)par4 + 0.5F), (double)((float)par5 + 0.5F), (double)((float)par6 + 0.5F), this.doubleSlab.stepSound.getPlaceSound(), (this.doubleSlab.stepSound.getVolume() + 1.0F) / 2.0F, this.doubleSlab.stepSound.getPitch() * 0.8F);
+					--par1ItemStack.stackSize;
 				}
 
 				return true;
 			} else {
-				return this.func_77888_a(var1, var2, var3, var4, var5, var6, var7) ? true : super.onItemUse(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10);
+				return this.func_77888_a(par1ItemStack, par2EntityPlayer, par3World, par4, par5, par6, par7) ? true : super.onItemUse(par1ItemStack, par2EntityPlayer, par3World, par4, par5, par6, par7, par8, par9, par10);
 			}
 		}
 	}
 
-	public boolean canPlaceItemBlockOnSide(World var1, int var2, int var3, int var4, int var5, EntityPlayer var6, ItemStack var7) {
-		int var8 = var2;
-		int var9 = var3;
-		int var10 = var4;
-		int var11 = var1.getBlockId(var2, var3, var4);
-		int var12 = var1.getBlockMetadata(var2, var3, var4);
+	/**
+	 * Returns true if the given ItemBlock can be placed on the given side of the given block position.
+	 */
+	public boolean canPlaceItemBlockOnSide(World par1World, int par2, int par3, int par4, int par5, EntityPlayer par6EntityPlayer, ItemStack par7ItemStack) {
+		int var8 = par2;
+		int var9 = par3;
+		int var10 = par4;
+		int var11 = par1World.getBlockId(par2, par3, par4);
+		int var12 = par1World.getBlockMetadata(par2, par3, par4);
 		int var13 = var12 & 7;
 		boolean var14 = (var12 & 8) != 0;
-		if((var5 == 1 && !var14 || var5 == 0 && var14) && var11 == this.theHalfSlab.blockID && var13 == var7.getItemDamage()) {
+
+		if ((par5 == 1 && !var14 || par5 == 0 && var14) && var11 == this.theHalfSlab.blockID && var13 == par7ItemStack.getItemDamage()) {
 			return true;
 		} else {
-			if(var5 == 0) {
-				--var3;
-			}
-
-			if(var5 == 1) {
-				++var3;
-			}
-
-			if(var5 == 2) {
-				--var4;
-			}
-
-			if(var5 == 3) {
-				++var4;
-			}
-
-			if(var5 == 4) {
-				--var2;
-			}
-
-			if(var5 == 5) {
-				++var2;
-			}
-
-			var11 = var1.getBlockId(var2, var3, var4);
-			var12 = var1.getBlockMetadata(var2, var3, var4);
+			if (par5 == 0) {
+				--par3;
+			}
+
+			if (par5 == 1) {
+				++par3;
+			}
+
+			if (par5 == 2) {
+				--par4;
+			}
+
+			if (par5 == 3) {
+				++par4;
+			}
+
+			if (par5 == 4) {
+				--par2;
+			}
+
+			if (par5 == 5) {
+				++par2;
+			}
+
+			var11 = par1World.getBlockId(par2, par3, par4);
+			var12 = par1World.getBlockMetadata(par2, par3, par4);
 			var13 = var12 & 7;
 			var14 = (var12 & 8) != 0;
-			return var11 == this.theHalfSlab.blockID && var13 == var7.getItemDamage() ? true : super.canPlaceItemBlockOnSide(var1, var8, var9, var10, var5, var6, var7);
+			return var11 == this.theHalfSlab.blockID && var13 == par7ItemStack.getItemDamage() ? true : super.canPlaceItemBlockOnSide(par1World, var8, var9, var10, par5, par6EntityPlayer, par7ItemStack);
 		}
 	}
 
-	private boolean func_77888_a(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7) {
-		if(var7 == 0) {
-			--var5;
-		}
-
-		if(var7 == 1) {
-			++var5;
-		}
-
-		if(var7 == 2) {
-			--var6;
-		}
-
-		if(var7 == 3) {
-			++var6;
-		}
-
-		if(var7 == 4) {
-			--var4;
-		}
-
-		if(var7 == 5) {
-			++var4;
-		}
-
-		int var8 = var3.getBlockId(var4, var5, var6);
-		int var9 = var3.getBlockMetadata(var4, var5, var6);
+	private boolean func_77888_a(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7) {
+		if (par7 == 0) {
+			--par5;
+		}
+
+		if (par7 == 1) {
+			++par5;
+		}
+
+		if (par7 == 2) {
+			--par6;
+		}
+
+		if (par7 == 3) {
+			++par6;
+		}
+
+		if (par7 == 4) {
+			--par4;
+		}
+
+		if (par7 == 5) {
+			++par4;
+		}
+
+		int var8 = par3World.getBlockId(par4, par5, par6);
+		int var9 = par3World.getBlockMetadata(par4, par5, par6);
 		int var10 = var9 & 7;
-		if(var8 == this.theHalfSlab.blockID && var10 == var1.getItemDamage()) {
-			if(var3.checkNoEntityCollision(this.doubleSlab.getCollisionBoundingBoxFromPool(var3, var4, var5, var6)) && var3.setBlock(var4, var5, var6, this.doubleSlab.blockID, var10, 3)) {
-				var3.playSoundEffect((double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), this.doubleSlab.stepSound.getPlaceSound(), (this.doubleSlab.stepSound.getVolume() + 1.0F) / 2.0F, this.doubleSlab.stepSound.getPitch() * 0.8F);
-				--var1.stackSize;
+
+		if (var8 == this.theHalfSlab.blockID && var10 == par1ItemStack.getItemDamage()) {
+			if (par3World.checkNoEntityCollision(this.doubleSlab.getCollisionBoundingBoxFromPool(par3World, par4, par5, par6)) && par3World.setBlock(par4, par5, par6, this.doubleSlab.blockID, var10, 3)) {
+				par3World.playSoundEffect((double)((float)par4 + 0.5F), (double)((float)par5 + 0.5F), (double)((float)par6 + 0.5F), this.doubleSlab.stepSound.getPlaceSound(), (this.doubleSlab.stepSound.getVolume() + 1.0F) / 2.0F, this.doubleSlab.stepSound.getPitch() * 0.8F);
+				--par1ItemStack.stackSize;
 			}
 
 			return true;
