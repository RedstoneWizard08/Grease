--- net/minecraft/src/MapGenNetherBridge.java
+++ net/minecraft/src/MapGenNetherBridge.java
@@ -4,13 +4,13 @@
 import java.util.List;
 
 public class MapGenNetherBridge extends MapGenStructure {
-	private List e = new ArrayList();
+	private List spawnList = new ArrayList();
 
 	public MapGenNetherBridge() {
-		this.e.add(new SpawnListEntry(EntityBlaze.class, 10, 2, 3));
-		this.e.add(new SpawnListEntry(EntityPigZombie.class, 5, 4, 4));
-		this.e.add(new SpawnListEntry(EntitySkeleton.class, 10, 4, 4));
-		this.e.add(new SpawnListEntry(EntityMagmaCube.class, 3, 4, 4));
+		this.spawnList.add(new SpawnListEntry(EntityBlaze.class, 10, 2, 3));
+		this.spawnList.add(new SpawnListEntry(EntityPigZombie.class, 5, 4, 4));
+		this.spawnList.add(new SpawnListEntry(EntitySkeleton.class, 10, 4, 4));
+		this.spawnList.add(new SpawnListEntry(EntityMagmaCube.class, 3, 4, 4));
 	}
 
 	public String func_143025_a() {
@@ -18,18 +18,18 @@
 	}
 
 	public List getSpawnList() {
-		return this.e;
-	}
-
-	protected boolean canSpawnStructureAtCoords(int var1, int var2) {
-		int var3 = var1 >> 4;
-		int var4 = var2 >> 4;
-		this.b.setSeed((long)(var3 ^ var4 << 4) ^ this.worldObj.getSeed());
-		this.b.nextInt();
-		return this.b.nextInt(3) != 0 ? false : (var1 != (var3 << 4) + 4 + this.b.nextInt(8) ? false : var2 == (var4 << 4) + 4 + this.b.nextInt(8));
-	}
-
-	protected StructureStart getStructureStart(int var1, int var2) {
-		return new StructureNetherBridgeStart(this.worldObj, this.b, var1, var2);
+		return this.spawnList;
+	}
+
+	protected boolean canSpawnStructureAtCoords(int par1, int par2) {
+		int var3 = par1 >> 4;
+		int var4 = par2 >> 4;
+		this.rand.setSeed((long)(var3 ^ var4 << 4) ^ this.worldObj.getSeed());
+		this.rand.nextInt();
+		return this.rand.nextInt(3) != 0 ? false : (par1 != (var3 << 4) + 4 + this.rand.nextInt(8) ? false : par2 == (var4 << 4) + 4 + this.rand.nextInt(8));
+	}
+
+	protected StructureStart getStructureStart(int par1, int par2) {
+		return new StructureNetherBridgeStart(this.worldObj, this.rand, par1, par2);
 	}
 }
