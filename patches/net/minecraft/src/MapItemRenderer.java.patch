--- net/minecraft/src/MapItemRenderer.java
+++ net/minecraft/src/MapItemRenderer.java
@@ -10,32 +10,33 @@
 	private GameSettings gameSettings;
 	private final ResourceLocation field_111276_e;
 
-	public MapItemRenderer(GameSettings var1, TextureManager var2) {
-		this.gameSettings = var1;
+	public MapItemRenderer(GameSettings par1GameSettings, TextureManager par2TextureManager) {
+		this.gameSettings = par1GameSettings;
 		this.bufferedImage = new DynamicTexture(128, 128);
-		this.field_111276_e = var2.getDynamicTextureLocation("map", this.bufferedImage);
+		this.field_111276_e = par2TextureManager.getDynamicTextureLocation("map", this.bufferedImage);
 		this.intArray = this.bufferedImage.getTextureData();
 
-		for(int var4 = 0; var4 < this.intArray.length; ++var4) {
+		for (int var4 = 0; var4 < this.intArray.length; ++var4) {
 			this.intArray[var4] = 0;
 		}
-
 	}
 
-	public void renderMap(EntityPlayer var1, TextureManager var2, MapData var3) {
-		for(int var4 = 0; var4 < 16384; ++var4) {
-			byte var5 = var3.colors[var4];
-			if(var5 / 4 == 0) {
+	public void renderMap(EntityPlayer par1EntityPlayer, TextureManager par2TextureManager, MapData par3MapData) {
+		for (int var4 = 0; var4 < 16384; ++var4) {
+			byte var5 = par3MapData.colors[var4];
+
+			if (var5 / 4 == 0) {
 				this.intArray[var4] = (var4 + var4 / 128 & 1) * 8 + 16 << 24;
 			} else {
 				int var6 = MapColor.mapColorArray[var5 / 4].colorValue;
 				int var7 = var5 & 3;
 				short var8 = 220;
-				if(var7 == 2) {
+
+				if (var7 == 2) {
 					var8 = 255;
 				}
 
-				if(var7 == 0) {
+				if (var7 == 0) {
 					var8 = 180;
 				}
 
@@ -51,28 +52,28 @@
 		byte var16 = 0;
 		Tessellator var17 = Tessellator.instance;
 		float var18 = 0.0F;
-		var2.bindTexture(this.field_111276_e);
+		par2TextureManager.bindTexture(this.field_111276_e);
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glBlendFunc(GL11.GL_ONE, GL11.GL_ONE_MINUS_SRC_ALPHA);
 		GL11.glDisable(GL11.GL_ALPHA_TEST);
 		var17.startDrawingQuads();
-		var17.addVertexWithUV((double)((float)(var15 + 0) + var18), (double)((float)(var16 + 128) - var18), (double)-0.01F, 0.0D, 1.0D);
-		var17.addVertexWithUV((double)((float)(var15 + 128) - var18), (double)((float)(var16 + 128) - var18), (double)-0.01F, 1.0D, 1.0D);
-		var17.addVertexWithUV((double)((float)(var15 + 128) - var18), (double)((float)(var16 + 0) + var18), (double)-0.01F, 1.0D, 0.0D);
-		var17.addVertexWithUV((double)((float)(var15 + 0) + var18), (double)((float)(var16 + 0) + var18), (double)-0.01F, 0.0D, 0.0D);
+		var17.addVertexWithUV((double)((float)(var15 + 0) + var18), (double)((float)(var16 + 128) - var18), -0.009999999776482582D, 0.0D, 1.0D);
+		var17.addVertexWithUV((double)((float)(var15 + 128) - var18), (double)((float)(var16 + 128) - var18), -0.009999999776482582D, 1.0D, 1.0D);
+		var17.addVertexWithUV((double)((float)(var15 + 128) - var18), (double)((float)(var16 + 0) + var18), -0.009999999776482582D, 1.0D, 0.0D);
+		var17.addVertexWithUV((double)((float)(var15 + 0) + var18), (double)((float)(var16 + 0) + var18), -0.009999999776482582D, 0.0D, 0.0D);
 		var17.draw();
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
 		GL11.glDisable(GL11.GL_BLEND);
-		var2.bindTexture(field_111277_a);
+		par2TextureManager.bindTexture(field_111277_a);
 		int var19 = 0;
 
-		for(Iterator var20 = var3.g.values().iterator(); var20.hasNext(); ++var19) {
+		for (Iterator var20 = par3MapData.playersVisibleOnMap.values().iterator(); var20.hasNext(); ++var19) {
 			MapCoord var21 = (MapCoord)var20.next();
 			GL11.glPushMatrix();
 			GL11.glTranslatef((float)var15 + (float)var21.centerX / 2.0F + 64.0F, (float)var16 + (float)var21.centerZ / 2.0F + 64.0F, -0.02F);
 			GL11.glRotatef((float)(var21.iconRotation * 360) / 16.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glScalef(4.0F, 4.0F, 3.0F);
-			GL11.glTranslatef(-(2.0F / 16.0F), 2.0F / 16.0F, 0.0F);
+			GL11.glTranslatef(-0.125F, 0.125F, 0.0F);
 			float var22 = (float)(var21.iconSize % 4 + 0) / 4.0F;
 			float var12 = (float)(var21.iconSize / 4 + 0) / 4.0F;
 			float var13 = (float)(var21.iconSize % 4 + 1) / 4.0F;
