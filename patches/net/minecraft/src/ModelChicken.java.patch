--- net/minecraft/src/ModelChicken.java
+++ net/minecraft/src/ModelChicken.java
@@ -40,49 +40,57 @@
 		this.leftWing.setRotationPoint(4.0F, (float)(-3 + var1), 0.0F);
 	}
 
-	public void render(Entity var1, float var2, float var3, float var4, float var5, float var6, float var7) {
-		this.setRotationAngles(var2, var3, var4, var5, var6, var7, var1);
-		if(this.isChild) {
+	/**
+	 * Sets the models various rotation angles then renders the model.
+	 */
+	public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7) {
+		this.setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
+
+		if (this.isChild) {
 			float var8 = 2.0F;
 			GL11.glPushMatrix();
-			GL11.glTranslatef(0.0F, 5.0F * var7, 2.0F * var7);
-			this.head.render(var7);
-			this.bill.render(var7);
-			this.chin.render(var7);
+			GL11.glTranslatef(0.0F, 5.0F * par7, 2.0F * par7);
+			this.head.render(par7);
+			this.bill.render(par7);
+			this.chin.render(par7);
 			GL11.glPopMatrix();
 			GL11.glPushMatrix();
 			GL11.glScalef(1.0F / var8, 1.0F / var8, 1.0F / var8);
-			GL11.glTranslatef(0.0F, 24.0F * var7, 0.0F);
-			this.body.render(var7);
-			this.rightLeg.render(var7);
-			this.leftLeg.render(var7);
-			this.rightWing.render(var7);
-			this.leftWing.render(var7);
+			GL11.glTranslatef(0.0F, 24.0F * par7, 0.0F);
+			this.body.render(par7);
+			this.rightLeg.render(par7);
+			this.leftLeg.render(par7);
+			this.rightWing.render(par7);
+			this.leftWing.render(par7);
 			GL11.glPopMatrix();
 		} else {
-			this.head.render(var7);
-			this.bill.render(var7);
-			this.chin.render(var7);
-			this.body.render(var7);
-			this.rightLeg.render(var7);
-			this.leftLeg.render(var7);
-			this.rightWing.render(var7);
-			this.leftWing.render(var7);
+			this.head.render(par7);
+			this.bill.render(par7);
+			this.chin.render(par7);
+			this.body.render(par7);
+			this.rightLeg.render(par7);
+			this.leftLeg.render(par7);
+			this.rightWing.render(par7);
+			this.leftWing.render(par7);
 		}
-
 	}
 
-	public void setRotationAngles(float var1, float var2, float var3, float var4, float var5, float var6, Entity var7) {
-		this.head.rotateAngleX = var5 / (180.0F / (float)Math.PI);
-		this.head.rotateAngleY = var4 / (180.0F / (float)Math.PI);
+	/**
+	 * Sets the model's various rotation angles. For bipeds, par1 and par2 are used for animating the movement of arms and
+	 * legs, where par1 represents the time(so that arms and legs swing back and forth) and par2 represents how "far" arms
+	 * and legs can swing at most.
+	 */
+	public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity) {
+		this.head.rotateAngleX = par5 / (180F / (float)Math.PI);
+		this.head.rotateAngleY = par4 / (180F / (float)Math.PI);
 		this.bill.rotateAngleX = this.head.rotateAngleX;
 		this.bill.rotateAngleY = this.head.rotateAngleY;
 		this.chin.rotateAngleX = this.head.rotateAngleX;
 		this.chin.rotateAngleY = this.head.rotateAngleY;
-		this.body.rotateAngleX = (float)Math.PI * 0.5F;
-		this.rightLeg.rotateAngleX = MathHelper.cos(var1 * 0.6662F) * 1.4F * var2;
-		this.leftLeg.rotateAngleX = MathHelper.cos(var1 * 0.6662F + (float)Math.PI) * 1.4F * var2;
-		this.rightWing.rotateAngleZ = var3;
-		this.leftWing.rotateAngleZ = -var3;
+		this.body.rotateAngleX = ((float)Math.PI / 2F);
+		this.rightLeg.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
+		this.leftLeg.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
+		this.rightWing.rotateAngleZ = par3;
+		this.leftWing.rotateAngleZ = -par3;
 	}
 }
