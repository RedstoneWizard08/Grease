--- net/minecraft/src/ModelGhast.java
+++ net/minecraft/src/ModelGhast.java
@@ -14,7 +14,7 @@
 		this.body.rotationPointY += (float)(24 + var1);
 		Random var2 = new Random(1660L);
 
-		for(int var3 = 0; var3 < this.tentacles.length; ++var3) {
+		for (int var3 = 0; var3 < this.tentacles.length; ++var3) {
 			this.tentacles[var3] = new ModelRenderer(this, 0, 0);
 			float var4 = (((float)(var3 % 3) - (float)(var3 / 3 % 2) * 0.5F + 0.25F) / 2.0F * 2.0F - 1.0F) * 5.0F;
 			float var5 = ((float)(var3 / 3) / 2.0F * 2.0F - 1.0F) * 5.0F;
@@ -24,27 +24,33 @@
 			this.tentacles[var3].rotationPointZ = var5;
 			this.tentacles[var3].rotationPointY = (float)(31 + var1);
 		}
-
 	}
 
-	public void setRotationAngles(float var1, float var2, float var3, float var4, float var5, float var6, Entity var7) {
-		for(int var8 = 0; var8 < this.tentacles.length; ++var8) {
-			this.tentacles[var8].rotateAngleX = 0.2F * MathHelper.sin(var3 * 0.3F + (float)var8) + 0.4F;
+	/**
+	 * Sets the model's various rotation angles. For bipeds, par1 and par2 are used for animating the movement of arms and
+	 * legs, where par1 represents the time(so that arms and legs swing back and forth) and par2 represents how "far" arms
+	 * and legs can swing at most.
+	 */
+	public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity) {
+		for (int var8 = 0; var8 < this.tentacles.length; ++var8) {
+			this.tentacles[var8].rotateAngleX = 0.2F * MathHelper.sin(par3 * 0.3F + (float)var8) + 0.4F;
 		}
-
 	}
 
-	public void render(Entity var1, float var2, float var3, float var4, float var5, float var6, float var7) {
-		this.setRotationAngles(var2, var3, var4, var5, var6, var7, var1);
+	/**
+	 * Sets the models various rotation angles then renders the model.
+	 */
+	public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7) {
+		this.setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
 		GL11.glPushMatrix();
 		GL11.glTranslatef(0.0F, 0.6F, 0.0F);
-		this.body.render(var7);
+		this.body.render(par7);
 		ModelRenderer[] var8 = this.tentacles;
 		int var9 = var8.length;
 
-		for(int var10 = 0; var10 < var9; ++var10) {
+		for (int var10 = 0; var10 < var9; ++var10) {
 			ModelRenderer var11 = var8[var10];
-			var11.render(var7);
+			var11.render(par7);
 		}
 
 		GL11.glPopMatrix();
