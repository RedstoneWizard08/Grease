--- net/minecraft/src/ModelSilverfish.java
+++ net/minecraft/src/ModelSilverfish.java
@@ -1,21 +1,30 @@
 package net.minecraft.src;
 
 public class ModelSilverfish extends ModelBase {
+
+	/** The body parts of the silverfish's model. */
 	private ModelRenderer[] silverfishBodyParts = new ModelRenderer[7];
+
+	/** The wings (dust-looking sprites) on the silverfish's model. */
 	private ModelRenderer[] silverfishWings;
 	private float[] field_78170_c = new float[7];
-	private static final int[][] silverfishBoxLength = new int[][]{{3, 2, 2}, {4, 3, 2}, {6, 4, 3}, {3, 3, 3}, {2, 2, 3}, {2, 1, 2}, {1, 1, 2}};
-	private static final int[][] silverfishTexturePositions = new int[][]{{0, 0}, {0, 4}, {0, 9}, {0, 16}, {0, 22}, {11, 0}, {13, 4}};
+
+	/** The widths, heights, and lengths for the silverfish model boxes. */
+	private static final int[][] silverfishBoxLength = new int[][] {{3, 2, 2}, {4, 3, 2}, {6, 4, 3}, {3, 3, 3}, {2, 2, 3}, {2, 1, 2}, {1, 1, 2}};
+
+	/** The texture positions for the silverfish's model's boxes. */
+	private static final int[][] silverfishTexturePositions = new int[][] {{0, 0}, {0, 4}, {0, 9}, {0, 16}, {0, 22}, {11, 0}, {13, 4}};
 
 	public ModelSilverfish() {
 		float var1 = -3.5F;
 
-		for(int var2 = 0; var2 < this.silverfishBodyParts.length; ++var2) {
+		for (int var2 = 0; var2 < this.silverfishBodyParts.length; ++var2) {
 			this.silverfishBodyParts[var2] = new ModelRenderer(this, silverfishTexturePositions[var2][0], silverfishTexturePositions[var2][1]);
 			this.silverfishBodyParts[var2].addBox((float)silverfishBoxLength[var2][0] * -0.5F, 0.0F, (float)silverfishBoxLength[var2][2] * -0.5F, silverfishBoxLength[var2][0], silverfishBoxLength[var2][1], silverfishBoxLength[var2][2]);
 			this.silverfishBodyParts[var2].setRotationPoint(0.0F, (float)(24 - silverfishBoxLength[var2][1]), var1);
 			this.field_78170_c[var2] = var1;
-			if(var2 < this.silverfishBodyParts.length - 1) {
+
+			if (var2 < this.silverfishBodyParts.length - 1) {
 				var1 += (float)(silverfishBoxLength[var2][2] + silverfishBoxLength[var2 + 1][2]) * 0.5F;
 			}
 		}
@@ -32,24 +41,31 @@
 		this.silverfishWings[2].setRotationPoint(0.0F, 19.0F, this.field_78170_c[1]);
 	}
 
-	public void render(Entity var1, float var2, float var3, float var4, float var5, float var6, float var7) {
-		this.setRotationAngles(var2, var3, var4, var5, var6, var7, var1);
-
+	/**
+	 * Sets the models various rotation angles then renders the model.
+	 */
+	public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7) {
+		this.setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
 		int var8;
-		for(var8 = 0; var8 < this.silverfishBodyParts.length; ++var8) {
-			this.silverfishBodyParts[var8].render(var7);
-		}
-
-		for(var8 = 0; var8 < this.silverfishWings.length; ++var8) {
-			this.silverfishWings[var8].render(var7);
-		}
-
+
+		for (var8 = 0; var8 < this.silverfishBodyParts.length; ++var8) {
+			this.silverfishBodyParts[var8].render(par7);
+		}
+
+		for (var8 = 0; var8 < this.silverfishWings.length; ++var8) {
+			this.silverfishWings[var8].render(par7);
+		}
 	}
 
-	public void setRotationAngles(float var1, float var2, float var3, float var4, float var5, float var6, Entity var7) {
-		for(int var8 = 0; var8 < this.silverfishBodyParts.length; ++var8) {
-			this.silverfishBodyParts[var8].rotateAngleY = MathHelper.cos(var3 * 0.9F + (float)var8 * 0.15F * (float)Math.PI) * (float)Math.PI * 0.05F * (float)(1 + Math.abs(var8 - 2));
-			this.silverfishBodyParts[var8].rotationPointX = MathHelper.sin(var3 * 0.9F + (float)var8 * 0.15F * (float)Math.PI) * (float)Math.PI * 0.2F * (float)Math.abs(var8 - 2);
+	/**
+	 * Sets the model's various rotation angles. For bipeds, par1 and par2 are used for animating the movement of arms and
+	 * legs, where par1 represents the time(so that arms and legs swing back and forth) and par2 represents how "far" arms
+	 * and legs can swing at most.
+	 */
+	public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity) {
+		for (int var8 = 0; var8 < this.silverfishBodyParts.length; ++var8) {
+			this.silverfishBodyParts[var8].rotateAngleY = MathHelper.cos(par3 * 0.9F + (float)var8 * 0.15F * (float)Math.PI) * (float)Math.PI * 0.05F * (float)(1 + Math.abs(var8 - 2));
+			this.silverfishBodyParts[var8].rotationPointX = MathHelper.sin(par3 * 0.9F + (float)var8 * 0.15F * (float)Math.PI) * (float)Math.PI * 0.2F * (float)Math.abs(var8 - 2);
 		}
 
 		this.silverfishWings[0].rotateAngleY = this.silverfishBodyParts[2].rotateAngleY;
