--- net/minecraft/src/Packet0KeepAlive.java
+++ net/minecraft/src/Packet0KeepAlive.java
@@ -7,37 +7,59 @@
 public class Packet0KeepAlive extends Packet {
 	public int randomId;
 
-	public Packet0KeepAlive() {
-	}
-
-	public Packet0KeepAlive(int var1) {
-		this.randomId = var1;
-	}
-
-	public void processPacket(NetHandler var1) {
-		var1.handleKeepAlive(this);
-	}
-
-	public void readPacketData(DataInput var1) throws IOException {
-		this.randomId = var1.readInt();
-	}
-
-	public void writePacketData(DataOutput var1) throws IOException {
-		var1.writeInt(this.randomId);
-	}
-
+	public Packet0KeepAlive() {}
+
+	public Packet0KeepAlive(int par1) {
+		this.randomId = par1;
+	}
+
+	/**
+	 * Passes this Packet on to the NetHandler for processing.
+	 */
+	public void processPacket(NetHandler par1NetHandler) {
+		par1NetHandler.handleKeepAlive(this);
+	}
+
+	/**
+	 * Abstract. Reads the raw packet data from the data stream.
+	 */
+	public void readPacketData(DataInput par1DataInput) throws IOException {
+		this.randomId = par1DataInput.readInt();
+	}
+
+	/**
+	 * Abstract. Writes the raw packet data to the data stream.
+	 */
+	public void writePacketData(DataOutput par1DataOutput) throws IOException {
+		par1DataOutput.writeInt(this.randomId);
+	}
+
+	/**
+	 * Abstract. Return the size of the packet (not counting the header).
+	 */
 	public int getPacketSize() {
 		return 4;
 	}
 
+	/**
+	 * only false for the abstract Packet class, all real packets return true
+	 */
 	public boolean isRealPacket() {
 		return true;
 	}
 
-	public boolean containsSameEntityIDAs(Packet var1) {
+	/**
+	 * eg return packet30entity.entityId == entityId; WARNING : will throw if you compare a packet to a different packet
+	 * class
+	 */
+	public boolean containsSameEntityIDAs(Packet par1Packet) {
 		return true;
 	}
 
+	/**
+	 * If this returns true, the packet may be processed on any thread; otherwise it is queued for the main thread to
+	 * handle.
+	 */
 	public boolean canProcessAsync() {
 		return true;
 	}
