--- net/minecraft/src/Packet108EnchantItem.java
+++ net/minecraft/src/Packet108EnchantItem.java
@@ -6,30 +6,45 @@
 
 public class Packet108EnchantItem extends Packet {
 	public int windowId;
+
+	/**
+	 * The position of the enchantment on the enchantment table window, starting with 0 as the topmost one.
+	 */
 	public int enchantment;
 
-	public Packet108EnchantItem() {
-	}
-
-	public Packet108EnchantItem(int var1, int var2) {
-		this.windowId = var1;
-		this.enchantment = var2;
-	}
-
-	public void processPacket(NetHandler var1) {
-		var1.handleEnchantItem(this);
-	}
-
-	public void readPacketData(DataInput var1) throws IOException {
-		this.windowId = var1.readByte();
-		this.enchantment = var1.readByte();
-	}
-
-	public void writePacketData(DataOutput var1) throws IOException {
-		var1.writeByte(this.windowId);
-		var1.writeByte(this.enchantment);
-	}
-
+	public Packet108EnchantItem() {}
+
+	public Packet108EnchantItem(int par1, int par2) {
+		this.windowId = par1;
+		this.enchantment = par2;
+	}
+
+	/**
+	 * Passes this Packet on to the NetHandler for processing.
+	 */
+	public void processPacket(NetHandler par1NetHandler) {
+		par1NetHandler.handleEnchantItem(this);
+	}
+
+	/**
+	 * Abstract. Reads the raw packet data from the data stream.
+	 */
+	public void readPacketData(DataInput par1DataInput) throws IOException {
+		this.windowId = par1DataInput.readByte();
+		this.enchantment = par1DataInput.readByte();
+	}
+
+	/**
+	 * Abstract. Writes the raw packet data to the data stream.
+	 */
+	public void writePacketData(DataOutput par1DataOutput) throws IOException {
+		par1DataOutput.writeByte(this.windowId);
+		par1DataOutput.writeByte(this.enchantment);
+	}
+
+	/**
+	 * Abstract. Return the size of the packet (not counting the header).
+	 */
 	public int getPacketSize() {
 		return 2;
 	}
