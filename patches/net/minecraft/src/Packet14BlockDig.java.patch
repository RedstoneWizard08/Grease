--- net/minecraft/src/Packet14BlockDig.java
+++ net/minecraft/src/Packet14BlockDig.java
@@ -5,43 +5,64 @@
 import java.io.IOException;
 
 public class Packet14BlockDig extends Packet {
+
+	/** Block X position. */
 	public int xPosition;
+
+	/** Block Y position. */
 	public int yPosition;
+
+	/** Block Z position. */
 	public int zPosition;
+
+	/** Punched face of the block. */
 	public int face;
+
+	/** Status of the digging (started, ongoing, broken). */
 	public int status;
 
-	public Packet14BlockDig() {
-	}
-
-	public Packet14BlockDig(int var1, int var2, int var3, int var4, int var5) {
-		this.status = var1;
-		this.xPosition = var2;
-		this.yPosition = var3;
-		this.zPosition = var4;
-		this.face = var5;
-	}
-
-	public void readPacketData(DataInput var1) throws IOException {
-		this.status = var1.readUnsignedByte();
-		this.xPosition = var1.readInt();
-		this.yPosition = var1.readUnsignedByte();
-		this.zPosition = var1.readInt();
-		this.face = var1.readUnsignedByte();
-	}
-
-	public void writePacketData(DataOutput var1) throws IOException {
-		var1.write(this.status);
-		var1.writeInt(this.xPosition);
-		var1.write(this.yPosition);
-		var1.writeInt(this.zPosition);
-		var1.write(this.face);
-	}
-
-	public void processPacket(NetHandler var1) {
-		var1.handleBlockDig(this);
-	}
-
+	public Packet14BlockDig() {}
+
+	public Packet14BlockDig(int par1, int par2, int par3, int par4, int par5) {
+		this.status = par1;
+		this.xPosition = par2;
+		this.yPosition = par3;
+		this.zPosition = par4;
+		this.face = par5;
+	}
+
+	/**
+	 * Abstract. Reads the raw packet data from the data stream.
+	 */
+	public void readPacketData(DataInput par1DataInput) throws IOException {
+		this.status = par1DataInput.readUnsignedByte();
+		this.xPosition = par1DataInput.readInt();
+		this.yPosition = par1DataInput.readUnsignedByte();
+		this.zPosition = par1DataInput.readInt();
+		this.face = par1DataInput.readUnsignedByte();
+	}
+
+	/**
+	 * Abstract. Writes the raw packet data to the data stream.
+	 */
+	public void writePacketData(DataOutput par1DataOutput) throws IOException {
+		par1DataOutput.write(this.status);
+		par1DataOutput.writeInt(this.xPosition);
+		par1DataOutput.write(this.yPosition);
+		par1DataOutput.writeInt(this.zPosition);
+		par1DataOutput.write(this.face);
+	}
+
+	/**
+	 * Passes this Packet on to the NetHandler for processing.
+	 */
+	public void processPacket(NetHandler par1NetHandler) {
+		par1NetHandler.handleBlockDig(this);
+	}
+
+	/**
+	 * Abstract. Return the size of the packet (not counting the header).
+	 */
 	public int getPacketSize() {
 		return 11;
 	}
