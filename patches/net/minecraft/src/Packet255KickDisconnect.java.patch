--- net/minecraft/src/Packet255KickDisconnect.java
+++ net/minecraft/src/Packet255KickDisconnect.java
@@ -5,36 +5,56 @@
 import java.io.IOException;
 
 public class Packet255KickDisconnect extends Packet {
-	public String a;
-
-	public Packet255KickDisconnect() {
-	}
-
-	public Packet255KickDisconnect(String var1) {
-		this.a = var1;
-	}
-
-	public void readPacketData(DataInput var1) throws IOException {
-		this.a = readString(var1, 256);
-	}
-
-	public void writePacketData(DataOutput var1) throws IOException {
-		writeString(this.a, var1);
-	}
-
-	public void processPacket(NetHandler var1) {
-		var1.handleKickDisconnect(this);
-	}
-
+
+	/** Displayed to the client when the connection terminates. */
+	public String reason;
+
+	public Packet255KickDisconnect() {}
+
+	public Packet255KickDisconnect(String par1Str) {
+		this.reason = par1Str;
+	}
+
+	/**
+	 * Abstract. Reads the raw packet data from the data stream.
+	 */
+	public void readPacketData(DataInput par1DataInput) throws IOException {
+		this.reason = readString(par1DataInput, 256);
+	}
+
+	/**
+	 * Abstract. Writes the raw packet data to the data stream.
+	 */
+	public void writePacketData(DataOutput par1DataOutput) throws IOException {
+		writeString(this.reason, par1DataOutput);
+	}
+
+	/**
+	 * Passes this Packet on to the NetHandler for processing.
+	 */
+	public void processPacket(NetHandler par1NetHandler) {
+		par1NetHandler.handleKickDisconnect(this);
+	}
+
+	/**
+	 * Abstract. Return the size of the packet (not counting the header).
+	 */
 	public int getPacketSize() {
-		return this.a.length();
+		return this.reason.length();
 	}
 
+	/**
+	 * only false for the abstract Packet class, all real packets return true
+	 */
 	public boolean isRealPacket() {
 		return true;
 	}
 
-	public boolean containsSameEntityIDAs(Packet var1) {
+	/**
+	 * eg return packet30entity.entityId == entityId; WARNING : will throw if you compare a packet to a different packet
+	 * class
+	 */
+	public boolean containsSameEntityIDAs(Packet par1Packet) {
 		return true;
 	}
 }
