--- net/minecraft/src/Packet38EntityStatus.java
+++ net/minecraft/src/Packet38EntityStatus.java
@@ -6,30 +6,43 @@
 
 public class Packet38EntityStatus extends Packet {
 	public int entityId;
+
+	/** 2 for hurt, 3 for dead */
 	public byte entityStatus;
 
-	public Packet38EntityStatus() {
-	}
-
-	public Packet38EntityStatus(int var1, byte var2) {
-		this.entityId = var1;
-		this.entityStatus = var2;
-	}
-
-	public void readPacketData(DataInput var1) throws IOException {
-		this.entityId = var1.readInt();
-		this.entityStatus = var1.readByte();
-	}
-
-	public void writePacketData(DataOutput var1) throws IOException {
-		var1.writeInt(this.entityId);
-		var1.writeByte(this.entityStatus);
-	}
-
-	public void processPacket(NetHandler var1) {
-		var1.handleEntityStatus(this);
-	}
-
+	public Packet38EntityStatus() {}
+
+	public Packet38EntityStatus(int par1, byte par2) {
+		this.entityId = par1;
+		this.entityStatus = par2;
+	}
+
+	/**
+	 * Abstract. Reads the raw packet data from the data stream.
+	 */
+	public void readPacketData(DataInput par1DataInput) throws IOException {
+		this.entityId = par1DataInput.readInt();
+		this.entityStatus = par1DataInput.readByte();
+	}
+
+	/**
+	 * Abstract. Writes the raw packet data to the data stream.
+	 */
+	public void writePacketData(DataOutput par1DataOutput) throws IOException {
+		par1DataOutput.writeInt(this.entityId);
+		par1DataOutput.writeByte(this.entityStatus);
+	}
+
+	/**
+	 * Passes this Packet on to the NetHandler for processing.
+	 */
+	public void processPacket(NetHandler par1NetHandler) {
+		par1NetHandler.handleEntityStatus(this);
+	}
+
+	/**
+	 * Abstract. Return the size of the packet (not counting the header).
+	 */
 	public int getPacketSize() {
 		return 5;
 	}
