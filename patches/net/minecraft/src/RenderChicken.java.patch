--- net/minecraft/src/RenderChicken.java
+++ net/minecraft/src/RenderChicken.java
@@ -3,41 +3,53 @@
 public class RenderChicken extends RenderLiving {
 	private static final ResourceLocation chickenTextures = new ResourceLocation("textures/entity/chicken.png");
 
-	public RenderChicken(ModelBase var1, float var2) {
-		super(var1, var2);
-	}
-
-	public void renderChicken(EntityChicken var1, double var2, double var4, double var6, float var8, float var9) {
-		super.doRenderLiving(var1, var2, var4, var6, var8, var9);
-	}
-
-	protected ResourceLocation getChickenTextures(EntityChicken var1) {
+	public RenderChicken(ModelBase par1ModelBase, float par2) {
+		super(par1ModelBase, par2);
+	}
+
+	public void renderChicken(EntityChicken par1EntityChicken, double par2, double par4, double par6, float par8, float par9) {
+		super.doRenderLiving(par1EntityChicken, par2, par4, par6, par8, par9);
+	}
+
+	protected ResourceLocation getChickenTextures(EntityChicken par1EntityChicken) {
 		return chickenTextures;
 	}
 
-	protected float getWingRotation(EntityChicken var1, float var2) {
-		float var3 = var1.field_70888_h + (var1.field_70886_e - var1.field_70888_h) * var2;
-		float var4 = var1.field_70884_g + (var1.destPos - var1.field_70884_g) * var2;
+	protected float getWingRotation(EntityChicken par1EntityChicken, float par2) {
+		float var3 = par1EntityChicken.field_70888_h + (par1EntityChicken.field_70886_e - par1EntityChicken.field_70888_h) * par2;
+		float var4 = par1EntityChicken.field_70884_g + (par1EntityChicken.destPos - par1EntityChicken.field_70884_g) * par2;
 		return (MathHelper.sin(var3) + 1.0F) * var4;
 	}
 
-	public void doRenderLiving(EntityLiving var1, double var2, double var4, double var6, float var8, float var9) {
-		this.renderChicken((EntityChicken)var1, var2, var4, var6, var8, var9);
-	}
-
-	protected float handleRotationFloat(EntityLivingBase var1, float var2) {
-		return this.getWingRotation((EntityChicken)var1, var2);
-	}
-
-	public void renderPlayer(EntityLivingBase var1, double var2, double var4, double var6, float var8, float var9) {
-		this.renderChicken((EntityChicken)var1, var2, var4, var6, var8, var9);
-	}
-
-	protected ResourceLocation getEntityTexture(Entity var1) {
-		return this.getChickenTextures((EntityChicken)var1);
-	}
-
-	public void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9) {
-		this.renderChicken((EntityChicken)var1, var2, var4, var6, var8, var9);
+	public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9) {
+		this.renderChicken((EntityChicken)par1EntityLiving, par2, par4, par6, par8, par9);
+	}
+
+	/**
+	 * Defines what float the third param in setRotationAngles of ModelBase is
+	 */
+	protected float handleRotationFloat(EntityLivingBase par1EntityLivingBase, float par2) {
+		return this.getWingRotation((EntityChicken)par1EntityLivingBase, par2);
+	}
+
+	public void renderPlayer(EntityLivingBase par1EntityLivingBase, double par2, double par4, double par6, float par8, float par9) {
+		this.renderChicken((EntityChicken)par1EntityLivingBase, par2, par4, par6, par8, par9);
+	}
+
+	/**
+	 * Returns the location of an entity's texture. Doesn't seem to be called unless you call Render.bindEntityTexture.
+	 */
+	protected ResourceLocation getEntityTexture(Entity par1Entity) {
+		return this.getChickenTextures((EntityChicken)par1Entity);
+	}
+
+	/**
+	 * Actually renders the given argument. This is a synthetic bridge method, always casting down its argument and then
+	 * handing it off to a worker function which does the actual work. In all probabilty, the class Render is generic
+	 * (Render<T extends Entity) and this method has signature public void doRender(T entity, double d, double d1,
+	 * double d2, float f, float f1). But JAD is pre 1.5 so doesn't do that.
+	 */
+	public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9) {
+		this.renderChicken((EntityChicken)par1Entity, par2, par4, par6, par8, par9);
 	}
 }
