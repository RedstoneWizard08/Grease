--- net/minecraft/src/RenderFallingSand.java
+++ net/minecraft/src/RenderFallingSand.java
@@ -9,51 +9,64 @@
 		this.shadowSize = 0.5F;
 	}
 
-	public void doRenderFallingSand(EntityFallingSand var1, double var2, double var4, double var6, float var8, float var9) {
-		World var10 = var1.getWorld();
-		Block var11 = Block.blocksList[var1.blockID];
-		if(var10.getBlockId(MathHelper.floor_double(var1.posX), MathHelper.floor_double(var1.posY), MathHelper.floor_double(var1.posZ)) != var1.blockID) {
+	/**
+	 * The actual render method that is used in doRender
+	 */
+	public void doRenderFallingSand(EntityFallingSand par1EntityFallingSand, double par2, double par4, double par6, float par8, float par9) {
+		World var10 = par1EntityFallingSand.getWorld();
+		Block var11 = Block.blocksList[par1EntityFallingSand.blockID];
+
+		if (var10.getBlockId(MathHelper.floor_double(par1EntityFallingSand.posX), MathHelper.floor_double(par1EntityFallingSand.posY), MathHelper.floor_double(par1EntityFallingSand.posZ)) != par1EntityFallingSand.blockID) {
 			GL11.glPushMatrix();
-			GL11.glTranslatef((float)var2, (float)var4, (float)var6);
-			this.bindEntityTexture(var1);
+			GL11.glTranslatef((float)par2, (float)par4, (float)par6);
+			this.bindEntityTexture(par1EntityFallingSand);
 			GL11.glDisable(GL11.GL_LIGHTING);
 			Tessellator var12;
-			if(var11 instanceof BlockAnvil && var11.getRenderType() == 35) {
-				this.sandRenderBlocks.blockAccess = var10;
-				var12 = Tessellator.instance;
-				var12.startDrawingQuads();
-				var12.setTranslation((double)((float)(-MathHelper.floor_double(var1.posX)) - 0.5F), (double)((float)(-MathHelper.floor_double(var1.posY)) - 0.5F), (double)((float)(-MathHelper.floor_double(var1.posZ)) - 0.5F));
-				this.sandRenderBlocks.renderBlockAnvilMetadata((BlockAnvil)var11, MathHelper.floor_double(var1.posX), MathHelper.floor_double(var1.posY), MathHelper.floor_double(var1.posZ), var1.metadata);
-				var12.setTranslation(0.0D, 0.0D, 0.0D);
-				var12.draw();
-			} else if(var11.getRenderType() == 27) {
-				this.sandRenderBlocks.blockAccess = var10;
-				var12 = Tessellator.instance;
-				var12.startDrawingQuads();
-				var12.setTranslation((double)((float)(-MathHelper.floor_double(var1.posX)) - 0.5F), (double)((float)(-MathHelper.floor_double(var1.posY)) - 0.5F), (double)((float)(-MathHelper.floor_double(var1.posZ)) - 0.5F));
-				this.sandRenderBlocks.renderBlockDragonEgg((BlockDragonEgg)var11, MathHelper.floor_double(var1.posX), MathHelper.floor_double(var1.posY), MathHelper.floor_double(var1.posZ));
-				var12.setTranslation(0.0D, 0.0D, 0.0D);
-				var12.draw();
-			} else if(var11 != null) {
+
+			if (var11 instanceof BlockAnvil && var11.getRenderType() == 35) {
+				this.sandRenderBlocks.blockAccess = var10;
+				var12 = Tessellator.instance;
+				var12.startDrawingQuads();
+				var12.setTranslation((double)((float)(-MathHelper.floor_double(par1EntityFallingSand.posX)) - 0.5F), (double)((float)(-MathHelper.floor_double(par1EntityFallingSand.posY)) - 0.5F), (double)((float)(-MathHelper.floor_double(par1EntityFallingSand.posZ)) - 0.5F));
+				this.sandRenderBlocks.renderBlockAnvilMetadata((BlockAnvil)var11, MathHelper.floor_double(par1EntityFallingSand.posX), MathHelper.floor_double(par1EntityFallingSand.posY), MathHelper.floor_double(par1EntityFallingSand.posZ), par1EntityFallingSand.metadata);
+				var12.setTranslation(0.0D, 0.0D, 0.0D);
+				var12.draw();
+			} else if (var11.getRenderType() == 27) {
+				this.sandRenderBlocks.blockAccess = var10;
+				var12 = Tessellator.instance;
+				var12.startDrawingQuads();
+				var12.setTranslation((double)((float)(-MathHelper.floor_double(par1EntityFallingSand.posX)) - 0.5F), (double)((float)(-MathHelper.floor_double(par1EntityFallingSand.posY)) - 0.5F), (double)((float)(-MathHelper.floor_double(par1EntityFallingSand.posZ)) - 0.5F));
+				this.sandRenderBlocks.renderBlockDragonEgg((BlockDragonEgg)var11, MathHelper.floor_double(par1EntityFallingSand.posX), MathHelper.floor_double(par1EntityFallingSand.posY), MathHelper.floor_double(par1EntityFallingSand.posZ));
+				var12.setTranslation(0.0D, 0.0D, 0.0D);
+				var12.draw();
+			} else if (var11 != null) {
 				this.sandRenderBlocks.setRenderBoundsFromBlock(var11);
-				this.sandRenderBlocks.renderBlockSandFalling(var11, var10, MathHelper.floor_double(var1.posX), MathHelper.floor_double(var1.posY), MathHelper.floor_double(var1.posZ), var1.metadata);
+				this.sandRenderBlocks.renderBlockSandFalling(var11, var10, MathHelper.floor_double(par1EntityFallingSand.posX), MathHelper.floor_double(par1EntityFallingSand.posY), MathHelper.floor_double(par1EntityFallingSand.posZ), par1EntityFallingSand.metadata);
 			}
 
 			GL11.glEnable(GL11.GL_LIGHTING);
 			GL11.glPopMatrix();
 		}
-
 	}
 
-	protected ResourceLocation getFallingSandTextures(EntityFallingSand var1) {
+	protected ResourceLocation getFallingSandTextures(EntityFallingSand par1EntityFallingSand) {
 		return TextureMap.locationBlocksTexture;
 	}
 
-	protected ResourceLocation getEntityTexture(Entity var1) {
-		return this.getFallingSandTextures((EntityFallingSand)var1);
+	/**
+	 * Returns the location of an entity's texture. Doesn't seem to be called unless you call Render.bindEntityTexture.
+	 */
+	protected ResourceLocation getEntityTexture(Entity par1Entity) {
+		return this.getFallingSandTextures((EntityFallingSand)par1Entity);
 	}
 
-	public void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9) {
-		this.doRenderFallingSand((EntityFallingSand)var1, var2, var4, var6, var8, var9);
+	/**
+	 * Actually renders the given argument. This is a synthetic bridge method, always casting down its argument and then
+	 * handing it off to a worker function which does the actual work. In all probabilty, the class Render is generic
+	 * (Render<T extends Entity) and this method has signature public void doRender(T entity, double d, double d1,
+	 * double d2, float f, float f1). But JAD is pre 1.5 so doesn't do that.
+	 */
+	public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9) {
+		this.doRenderFallingSand((EntityFallingSand)par1Entity, par2, par4, par6, par8, par9);
 	}
 }
