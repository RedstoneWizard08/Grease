--- net/minecraft/src/RenderItemFrame.java
+++ net/minecraft/src/RenderItemFrame.java
@@ -2,43 +2,48 @@
 
 import org.lwjgl.opengl.GL11;
 
+import org.spoutcraft.api.material.MaterialData;
+
 public class RenderItemFrame extends Render {
 	private static final ResourceLocation mapBackgroundTextures = new ResourceLocation("textures/map/map_background.png");
 	private final RenderBlocks renderBlocksInstance = new RenderBlocks();
 	private Icon field_94147_f;
 
-	public void updateIcons(IconRegister var1) {
-		this.field_94147_f = var1.registerIcon("itemframe_background");
+	public void updateIcons(IconRegister par1IconRegister) {
+		this.field_94147_f = par1IconRegister.registerIcon("itemframe_background");
 	}
 
-	public void func_82404_a(EntityItemFrame var1, double var2, double var4, double var6, float var8, float var9) {
+	public void func_82404_a(EntityItemFrame par1EntityItemFrame, double par2, double par4, double par6, float par8, float par9) {
 		GL11.glPushMatrix();
-		float var10 = (float)(var1.posX - var2) - 0.5F;
-		float var11 = (float)(var1.posY - var4) - 0.5F;
-		float var12 = (float)(var1.posZ - var6) - 0.5F;
-		int var13 = var1.xPosition + Direction.offsetX[var1.hangingDirection];
-		int var14 = var1.yPosition;
-		int var15 = var1.zPosition + Direction.offsetZ[var1.hangingDirection];
+		float var10 = (float)(par1EntityItemFrame.posX - par2) - 0.5F;
+		float var11 = (float)(par1EntityItemFrame.posY - par4) - 0.5F;
+		float var12 = (float)(par1EntityItemFrame.posZ - par6) - 0.5F;
+		int var13 = par1EntityItemFrame.xPosition + Direction.offsetX[par1EntityItemFrame.hangingDirection];
+		int var14 = par1EntityItemFrame.yPosition;
+		int var15 = par1EntityItemFrame.zPosition + Direction.offsetZ[par1EntityItemFrame.hangingDirection];
 		GL11.glTranslatef((float)var13 - var10, (float)var14 - var11, (float)var15 - var12);
-		this.renderFrameItemAsBlock(var1);
-		this.func_82402_b(var1);
+		this.renderFrameItemAsBlock(par1EntityItemFrame);
+		this.func_82402_b(par1EntityItemFrame);
 		GL11.glPopMatrix();
 	}
-
-	protected ResourceLocation func_110788_a(EntityItemFrame var1) {
+	
+	protected ResourceLocation func_110788_a(EntityItemFrame par1EntityItemFrame) {
 		return null;
 	}
 
-	private void renderFrameItemAsBlock(EntityItemFrame var1) {
+	/**
+	 * Render the item frame's item as a block.
+	 */
+	private void renderFrameItemAsBlock(EntityItemFrame par1EntityItemFrame) {
 		GL11.glPushMatrix();
-		GL11.glRotatef(var1.rotationYaw, 0.0F, 1.0F, 0.0F);
 		this.renderManager.renderEngine.bindTexture(TextureMap.locationBlocksTexture);
+		GL11.glRotatef(par1EntityItemFrame.rotationYaw, 0.0F, 1.0F, 0.0F);
 		Block var2 = Block.planks;
-		float var3 = 1.0F / 16.0F;
-		float var4 = 12.0F / 16.0F;
+		float var3 = 0.0625F;
+		float var4 = 0.75F;
 		float var5 = var4 / 2.0F;
 		GL11.glPushMatrix();
-		this.renderBlocksInstance.overrideBlockBounds(0.0D, (double)(0.5F - var5 + 1.0F / 16.0F), (double)(0.5F - var5 + 1.0F / 16.0F), (double)(var3 * 0.5F), (double)(0.5F + var5 - 1.0F / 16.0F), (double)(0.5F + var5 - 1.0F / 16.0F));
+		this.renderBlocksInstance.overrideBlockBounds(0.0D, (double)(0.5F - var5 + 0.0625F), (double)(0.5F - var5 + 0.0625F), (double)(var3 * 0.5F), (double)(0.5F + var5 - 0.0625F), (double)(0.5F + var5 - 0.0625F));
 		this.renderBlocksInstance.setOverrideBlockTexture(this.field_94147_f);
 		this.renderBlocksInstance.renderBlockAsItem(var2, 0, 1.0F);
 		this.renderBlocksInstance.clearOverrideBlockTexture();
@@ -66,28 +71,48 @@
 		GL11.glPopMatrix();
 	}
 
-	private void func_82402_b(EntityItemFrame var1) {
-		ItemStack var2 = var1.getDisplayedItem();
-		if(var2 != null) {
-			EntityItem var3 = new EntityItem(var1.worldObj, 0.0D, 0.0D, 0.0D, var2);
+	private void func_82402_b(EntityItemFrame par1EntityItemFrame) {
+		ItemStack var2 = par1EntityItemFrame.getDisplayedItem();
+
+		if (var2 != null) {
+			EntityItem var3 = new EntityItem(par1EntityItemFrame.worldObj, 0.0D, 0.0D, 0.0D, var2);
 			var3.getEntityItem().stackSize = 1;
 			var3.hoverStart = 0.0F;
+			// Spout Start
+			this.renderManager.renderEngine.bindTexture(TextureMap.locationBlocksTexture);
 			GL11.glPushMatrix();
-			GL11.glTranslatef(-0.453125F * (float)Direction.offsetX[var1.hangingDirection], -0.18F, -0.453125F * (float)Direction.offsetZ[var1.hangingDirection]);
-			GL11.glRotatef(180.0F + var1.rotationYaw, 0.0F, 1.0F, 0.0F);
-			GL11.glRotatef((float)(-90 * var1.getRotation()), 0.0F, 0.0F, 1.0F);
-			switch(var1.getRotation()) {
-			case 1:
-				GL11.glTranslatef(-0.16F, -0.16F, 0.0F);
-				break;
-			case 2:
-				GL11.glTranslatef(0.0F, -0.32F, 0.0F);
-				break;
-			case 3:
-				GL11.glTranslatef(0.16F, -0.16F, 0.0F);
-			}
-
-			if(var3.getEntityItem().getItem() == Item.map) {
+
+			if (var2.itemID == 318 && (MaterialData.getCustomBlock(var2.getItemDamage()) instanceof org.spoutcraft.api.material.Block)) {
+				if (par1EntityItemFrame.hangingDirection == 0) {
+					GL11.glTranslatef((-0.453125F * ((float)Direction.offsetX[par1EntityItemFrame.hangingDirection] + 0.25F)), -0.18F, -0.453125F * (float)Direction.offsetZ[par1EntityItemFrame.hangingDirection]);
+				} else if (par1EntityItemFrame.hangingDirection == 1) {
+					GL11.glTranslatef(-0.453125F * ((float)Direction.offsetX[par1EntityItemFrame.hangingDirection]), -0.18F, -0.453125F * ((float)Direction.offsetZ[par1EntityItemFrame.hangingDirection] + 0.25F));
+				} else if (par1EntityItemFrame.hangingDirection == 2) {
+					GL11.glTranslatef((-0.453125F * ((float)Direction.offsetX[par1EntityItemFrame.hangingDirection] - 0.25F)), -0.18F, -0.453125F * (float)Direction.offsetZ[par1EntityItemFrame.hangingDirection]);
+				} else if (par1EntityItemFrame.hangingDirection == 3) {
+					GL11.glTranslatef((-0.453125F * (float)Direction.offsetX[par1EntityItemFrame.hangingDirection]), -0.18F, -0.453125F * ((float)Direction.offsetZ[par1EntityItemFrame.hangingDirection] - 0.25F));
+				}
+			} else {
+			GL11.glTranslatef(-0.453125F * (float)Direction.offsetX[par1EntityItemFrame.hangingDirection], -0.18F, -0.453125F * (float)Direction.offsetZ[par1EntityItemFrame.hangingDirection]);
+			}
+			// Spout End
+			GL11.glRotatef(180.0F + par1EntityItemFrame.rotationYaw, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef((float)(-90 * par1EntityItemFrame.getRotation()), 0.0F, 0.0F, 1.0F);
+
+			switch (par1EntityItemFrame.getRotation()) {
+				case 1:
+					GL11.glTranslatef(-0.16F, -0.16F, 0.0F);
+					break;
+
+				case 2:
+					GL11.glTranslatef(0.0F, -0.32F, 0.0F);
+					break;
+
+				case 3:
+					GL11.glTranslatef(0.16F, -0.16F, 0.0F);
+			}
+
+			if (var3.getEntityItem().getItem() == Item.map) {
 				this.renderManager.renderEngine.bindTexture(mapBackgroundTextures);
 				Tessellator var4 = Tessellator.instance;
 				GL11.glRotatef(180.0F, 0.0F, 1.0F, 0.0F);
@@ -102,23 +127,25 @@
 				var4.addVertexWithUV((double)(128 + var5), (double)(0 - var5), 0.0D, 1.0D, 0.0D);
 				var4.addVertexWithUV((double)(0 - var5), (double)(0 - var5), 0.0D, 0.0D, 0.0D);
 				var4.draw();
-				MapData var6 = Item.map.getMapData(var3.getEntityItem(), var1.worldObj);
+				MapData var6 = Item.map.getMapData(var3.getEntityItem(), par1EntityItemFrame.worldObj);
 				GL11.glTranslatef(0.0F, 0.0F, -1.0F);
-				if(var6 != null) {
+
+				if (var6 != null) {
 					this.renderManager.itemRenderer.mapItemRenderer.renderMap((EntityPlayer)null, this.renderManager.renderEngine, var6);
 				}
 			} else {
-				if(var3.getEntityItem().getItem() == Item.compass) {
+				if (var3.getEntityItem().getItem() == Item.compass) {
 					TextureManager var11 = Minecraft.getMinecraft().getTextureManager();
 					var11.bindTexture(TextureMap.locationItemsTexture);
 					TextureAtlasSprite var13 = ((TextureMap)var11.getTexture(TextureMap.locationItemsTexture)).getAtlasSprite(Item.compass.getIconIndex(var3.getEntityItem()).getIconName());
-					if(var13 instanceof TextureCompass) {
+
+					if (var13 instanceof TextureCompass) {
 						TextureCompass var14 = (TextureCompass)var13;
 						double var7 = var14.currentAngle;
 						double var9 = var14.angleDelta;
 						var14.currentAngle = 0.0D;
 						var14.angleDelta = 0.0D;
-						var14.updateCompass(var1.worldObj, var1.posX, var1.posZ, (double)MathHelper.wrapAngleTo180_float((float)(180 + var1.hangingDirection * 90)), false, true);
+						var14.updateCompass(par1EntityItemFrame.worldObj, par1EntityItemFrame.posX, par1EntityItemFrame.posZ, (double)MathHelper.wrapAngleTo180_float((float)(180 + par1EntityItemFrame.hangingDirection * 90)), false, true);
 						var14.currentAngle = var7;
 						var14.angleDelta = var9;
 					}
@@ -127,9 +154,11 @@
 				RenderItem.renderInFrame = true;
 				RenderManager.instance.renderEntityWithPosYaw(var3, 0.0D, 0.0D, 0.0D, 0.0F, 0.0F);
 				RenderItem.renderInFrame = false;
-				if(var3.getEntityItem().getItem() == Item.compass) {
+
+				if (var3.getEntityItem().getItem() == Item.compass) {
 					TextureAtlasSprite var12 = ((TextureMap)Minecraft.getMinecraft().getTextureManager().getTexture(TextureMap.locationItemsTexture)).getAtlasSprite(Item.compass.getIconIndex(var3.getEntityItem()).getIconName());
-					if(var12.getFrameCount() > 0) {
+
+					if (var12.getFrameCount() > 0) {
 						var12.updateAnimation();
 					}
 				}
@@ -139,11 +168,20 @@
 		}
 	}
 
-	protected ResourceLocation getEntityTexture(Entity var1) {
-		return this.func_110788_a((EntityItemFrame)var1);
+	/**
+	 * Returns the location of an entity's texture. Doesn't seem to be called unless you call Render.bindEntityTexture.
+	 */
+	protected ResourceLocation getEntityTexture(Entity par1Entity) {
+		return this.func_110788_a((EntityItemFrame)par1Entity);
 	}
-
-	public void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9) {
-		this.func_82404_a((EntityItemFrame)var1, var2, var4, var6, var8, var9);
+	
+	/**
+	 * Actually renders the given argument. This is a synthetic bridge method, always casting down its argument and then
+	 * handing it off to a worker function which does the actual work. In all probabilty, the class Render is generic
+	 * (Render<T extends Entity) and this method has signature public void doRender(T entity, double d, double d1,
+	 * double d2, float f, float f1). But JAD is pre 1.5 so doesn't do that.
+	 */
+	public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9) {
+		this.func_82404_a((EntityItemFrame)par1Entity, par2, par4, par6, par8, par9);
 	}
 }
