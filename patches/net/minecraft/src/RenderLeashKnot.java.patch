--- net/minecraft/src/RenderLeashKnot.java
+++ net/minecraft/src/RenderLeashKnot.java
@@ -7,28 +7,37 @@
 	private static final ResourceLocation leashKnotTextures = new ResourceLocation("textures/entity/lead_knot.png");
 	private ModelLeashKnot leashKnotModel = new ModelLeashKnot();
 
-	public void func_110799_a(EntityLeashKnot var1, double var2, double var4, double var6, float var8, float var9) {
+	public void func_110799_a(EntityLeashKnot par1EntityLeashKnot, double par2, double par4, double par6, float par8, float par9) {
 		GL11.glPushMatrix();
 		GL11.glDisable(GL11.GL_CULL_FACE);
-		GL11.glTranslatef((float)var2, (float)var4, (float)var6);
-		float var10 = 1.0F / 16.0F;
+		GL11.glTranslatef((float)par2, (float)par4, (float)par6);
+		float var10 = 0.0625F;
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 		GL11.glScalef(-1.0F, -1.0F, 1.0F);
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
-		this.bindEntityTexture(var1);
-		this.leashKnotModel.render(var1, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, var10);
+		this.bindEntityTexture(par1EntityLeashKnot);
+		this.leashKnotModel.render(par1EntityLeashKnot, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, var10);
 		GL11.glPopMatrix();
 	}
 
-	protected ResourceLocation getLeashKnotTextures(EntityLeashKnot var1) {
+	protected ResourceLocation getLeashKnotTextures(EntityLeashKnot par1EntityLeashKnot) {
 		return leashKnotTextures;
 	}
 
-	protected ResourceLocation getEntityTexture(Entity var1) {
-		return this.getLeashKnotTextures((EntityLeashKnot)var1);
+	/**
+	 * Returns the location of an entity's texture. Doesn't seem to be called unless you call Render.bindEntityTexture.
+	 */
+	protected ResourceLocation getEntityTexture(Entity par1Entity) {
+		return this.getLeashKnotTextures((EntityLeashKnot)par1Entity);
 	}
 
-	public void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9) {
-		this.func_110799_a((EntityLeashKnot)var1, var2, var4, var6, var8, var9);
+	/**
+	 * Actually renders the given argument. This is a synthetic bridge method, always casting down its argument and then
+	 * handing it off to a worker function which does the actual work. In all probabilty, the class Render is generic
+	 * (Render<T extends Entity) and this method has signature public void doRender(T entity, double d, double d1,
+	 * double d2, float f, float f1). But JAD is pre 1.5 so doesn't do that.
+	 */
+	public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9) {
+		this.func_110799_a((EntityLeashKnot)par1Entity, par2, par4, par6, par8, par9);
 	}
 }
