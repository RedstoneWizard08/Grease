--- net/minecraft/src/RenderLightningBolt.java
+++ net/minecraft/src/RenderLightningBolt.java
@@ -4,7 +4,11 @@
 import org.lwjgl.opengl.GL11;
 
 public class RenderLightningBolt extends Render {
-	public void doRenderLightningBolt(EntityLightningBolt var1, double var2, double var4, double var6, float var8, float var9) {
+
+	/**
+	 * Actually renders the lightning bolt. This method is called through the doRender method.
+	 */
+	public void doRenderLightningBolt(EntityLightningBolt par1EntityLightningBolt, double par2, double par4, double par6, float par8, float par9) {
 		Tessellator var10 = Tessellator.instance;
 		GL11.glDisable(GL11.GL_TEXTURE_2D);
 		GL11.glDisable(GL11.GL_LIGHTING);
@@ -14,36 +18,38 @@
 		double[] var12 = new double[8];
 		double var13 = 0.0D;
 		double var15 = 0.0D;
-		Random var17 = new Random(var1.boltVertex);
+		Random var17 = new Random(par1EntityLightningBolt.boltVertex);
 
-		for(int var18 = 7; var18 >= 0; --var18) {
+		for (int var18 = 7; var18 >= 0; --var18) {
 			var11[var18] = var13;
 			var12[var18] = var15;
 			var13 += (double)(var17.nextInt(11) - 5);
 			var15 += (double)(var17.nextInt(11) - 5);
 		}
 
-		for(int var45 = 0; var45 < 4; ++var45) {
-			Random var46 = new Random(var1.boltVertex);
+		for (int var45 = 0; var45 < 4; ++var45) {
+			Random var46 = new Random(par1EntityLightningBolt.boltVertex);
 
-			for(int var19 = 0; var19 < 3; ++var19) {
+			for (int var19 = 0; var19 < 3; ++var19) {
 				int var20 = 7;
 				int var21 = 0;
-				if(var19 > 0) {
+
+				if (var19 > 0) {
 					var20 = 7 - var19;
 				}
 
-				if(var19 > 0) {
+				if (var19 > 0) {
 					var21 = var20 - 2;
 				}
 
 				double var22 = var11[var20] - var13;
 				double var24 = var12[var20] - var15;
 
-				for(int var26 = var20; var26 >= var21; --var26) {
+				for (int var26 = var20; var26 >= var21; --var26) {
 					double var27 = var22;
 					double var29 = var24;
-					if(var19 == 0) {
+
+					if (var19 == 0) {
 						var22 += (double)(var46.nextInt(11) - 5);
 						var24 += (double)(var46.nextInt(11) - 5);
 					} else {
@@ -55,38 +61,42 @@
 					float var31 = 0.5F;
 					var10.setColorRGBA_F(0.9F * var31, 0.9F * var31, 1.0F * var31, 0.3F);
 					double var32 = 0.1D + (double)var45 * 0.2D;
-					if(var19 == 0) {
+
+					if (var19 == 0) {
 						var32 *= (double)var26 * 0.1D + 1.0D;
 					}
 
 					double var34 = 0.1D + (double)var45 * 0.2D;
-					if(var19 == 0) {
+
+					if (var19 == 0) {
 						var34 *= (double)(var26 - 1) * 0.1D + 1.0D;
 					}
 
-					for(int var36 = 0; var36 < 5; ++var36) {
-						double var37 = var2 + 0.5D - var32;
-						double var39 = var6 + 0.5D - var32;
-						if(var36 == 1 || var36 == 2) {
+					for (int var36 = 0; var36 < 5; ++var36) {
+						double var37 = par2 + 0.5D - var32;
+						double var39 = par6 + 0.5D - var32;
+
+						if (var36 == 1 || var36 == 2) {
 							var37 += var32 * 2.0D;
 						}
 
-						if(var36 == 2 || var36 == 3) {
+						if (var36 == 2 || var36 == 3) {
 							var39 += var32 * 2.0D;
 						}
 
-						double var41 = var2 + 0.5D - var34;
-						double var43 = var6 + 0.5D - var34;
-						if(var36 == 1 || var36 == 2) {
+						double var41 = par2 + 0.5D - var34;
+						double var43 = par6 + 0.5D - var34;
+
+						if (var36 == 1 || var36 == 2) {
 							var41 += var34 * 2.0D;
 						}
 
-						if(var36 == 2 || var36 == 3) {
+						if (var36 == 2 || var36 == 3) {
 							var43 += var34 * 2.0D;
 						}
 
-						var10.addVertex(var41 + var22, var4 + (double)(var26 * 16), var43 + var24);
-						var10.addVertex(var37 + var27, var4 + (double)((var26 + 1) * 16), var39 + var29);
+						var10.addVertex(var41 + var22, par4 + (double)(var26 * 16), var43 + var24);
+						var10.addVertex(var37 + var27, par4 + (double)((var26 + 1) * 16), var39 + var29);
 					}
 
 					var10.draw();
@@ -99,15 +109,24 @@
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
 	}
 
-	protected ResourceLocation func_110805_a(EntityLightningBolt var1) {
+	protected ResourceLocation func_110805_a(EntityLightningBolt par1EntityLightningBolt) {
 		return null;
 	}
 
-	protected ResourceLocation getEntityTexture(Entity var1) {
-		return this.func_110805_a((EntityLightningBolt)var1);
+	/**
+	 * Returns the location of an entity's texture. Doesn't seem to be called unless you call Render.bindEntityTexture.
+	 */
+	protected ResourceLocation getEntityTexture(Entity par1Entity) {
+		return this.func_110805_a((EntityLightningBolt)par1Entity);
 	}
 
-	public void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9) {
-		this.doRenderLightningBolt((EntityLightningBolt)var1, var2, var4, var6, var8, var9);
+	/**
+	 * Actually renders the given argument. This is a synthetic bridge method, always casting down its argument and then
+	 * handing it off to a worker function which does the actual work. In all probabilty, the class Render is generic
+	 * (Render<T extends Entity) and this method has signature public void doRender(T entity, double d, double d1,
+	 * double d2, float f, float f1). But JAD is pre 1.5 so doesn't do that.
+	 */
+	public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9) {
+		this.doRenderLightningBolt((EntityLightningBolt)par1Entity, par2, par4, par6, par8, par9);
 	}
 }
