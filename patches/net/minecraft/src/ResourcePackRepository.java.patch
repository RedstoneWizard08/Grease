--- net/minecraft/src/ResourcePackRepository.java
+++ net/minecraft/src/ResourcePackRepository.java
@@ -6,56 +6,55 @@
 import java.io.FileFilter;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.Collection;
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 
 public class ResourcePackRepository {
-	protected static final FileFilter a = new ResourcePackRepositoryFilter();
-	private final File d;
+	protected static final FileFilter resourcePackFilter = new ResourcePackRepositoryFilter();
+	private final File dirResourcepacks;
 	public final ResourcePack rprDefaultResourcePack;
 	public final MetadataSerializer rprMetadataSerializer;
-	private List e = Lists.newArrayList();
-	private List f = Lists.newArrayList();
+	private List repositoryEntriesAll = Lists.newArrayList();
+	private List repositoryEntries = Lists.newArrayList();
 
-	public ResourcePackRepository(File var1, ResourcePack var2, MetadataSerializer var3, GameSettings var4) {
-		this.d = var1;
-		this.rprDefaultResourcePack = var2;
-		this.rprMetadataSerializer = var3;
+	public ResourcePackRepository(File par1File, ResourcePack par2ResourcePack, MetadataSerializer par3MetadataSerializer, GameSettings par4GameSettings) {
+		this.dirResourcepacks = par1File;
+		this.rprDefaultResourcePack = par2ResourcePack;
+		this.rprMetadataSerializer = par3MetadataSerializer;
 		this.fixDirResourcepacks();
 		this.updateRepositoryEntriesAll();
-		Iterator var5 = this.e.iterator();
+		Iterator var5 = this.repositoryEntriesAll.iterator();
 
-		while(var5.hasNext()) {
+		while (var5.hasNext()) {
 			ResourcePackRepositoryEntry var6 = (ResourcePackRepositoryEntry)var5.next();
-			if(var6.getResourcePackName().equals(var4.m)) {
-				this.f.add(var6);
+
+			if (var6.getResourcePackName().equals(par4GameSettings.skin)) {
+				this.repositoryEntries.add(var6);
 			}
 		}
-
 	}
 
 	private void fixDirResourcepacks() {
-		if(!this.d.isDirectory()) {
-			this.d.delete();
-			this.d.mkdirs();
+		if (!this.dirResourcepacks.isDirectory()) {
+			this.dirResourcepacks.delete();
+			this.dirResourcepacks.mkdirs();
 		}
-
 	}
 
 	private List getResourcePackFiles() {
-		return this.d.isDirectory() ? Arrays.asList(this.d.listFiles(a)) : Collections.emptyList();
+		return this.dirResourcepacks.isDirectory() ? Arrays.asList(this.dirResourcepacks.listFiles(resourcePackFilter)) : Collections.emptyList();
 	}
 
 	public void updateRepositoryEntriesAll() {
 		ArrayList var1 = Lists.newArrayList();
 		Iterator var2 = this.getResourcePackFiles().iterator();
 
-		while(var2.hasNext()) {
+		while (var2.hasNext()) {
 			File var3 = (File)var2.next();
 			ResourcePackRepositoryEntry var4 = new ResourcePackRepositoryEntry(this, var3, (ResourcePackRepositoryFilter)null);
-			if(!this.e.contains(var4)) {
+
+			if (!this.repositoryEntriesAll.contains(var4)) {
 				try {
 					var4.updateResourcePack();
 					var1.add(var4);
@@ -63,39 +62,39 @@
 					var1.remove(var4);
 				}
 			} else {
-				var1.add(this.e.get(this.e.indexOf(var4)));
+				var1.add(this.repositoryEntriesAll.get(this.repositoryEntriesAll.indexOf(var4)));
 			}
 		}
 
-		this.e.removeAll(var1);
-		var2 = this.e.iterator();
+		this.repositoryEntriesAll.removeAll(var1);
+		var2 = this.repositoryEntriesAll.iterator();
 
-		while(var2.hasNext()) {
+		while (var2.hasNext()) {
 			ResourcePackRepositoryEntry var7 = (ResourcePackRepositoryEntry)var2.next();
 			var7.closeResourcePack();
 		}
 
-		this.e = var1;
+		this.repositoryEntriesAll = var1;
 	}
 
 	public List getRepositoryEntriesAll() {
-		return ImmutableList.copyOf((Collection)this.e);
+		return ImmutableList.copyOf(this.repositoryEntriesAll);
 	}
 
 	public List getRepositoryEntries() {
-		return ImmutableList.copyOf((Collection)this.f);
+		return ImmutableList.copyOf(this.repositoryEntries);
 	}
 
 	public String getResourcePackName() {
-		return this.f.isEmpty() ? "Default" : ((ResourcePackRepositoryEntry)this.f.get(0)).getResourcePackName();
+		return this.repositoryEntries.isEmpty() ? "Default" : ((ResourcePackRepositoryEntry)this.repositoryEntries.get(0)).getResourcePackName();
 	}
 
-	public void setRepositoryEntries(ResourcePackRepositoryEntry... var1) {
-		this.f.clear();
-		Collections.addAll(this.f, var1);
+	public void setRepositoryEntries(ResourcePackRepositoryEntry ... par1ArrayOfResourcePackRepositoryEntry) {
+		this.repositoryEntries.clear();
+		Collections.addAll(this.repositoryEntries, par1ArrayOfResourcePackRepositoryEntry);
 	}
 
 	public File getDirResourcepacks() {
-		return this.d;
+		return this.dirResourcepacks;
 	}
 }
