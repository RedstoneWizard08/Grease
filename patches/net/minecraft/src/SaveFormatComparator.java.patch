--- net/minecraft/src/SaveFormatComparator.java
+++ net/minecraft/src/SaveFormatComparator.java
@@ -1,32 +1,44 @@
 package net.minecraft.src;
 
 public class SaveFormatComparator implements Comparable {
-	private final String a;
-	private final String b;
+
+	/** the file name of this save */
+	private final String fileName;
+
+	/** the displayed name of this save file */
+	private final String displayName;
 	private final long lastTimePlayed;
 	private final long sizeOnDisk;
 	private final boolean requiresConversion;
+
+	/** Instance of EnumGameType. */
 	private final EnumGameType theEnumGameType;
 	private final boolean hardcore;
 	private final boolean cheatsEnabled;
 
-	public SaveFormatComparator(String var1, String var2, long var3, long var5, EnumGameType var7, boolean var8, boolean var9, boolean var10) {
-		this.a = var1;
-		this.b = var2;
-		this.lastTimePlayed = var3;
-		this.sizeOnDisk = var5;
-		this.theEnumGameType = var7;
-		this.requiresConversion = var8;
-		this.hardcore = var9;
-		this.cheatsEnabled = var10;
+	public SaveFormatComparator(String par1Str, String par2Str, long par3, long par5, EnumGameType par7EnumGameType, boolean par8, boolean par9, boolean par10) {
+		this.fileName = par1Str;
+		this.displayName = par2Str;
+		this.lastTimePlayed = par3;
+		this.sizeOnDisk = par5;
+		this.theEnumGameType = par7EnumGameType;
+		this.requiresConversion = par8;
+		this.hardcore = par9;
+		this.cheatsEnabled = par10;
 	}
 
+	/**
+	 * return the file name
+	 */
 	public String getFileName() {
-		return this.a;
+		return this.fileName;
 	}
 
+	/**
+	 * return the display name of the save
+	 */
 	public String getDisplayName() {
-		return this.b;
+		return this.displayName;
 	}
 
 	public boolean requiresConversion() {
@@ -37,10 +49,13 @@
 		return this.lastTimePlayed;
 	}
 
-	public int compareTo(SaveFormatComparator var1) {
-		return this.lastTimePlayed < var1.lastTimePlayed ? 1 : (this.lastTimePlayed > var1.lastTimePlayed ? -1 : this.a.compareTo(var1.a));
+	public int compareTo(SaveFormatComparator par1SaveFormatComparator) {
+		return this.lastTimePlayed < par1SaveFormatComparator.lastTimePlayed ? 1 : (this.lastTimePlayed > par1SaveFormatComparator.lastTimePlayed ? -1 : this.fileName.compareTo(par1SaveFormatComparator.fileName));
 	}
 
+	/**
+	 * Gets the EnumGameType.
+	 */
 	public EnumGameType getEnumGameType() {
 		return this.theEnumGameType;
 	}
@@ -49,11 +64,14 @@
 		return this.hardcore;
 	}
 
+	/**
+	 * @return {@code true} if cheats are enabled for this world
+	 */
 	public boolean getCheatsEnabled() {
 		return this.cheatsEnabled;
 	}
 
-	public int compareTo(Object var1) {
-		return this.compareTo((SaveFormatComparator)var1);
+	public int compareTo(Object par1Obj) {
+		return this.compareTo((SaveFormatComparator)par1Obj);
 	}
 }
