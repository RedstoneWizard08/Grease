--- net/minecraft/src/SimpleResource.java
+++ net/minecraft/src/SimpleResource.java
@@ -6,64 +6,64 @@
 import java.io.BufferedReader;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import java.io.Reader;
 import java.util.Map;
 import org.apache.commons.io.IOUtils;
 
 public class SimpleResource implements Resource {
-	private final Map a = Maps.newHashMap();
+	private final Map mapMetadataSections = Maps.newHashMap();
 	private final ResourceLocation srResourceLocation;
-	private final InputStream c;
-	private final InputStream d;
+	private final InputStream resourceInputStream;
+	private final InputStream mcmetaInputStream;
 	private final MetadataSerializer srMetadataSerializer;
 	private boolean mcmetaJsonChecked;
-	private JsonObject g;
+	private JsonObject mcmetaJson;
 
-	public SimpleResource(ResourceLocation var1, InputStream var2, InputStream var3, MetadataSerializer var4) {
-		this.srResourceLocation = var1;
-		this.c = var2;
-		this.d = var3;
-		this.srMetadataSerializer = var4;
+	public SimpleResource(ResourceLocation par1ResourceLocation, InputStream par2InputStream, InputStream par3InputStream, MetadataSerializer par4MetadataSerializer) {
+		this.srResourceLocation = par1ResourceLocation;
+		this.resourceInputStream = par2InputStream;
+		this.mcmetaInputStream = par3InputStream;
+		this.srMetadataSerializer = par4MetadataSerializer;
 	}
 
 	public InputStream getInputStream() {
-		return this.c;
+		return this.resourceInputStream;
 	}
 
 	public boolean hasMetadata() {
-		return this.d != null;
+		return this.mcmetaInputStream != null;
 	}
 
-	public MetadataSection getMetadata(String var1) {
-		if(!this.hasMetadata()) {
+	public MetadataSection getMetadata(String par1Str) {
+		if (!this.hasMetadata()) {
 			return null;
 		} else {
-			if(this.g == null && !this.mcmetaJsonChecked) {
+			if (this.mcmetaJson == null && !this.mcmetaJsonChecked) {
 				this.mcmetaJsonChecked = true;
 				BufferedReader var2 = null;
 
 				try {
-					var2 = new BufferedReader(new InputStreamReader(this.d));
-					this.g = (new JsonParser()).parse((Reader)var2).getAsJsonObject();
+					var2 = new BufferedReader(new InputStreamReader(this.mcmetaInputStream));
+					this.mcmetaJson = (new JsonParser()).parse(var2).getAsJsonObject();
 				} finally {
-					IOUtils.closeQuietly((Reader)var2);
+					IOUtils.closeQuietly(var2);
 				}
 			}
 
-			MetadataSection var6 = (MetadataSection)this.a.get(var1);
-			if(var6 == null) {
-				var6 = this.srMetadataSerializer.parseMetadataSection(var1, this.g);
+			MetadataSection var6 = (MetadataSection)this.mapMetadataSections.get(par1Str);
+
+			if (var6 == null) {
+				var6 = this.srMetadataSerializer.parseMetadataSection(par1Str, this.mcmetaJson);
 			}
 
 			return var6;
 		}
 	}
 
-	public boolean equals(Object var1) {
-		if(this == var1) {
+	public boolean equals(Object par1Obj) {
+		if (this == par1Obj) {
 			return true;
-		} else if(var1 instanceof SimpleResource) {
-			SimpleResource var2 = (SimpleResource)var1;
+		} else if (par1Obj instanceof SimpleResource) {
+			SimpleResource var2 = (SimpleResource)par1Obj;
 			return this.srResourceLocation != null ? this.srResourceLocation.equals(var2.srResourceLocation) : var2.srResourceLocation == null;
 		} else {
 			return false;
