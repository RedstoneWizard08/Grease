--- net/minecraft/src/SlotBrewingStandPotion.java
+++ net/minecraft/src/SlotBrewingStandPotion.java
@@ -1,30 +1,42 @@
 package net.minecraft.src;
 
 class SlotBrewingStandPotion extends Slot {
+
+	/** The player that has this container open. */
 	private EntityPlayer player;
 
-	public SlotBrewingStandPotion(EntityPlayer var1, IInventory var2, int var3, int var4, int var5) {
-		super(var2, var3, var4, var5);
-		this.player = var1;
-	}
-
-	public boolean isItemValid(ItemStack var1) {
-		return canHoldPotion(var1);
-	}
-
+	public SlotBrewingStandPotion(EntityPlayer par1EntityPlayer, IInventory par2IInventory, int par3, int par4, int par5) {
+		super(par2IInventory, par3, par4, par5);
+		this.player = par1EntityPlayer;
+	}
+
+	/**
+	 * Check if the stack is a valid item for this slot. Always true beside for the armor slots.
+	 */
+	public boolean isItemValid(ItemStack par1ItemStack) {
+		return canHoldPotion(par1ItemStack);
+	}
+
+	/**
+	 * Returns the maximum stack size for a given slot (usually the same as getInventoryStackLimit(), but 1 in the case of
+	 * armor slots)
+	 */
 	public int getSlotStackLimit() {
 		return 1;
 	}
 
-	public void onPickupFromSlot(EntityPlayer var1, ItemStack var2) {
-		if(var2.itemID == Item.potion.itemID && var2.getItemDamage() > 0) {
+	public void onPickupFromSlot(EntityPlayer par1EntityPlayer, ItemStack par2ItemStack) {
+		if (par2ItemStack.itemID == Item.potion.itemID && par2ItemStack.getItemDamage() > 0) {
 			this.player.addStat(AchievementList.potion, 1);
 		}
 
-		super.onPickupFromSlot(var1, var2);
+		super.onPickupFromSlot(par1EntityPlayer, par2ItemStack);
 	}
 
-	public static boolean canHoldPotion(ItemStack var0) {
-		return var0 != null && (var0.itemID == Item.potion.itemID || var0.itemID == Item.glassBottle.itemID);
+	/**
+	 * Returns true if this itemstack can be filled with a potion
+	 */
+	public static boolean canHoldPotion(ItemStack par0ItemStack) {
+		return par0ItemStack != null && (par0ItemStack.itemID == Item.potion.itemID || par0ItemStack.itemID == Item.glassBottle.itemID);
 	}
 }
