--- net/minecraft/src/TexturedQuad.java
+++ net/minecraft/src/TexturedQuad.java
@@ -5,47 +5,48 @@
 	public int nVertices;
 	private boolean invertNormal;
 
-	public TexturedQuad(PositionTextureVertex[] var1) {
-		this.vertexPositions = var1;
-		this.nVertices = var1.length;
+	public TexturedQuad(PositionTextureVertex[] par1ArrayOfPositionTextureVertex) {
+		this.vertexPositions = par1ArrayOfPositionTextureVertex;
+		this.nVertices = par1ArrayOfPositionTextureVertex.length;
 	}
 
-	public TexturedQuad(PositionTextureVertex[] var1, int var2, int var3, int var4, int var5, float var6, float var7) {
-		this(var1);
-		float var8 = 0.0F / var6;
-		float var9 = 0.0F / var7;
-		var1[0] = var1[0].setTexturePosition((float)var4 / var6 - var8, (float)var3 / var7 + var9);
-		var1[1] = var1[1].setTexturePosition((float)var2 / var6 + var8, (float)var3 / var7 + var9);
-		var1[2] = var1[2].setTexturePosition((float)var2 / var6 + var8, (float)var5 / var7 - var9);
-		var1[3] = var1[3].setTexturePosition((float)var4 / var6 - var8, (float)var5 / var7 - var9);
+	public TexturedQuad(PositionTextureVertex[] par1ArrayOfPositionTextureVertex, int par2, int par3, int par4, int par5, float par6, float par7) {
+		this(par1ArrayOfPositionTextureVertex);
+		float var8 = 0.0F / par6;
+		float var9 = 0.0F / par7;
+		par1ArrayOfPositionTextureVertex[0] = par1ArrayOfPositionTextureVertex[0].setTexturePosition((float)par4 / par6 - var8, (float)par3 / par7 + var9);
+		par1ArrayOfPositionTextureVertex[1] = par1ArrayOfPositionTextureVertex[1].setTexturePosition((float)par2 / par6 + var8, (float)par3 / par7 + var9);
+		par1ArrayOfPositionTextureVertex[2] = par1ArrayOfPositionTextureVertex[2].setTexturePosition((float)par2 / par6 + var8, (float)par5 / par7 - var9);
+		par1ArrayOfPositionTextureVertex[3] = par1ArrayOfPositionTextureVertex[3].setTexturePosition((float)par4 / par6 - var8, (float)par5 / par7 - var9);
 	}
 
 	public void flipFace() {
 		PositionTextureVertex[] var1 = new PositionTextureVertex[this.vertexPositions.length];
 
-		for(int var2 = 0; var2 < this.vertexPositions.length; ++var2) {
+		for (int var2 = 0; var2 < this.vertexPositions.length; ++var2) {
 			var1[var2] = this.vertexPositions[this.vertexPositions.length - var2 - 1];
 		}
 
 		this.vertexPositions = var1;
 	}
 
-	public void draw(Tessellator var1, float var2) {
+	public void draw(Tessellator par1Tessellator, float par2) {
 		Vec3 var3 = this.vertexPositions[1].vector3D.subtract(this.vertexPositions[0].vector3D);
 		Vec3 var4 = this.vertexPositions[1].vector3D.subtract(this.vertexPositions[2].vector3D);
 		Vec3 var5 = var4.crossProduct(var3).normalize();
-		var1.startDrawingQuads();
-		if(this.invertNormal) {
-			var1.setNormal(-((float)var5.xCoord), -((float)var5.yCoord), -((float)var5.zCoord));
+		par1Tessellator.startDrawingQuads();
+
+		if (this.invertNormal) {
+			par1Tessellator.setNormal(-((float)var5.xCoord), -((float)var5.yCoord), -((float)var5.zCoord));
 		} else {
-			var1.setNormal((float)var5.xCoord, (float)var5.yCoord, (float)var5.zCoord);
+			par1Tessellator.setNormal((float)var5.xCoord, (float)var5.yCoord, (float)var5.zCoord);
 		}
 
-		for(int var6 = 0; var6 < 4; ++var6) {
+		for (int var6 = 0; var6 < 4; ++var6) {
 			PositionTextureVertex var7 = this.vertexPositions[var6];
-			var1.addVertexWithUV((double)((float)var7.vector3D.xCoord * var2), (double)((float)var7.vector3D.yCoord * var2), (double)((float)var7.vector3D.zCoord * var2), (double)var7.texturePositionX, (double)var7.texturePositionY);
+			par1Tessellator.addVertexWithUV((double)((float)var7.vector3D.xCoord * par2), (double)((float)var7.vector3D.yCoord * par2), (double)((float)var7.vector3D.zCoord * par2), (double)var7.texturePositionX, (double)var7.texturePositionY);
 		}
 
-		var1.draw();
+		par1Tessellator.draw();
 	}
 }
