--- net/minecraft/src/ThreadConnectToServer.java
+++ net/minecraft/src/ThreadConnectToServer.java
@@ -4,44 +4,73 @@
 import java.net.UnknownHostException;
 
 class ThreadConnectToServer extends Thread {
-	final String a;
+
+	/** The IP address or domain used to connect. */
+	final String ip;
+
+	/** The port used to connect. */
 	final int port;
+
+	/** A reference to the GuiConnecting object. */
 	final GuiConnecting connectingGui;
 
-	ThreadConnectToServer(GuiConnecting var1, String var2, int var3) {
-		this.connectingGui = var1;
-		this.a = var2;
-		this.port = var3;
+	ThreadConnectToServer(GuiConnecting par1GuiConnecting, String par2Str, int par3) {
+		this.connectingGui = par1GuiConnecting;
+		this.ip = par2Str;
+		this.port = par3;
 	}
 
 	public void run() {
 		try {
-			GuiConnecting.setNetClientHandler(this.connectingGui, new NetClientHandler(GuiConnecting.func_74256_a(this.connectingGui), this.a, this.port));
-			if(GuiConnecting.isCancelled(this.connectingGui)) {
+			GuiConnecting.setNetClientHandler(this.connectingGui, new NetClientHandler(GuiConnecting.func_74256_a(this.connectingGui), this.ip, this.port));
+
+			if (GuiConnecting.isCancelled(this.connectingGui)) {
 				return;
 			}
 
-			GuiConnecting.getNetClientHandler(this.connectingGui).addToSendQueue(new Packet2ClientProtocol(78, GuiConnecting.func_74254_c(this.connectingGui).getSession().getUsername(), this.a, this.port));
+			// Spout Start
+			GuiConnecting.getNetClientHandler(this.connectingGui).addToSendQueue(new Packet250CustomPayload("REGISTER", "AutoProto:HShake".getBytes()));
+			GuiConnecting.getNetClientHandler(this.connectingGui).addToSendQueue(new Packet250CustomPayload("REGISTER", "ChkCache:setHash".getBytes()));
+			GuiConnecting.getNetClientHandler(this.connectingGui).addToSendQueue(new Packet250CustomPayload("AutoProto:HShake", "VanillaProtocol".getBytes()));
+			// Spout End			
+			GuiConnecting.getNetClientHandler(this.connectingGui).addToSendQueue(new Packet2ClientProtocol(78, GuiConnecting.func_74254_c(this.connectingGui).getSession().getUsername(), this.ip, this.port));
 		} catch (UnknownHostException var2) {
-			if(GuiConnecting.isCancelled(this.connectingGui)) {
+			if (GuiConnecting.isCancelled(this.connectingGui)) {
 				return;
 			}
 
-			GuiConnecting.func_74250_f(this.connectingGui).displayGuiScreen(new GuiDisconnected(GuiConnecting.func_98097_e(this.connectingGui), "connect.failed", "disconnect.genericReason", new Object[]{"Unknown host \'" + this.a + "\'"}));
+			// Spout Start
+			displayConnectionIssue(ip, port, "Unknown host \'" + this.ip + "\'");
+			// Spout End
 		} catch (ConnectException var3) {
-			if(GuiConnecting.isCancelled(this.connectingGui)) {
+			if (GuiConnecting.isCancelled(this.connectingGui)) {
 				return;
 			}
 
-			GuiConnecting.func_74251_g(this.connectingGui).displayGuiScreen(new GuiDisconnected(GuiConnecting.func_98097_e(this.connectingGui), "connect.failed", "disconnect.genericReason", new Object[]{var3.getMessage()}));
+			// Spout Start
+			if (var3.getMessage().toLowerCase().contains("connection refused")) {
+				displayConnectionIssue(ip, port, "The server is not currently online!");
+			} else {
+				displayConnectionIssue(ip, port, var3.getMessage());
+			}
+			// Spout End
 		} catch (Exception var4) {
-			if(GuiConnecting.isCancelled(this.connectingGui)) {
+			if (GuiConnecting.isCancelled(this.connectingGui)) {
 				return;
 			}
 
 			var4.printStackTrace();
-			GuiConnecting.func_98096_h(this.connectingGui).displayGuiScreen(new GuiDisconnected(GuiConnecting.func_98097_e(this.connectingGui), "connect.failed", "disconnect.genericReason", new Object[]{var4.toString()}));
+			// Spout Start
+			displayConnectionIssue(ip, port, var4.toString());
+			// Spout End
 		}
+	}
 
+	// Spout Start
+	private void displayConnectionIssue(String ip, int port, String message) {
+		org.spoutcraft.client.gui.error.GuiConnectionLost.lastServerIp = ip;
+		org.spoutcraft.client.gui.error.GuiConnectionLost.lastServerPort = port;
+		Minecraft.getMinecraft().displayGuiScreen(new org.spoutcraft.client.gui.error.GuiConnectionLost(message));
 	}
+	// Spout End
 }
