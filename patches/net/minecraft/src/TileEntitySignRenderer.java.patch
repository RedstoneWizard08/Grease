--- net/minecraft/src/TileEntitySignRenderer.java
+++ net/minecraft/src/TileEntitySignRenderer.java
@@ -1,71 +1,105 @@
 package net.minecraft.src;
 
+import net.minecraft.src.Minecraft;
+
 import org.lwjgl.opengl.GL11;
+import org.spoutcraft.client.config.Configuration;
 
 public class TileEntitySignRenderer extends TileEntitySpecialRenderer {
-	private static final ResourceLocation field_110638_a = new ResourceLocation("textures/entity/sign.png");
+
+	/** The ModelSign instance used by the TileEntitySignRenderer */
 	private final ModelSign modelSign = new ModelSign();
 
-	public void renderTileEntitySignAt(TileEntitySign var1, double var2, double var4, double var6, float var8) {
-		Block var9 = var1.getBlockType();
+	public void renderTileEntitySignAt(TileEntitySign par1TileEntitySign, double par2, double par4, double par6, float par8) {
+		Block var9 = par1TileEntitySign.getBlockType();
 		GL11.glPushMatrix();
-		float var10 = 2.0F / 3.0F;
+		float var10 = 0.6666667F;
 		float var12;
-		if(var9 == Block.signPost) {
-			GL11.glTranslatef((float)var2 + 0.5F, (float)var4 + 12.0F / 16.0F * var10, (float)var6 + 0.5F);
-			float var11 = (float)(var1.getBlockMetadata() * 360) / 16.0F;
+
+		if (var9 == Block.signPost) {
+			GL11.glTranslatef((float)par2 + 0.5F, (float)par4 + 0.75F * var10, (float)par6 + 0.5F);
+			float var11 = (float)(par1TileEntitySign.getBlockMetadata() * 360) / 16.0F;
 			GL11.glRotatef(-var11, 0.0F, 1.0F, 0.0F);
 			this.modelSign.signStick.showModel = true;
 		} else {
-			int var16 = var1.getBlockMetadata();
+			int var16 = par1TileEntitySign.getBlockMetadata();
 			var12 = 0.0F;
-			if(var16 == 2) {
+
+			if (var16 == 2) {
 				var12 = 180.0F;
 			}
 
-			if(var16 == 4) {
+			if (var16 == 4) {
 				var12 = 90.0F;
 			}
 
-			if(var16 == 5) {
+			if (var16 == 5) {
 				var12 = -90.0F;
 			}
 
-			GL11.glTranslatef((float)var2 + 0.5F, (float)var4 + 12.0F / 16.0F * var10, (float)var6 + 0.5F);
+			GL11.glTranslatef((float)par2 + 0.5F, (float)par4 + 0.75F * var10, (float)par6 + 0.5F);
 			GL11.glRotatef(-var12, 0.0F, 1.0F, 0.0F);
-			GL11.glTranslatef(0.0F, -(5.0F / 16.0F), -(7.0F / 16.0F));
+			GL11.glTranslatef(0.0F, -0.3125F, -0.4375F);
 			this.modelSign.signStick.showModel = false;
 		}
 
-		this.bindTexture(field_110638_a);
+		Minecraft.getMinecraft().getTextureManager().bindTexture(new ResourceLocation("textures/entity/sign.png"));
 		GL11.glPushMatrix();
 		GL11.glScalef(var10, -var10, -var10);
 		this.modelSign.renderSign();
 		GL11.glPopMatrix();
-		FontRenderer var17 = this.getFontRenderer();
-		var12 = (float)(1.0D / 60.0D) * var10;
-		GL11.glTranslatef(0.0F, 0.5F * var10, 0.07F * var10);
-		GL11.glScalef(var12, -var12, var12);
-		GL11.glNormal3f(0.0F, 0.0F, -1.0F * var12);
-		GL11.glDepthMask(false);
-		byte var13 = 0;
-
-		for(int var14 = 0; var14 < var1.a.length; ++var14) {
-			String var15 = var1.a[var14];
-			if(var14 == var1.lineBeingEdited) {
-				var15 = "> " + var15 + " <";
-				var17.drawString(var15, -var17.getStringWidth(var15) / 2, var14 * 10 - var1.a.length * 5, var13);
-			} else {
-				var17.drawString(var15, -var17.getStringWidth(var15) / 2, var14 * 10 - var1.a.length * 5, var13);
+		// Spout Start
+		if (par1TileEntitySign.hasText()) {
+			EntityLivingBase viewer = Minecraft.getMinecraft().renderViewEntity;			
+			if (viewer == null) {
+				viewer = Minecraft.getMinecraft().thePlayer;
+			}
+			if (Configuration.signDistance == Integer.MAX_VALUE || viewer != null && par1TileEntitySign.getDistanceFrom(viewer.posX, viewer.posY, viewer.posZ) < (Configuration.signDistance * Configuration.signDistance)) {
+				// Spout End
+				FontRenderer var17 = this.getFontRenderer();
+				var12 = 0.016666668F * var10;
+				GL11.glTranslatef(0.0F, 0.5F * var10, 0.07F * var10);
+				GL11.glScalef(var12, -var12, var12);
+				GL11.glNormal3f(0.0F, 0.0F, -1.0F * var12);
+				GL11.glDepthMask(false);
+				// Spout Start
+				GL11.glEnable(GL11.GL_BLEND);
+				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+				byte var13 = 0;
+				// Spout End
+
+				for (int var14 = 0; var14 < par1TileEntitySign.signText.length; ++var14) {
+					String var15 = par1TileEntitySign.signText[var14];
+
+					if (var14 == par1TileEntitySign.lineBeingEdited) {
+						// Spout Start
+						int endColumnStart = Math.min(par1TileEntitySign.columnBeingEdited,  var15.length());
+						String before = "";
+						if (endColumnStart > 0) {
+							before = var15.substring(0, endColumnStart);
+						}
+						String after = "";
+						if (var15.length() - par1TileEntitySign.columnBeingEdited > 0) {
+							after = var15.substring(par1TileEntitySign.columnBeingEdited, var15.length());
+						}
+						var15 = before + "_" + after;
+						// Spout End
+						var17.drawString(var15, -var17.getStringWidth(var15) / 2, var14 * 10 - par1TileEntitySign.signText.length * 5, var13);
+					} else {
+						var17.drawString(var15, -var17.getStringWidth(var15) / 2, var14 * 10 - par1TileEntitySign.signText.length * 5, var13);
+					}
+				}
+
+				GL11.glDepthMask(true);
+				GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+				// Spout Start
 			}
 		}
-
-		GL11.glDepthMask(true);
-		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		// Spout End
 		GL11.glPopMatrix();
 	}
 
-	public void renderTileEntityAt(TileEntity var1, double var2, double var4, double var6, float var8) {
-		this.renderTileEntitySignAt((TileEntitySign)var1, var2, var4, var6, var8);
+	public void renderTileEntityAt(TileEntity par1TileEntity, double par2, double par4, double par6, float par8) {
+		this.renderTileEntitySignAt((TileEntitySign)par1TileEntity, par2, par4, par6, par8);
 	}
 }
