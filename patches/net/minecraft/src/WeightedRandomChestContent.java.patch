--- net/minecraft/src/WeightedRandomChestContent.java
+++ net/minecraft/src/WeightedRandomChestContent.java
@@ -3,74 +3,86 @@
 import java.util.Random;
 
 public class WeightedRandomChestContent extends WeightedRandomItem {
+
+	/** The Item/Block ID to generate in the Chest. */
 	private ItemStack theItemId;
+
+	/** The minimum chance of item generating. */
 	private int theMinimumChanceToGenerateItem;
+
+	/** The maximum chance of item generating. */
 	private int theMaximumChanceToGenerateItem;
 
-	public WeightedRandomChestContent(int var1, int var2, int var3, int var4, int var5) {
-		super(var5);
-		this.theItemId = new ItemStack(var1, 1, var2);
-		this.theMinimumChanceToGenerateItem = var3;
-		this.theMaximumChanceToGenerateItem = var4;
-	}
-
-	public WeightedRandomChestContent(ItemStack var1, int var2, int var3, int var4) {
-		super(var4);
-		this.theItemId = var1;
-		this.theMinimumChanceToGenerateItem = var2;
-		this.theMaximumChanceToGenerateItem = var3;
-	}
-
-	public static void generateChestContents(Random var0, WeightedRandomChestContent[] var1, IInventory var2, int var3) {
-		for(int var4 = 0; var4 < var3; ++var4) {
-			WeightedRandomChestContent var5 = (WeightedRandomChestContent)WeightedRandom.getRandomItem(var0, (WeightedRandomItem[])var1);
-			int var6 = var5.theMinimumChanceToGenerateItem + var0.nextInt(var5.theMaximumChanceToGenerateItem - var5.theMinimumChanceToGenerateItem + 1);
-			if(var5.theItemId.getMaxStackSize() >= var6) {
-				ItemStack var9 = var5.theItemId.copy();
-				var9.stackSize = var6;
-				var2.setInventorySlotContents(var0.nextInt(var2.getSizeInventory()), var9);
-			} else {
-				for(int var7 = 0; var7 < var6; ++var7) {
-					ItemStack var8 = var5.theItemId.copy();
-					var8.stackSize = 1;
-					var2.setInventorySlotContents(var0.nextInt(var2.getSizeInventory()), var8);
-				}
-			}
-		}
-
-	}
-
-	public static void generateDispenserContents(Random var0, WeightedRandomChestContent[] var1, TileEntityDispenser var2, int var3) {
-		for(int var4 = 0; var4 < var3; ++var4) {
-			WeightedRandomChestContent var5 = (WeightedRandomChestContent)WeightedRandom.getRandomItem(var0, (WeightedRandomItem[])var1);
-			int var6 = var5.theMinimumChanceToGenerateItem + var0.nextInt(var5.theMaximumChanceToGenerateItem - var5.theMinimumChanceToGenerateItem + 1);
-			if(var5.theItemId.getMaxStackSize() >= var6) {
-				ItemStack var9 = var5.theItemId.copy();
-				var9.stackSize = var6;
-				var2.setInventorySlotContents(var0.nextInt(var2.getSizeInventory()), var9);
-			} else {
-				for(int var7 = 0; var7 < var6; ++var7) {
-					ItemStack var8 = var5.theItemId.copy();
-					var8.stackSize = 1;
-					var2.setInventorySlotContents(var0.nextInt(var2.getSizeInventory()), var8);
-				}
-			}
-		}
-
-	}
-
-	public static WeightedRandomChestContent[] func_92080_a(WeightedRandomChestContent[] var0, WeightedRandomChestContent... var1) {
-		WeightedRandomChestContent[] var2 = new WeightedRandomChestContent[var0.length + var1.length];
+	public WeightedRandomChestContent(int par1, int par2, int par3, int par4, int par5) {
+		super(par5);
+		this.theItemId = new ItemStack(par1, 1, par2);
+		this.theMinimumChanceToGenerateItem = par3;
+		this.theMaximumChanceToGenerateItem = par4;
+	}
+
+	public WeightedRandomChestContent(ItemStack par1ItemStack, int par2, int par3, int par4) {
+		super(par4);
+		this.theItemId = par1ItemStack;
+		this.theMinimumChanceToGenerateItem = par2;
+		this.theMaximumChanceToGenerateItem = par3;
+	}
+
+	/**
+	 * Generates the Chest contents.
+	 */
+	public static void generateChestContents(Random par0Random, WeightedRandomChestContent[] par1ArrayOfWeightedRandomChestContent, IInventory par2IInventory, int par3) {
+		for (int var4 = 0; var4 < par3; ++var4) {
+			WeightedRandomChestContent var5 = (WeightedRandomChestContent)WeightedRandom.getRandomItem(par0Random, par1ArrayOfWeightedRandomChestContent);
+			int var6 = var5.theMinimumChanceToGenerateItem + par0Random.nextInt(var5.theMaximumChanceToGenerateItem - var5.theMinimumChanceToGenerateItem + 1);
+
+			if (var5.theItemId.getMaxStackSize() >= var6) {
+				ItemStack var7 = var5.theItemId.copy();
+				var7.stackSize = var6;
+				par2IInventory.setInventorySlotContents(par0Random.nextInt(par2IInventory.getSizeInventory()), var7);
+			} else {
+				for (int var9 = 0; var9 < var6; ++var9) {
+					ItemStack var8 = var5.theItemId.copy();
+					var8.stackSize = 1;
+					par2IInventory.setInventorySlotContents(par0Random.nextInt(par2IInventory.getSizeInventory()), var8);
+				}
+			}
+		}
+	}
+
+	/**
+	 * Generates the Dispenser contents.
+	 */
+	public static void generateDispenserContents(Random par0Random, WeightedRandomChestContent[] par1ArrayOfWeightedRandomChestContent, TileEntityDispenser par2TileEntityDispenser, int par3) {
+		for (int var4 = 0; var4 < par3; ++var4) {
+			WeightedRandomChestContent var5 = (WeightedRandomChestContent)WeightedRandom.getRandomItem(par0Random, par1ArrayOfWeightedRandomChestContent);
+			int var6 = var5.theMinimumChanceToGenerateItem + par0Random.nextInt(var5.theMaximumChanceToGenerateItem - var5.theMinimumChanceToGenerateItem + 1);
+
+			if (var5.theItemId.getMaxStackSize() >= var6) {
+				ItemStack var7 = var5.theItemId.copy();
+				var7.stackSize = var6;
+				par2TileEntityDispenser.setInventorySlotContents(par0Random.nextInt(par2TileEntityDispenser.getSizeInventory()), var7);
+			} else {
+				for (int var9 = 0; var9 < var6; ++var9) {
+					ItemStack var8 = var5.theItemId.copy();
+					var8.stackSize = 1;
+					par2TileEntityDispenser.setInventorySlotContents(par0Random.nextInt(par2TileEntityDispenser.getSizeInventory()), var8);
+				}
+			}
+		}
+	}
+
+	public static WeightedRandomChestContent[] func_92080_a(WeightedRandomChestContent[] par0ArrayOfWeightedRandomChestContent, WeightedRandomChestContent ... par1ArrayOfWeightedRandomChestContent) {
+		WeightedRandomChestContent[] var2 = new WeightedRandomChestContent[par0ArrayOfWeightedRandomChestContent.length + par1ArrayOfWeightedRandomChestContent.length];
 		int var3 = 0;
 
-		for(int var4 = 0; var4 < var0.length; ++var4) {
-			var2[var3++] = var0[var4];
+		for (int var4 = 0; var4 < par0ArrayOfWeightedRandomChestContent.length; ++var4) {
+			var2[var3++] = par0ArrayOfWeightedRandomChestContent[var4];
 		}
 
-		WeightedRandomChestContent[] var8 = var1;
-		int var5 = var1.length;
+		WeightedRandomChestContent[] var8 = par1ArrayOfWeightedRandomChestContent;
+		int var5 = par1ArrayOfWeightedRandomChestContent.length;
 
-		for(int var6 = 0; var6 < var5; ++var6) {
+		for (int var6 = 0; var6 < var5; ++var6) {
 			WeightedRandomChestContent var7 = var8[var6];
 			var2[var3++] = var7;
 		}
